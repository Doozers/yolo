// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: yolopb.proto

package yolopb

import (
	context "context"
	fmt "fmt"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"

	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Driver int32

const (
	Driver_UnknownDriver Driver = 0
	Driver_Buildkite     Driver = 1
	Driver_CircleCI      Driver = 2
	Driver_Bintray       Driver = 3
	Driver_GitHub        Driver = 4
)

var Driver_name = map[int32]string{
	0: "UnknownDriver",
	1: "Buildkite",
	2: "CircleCI",
	3: "Bintray",
	4: "GitHub",
}

var Driver_value = map[string]int32{
	"UnknownDriver": 0,
	"Buildkite":     1,
	"CircleCI":      2,
	"Bintray":       3,
	"GitHub":        4,
}

func (x Driver) String() string {
	return proto.EnumName(Driver_name, int32(x))
}

func (Driver) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a62788fcb176084a, []int{0}
}

type Build_State int32

const (
	Build_UnknownState Build_State = 0
	Build_Running      Build_State = 1
	Build_Failed       Build_State = 2
	Build_Passed       Build_State = 3
	Build_Canceled     Build_State = 4
	Build_Scheduled    Build_State = 5
	Build_Skipped      Build_State = 6
	Build_NotRun       Build_State = 7
	Build_Timedout     Build_State = 8
)

var Build_State_name = map[int32]string{
	0: "UnknownState",
	1: "Running",
	2: "Failed",
	3: "Passed",
	4: "Canceled",
	5: "Scheduled",
	6: "Skipped",
	7: "NotRun",
	8: "Timedout",
}

var Build_State_value = map[string]int32{
	"UnknownState": 0,
	"Running":      1,
	"Failed":       2,
	"Passed":       3,
	"Canceled":     4,
	"Scheduled":    5,
	"Skipped":      6,
	"NotRun":       7,
	"Timedout":     8,
}

func (x Build_State) String() string {
	return proto.EnumName(Build_State_name, int32(x))
}

func (Build_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a62788fcb176084a, []int{5, 0}
}

type MergeRequest_State int32

const (
	MergeRequest_UnknownState MergeRequest_State = 0
	MergeRequest_Opened       MergeRequest_State = 1
	MergeRequest_Closed       MergeRequest_State = 2
)

var MergeRequest_State_name = map[int32]string{
	0: "UnknownState",
	1: "Opened",
	2: "Closed",
}

var MergeRequest_State_value = map[string]int32{
	"UnknownState": 0,
	"Opened":       1,
	"Closed":       2,
}

func (x MergeRequest_State) String() string {
	return proto.EnumName(MergeRequest_State_name, int32(x))
}

func (MergeRequest_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a62788fcb176084a, []int{8, 0}
}

type Entity_Kind int32

const (
	Entity_UnknownKind  Entity_Kind = 0
	Entity_User         Entity_Kind = 1
	Entity_Organization Entity_Kind = 2
	Entity_Bot          Entity_Kind = 3
)

var Entity_Kind_name = map[int32]string{
	0: "UnknownKind",
	1: "User",
	2: "Organization",
	3: "Bot",
}

var Entity_Kind_value = map[string]int32{
	"UnknownKind":  0,
	"User":         1,
	"Organization": 2,
	"Bot":          3,
}

func (x Entity_Kind) String() string {
	return proto.EnumName(Entity_Kind_name, int32(x))
}

func (Entity_Kind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a62788fcb176084a, []int{10, 0}
}

type Artifact_State int32

const (
	Artifact_UnknownState Artifact_State = 0
	Artifact_Finished     Artifact_State = 1
	Artifact_New          Artifact_State = 2
	Artifact_Error        Artifact_State = 3
	Artifact_Deleted      Artifact_State = 4
)

var Artifact_State_name = map[int32]string{
	0: "UnknownState",
	1: "Finished",
	2: "New",
	3: "Error",
	4: "Deleted",
}

var Artifact_State_value = map[string]int32{
	"UnknownState": 0,
	"Finished":     1,
	"New":          2,
	"Error":        3,
	"Deleted":      4,
}

func (x Artifact_State) String() string {
	return proto.EnumName(Artifact_State_name, int32(x))
}

func (Artifact_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a62788fcb176084a, []int{11, 0}
}

type Artifact_Kind int32

const (
	Artifact_UnknownKind Artifact_Kind = 0
	Artifact_IPA         Artifact_Kind = 1
	Artifact_APK         Artifact_Kind = 2
	Artifact_DMG         Artifact_Kind = 3
)

var Artifact_Kind_name = map[int32]string{
	0: "UnknownKind",
	1: "IPA",
	2: "APK",
	3: "DMG",
}

var Artifact_Kind_value = map[string]int32{
	"UnknownKind": 0,
	"IPA":         1,
	"APK":         2,
	"DMG":         3,
}

func (x Artifact_Kind) String() string {
	return proto.EnumName(Artifact_Kind_name, int32(x))
}

func (Artifact_Kind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a62788fcb176084a, []int{11, 1}
}

type Ping struct {
}

func (m *Ping) Reset()         { *m = Ping{} }
func (m *Ping) String() string { return proto.CompactTextString(m) }
func (*Ping) ProtoMessage()    {}
func (*Ping) Descriptor() ([]byte, []int) {
	return fileDescriptor_a62788fcb176084a, []int{0}
}
func (m *Ping) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Ping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Ping.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Ping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ping.Merge(m, src)
}
func (m *Ping) XXX_Size() int {
	return m.Size()
}
func (m *Ping) XXX_DiscardUnknown() {
	xxx_messageInfo_Ping.DiscardUnknown(m)
}

var xxx_messageInfo_Ping proto.InternalMessageInfo

type Ping_Request struct {
}

func (m *Ping_Request) Reset()         { *m = Ping_Request{} }
func (m *Ping_Request) String() string { return proto.CompactTextString(m) }
func (*Ping_Request) ProtoMessage()    {}
func (*Ping_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_a62788fcb176084a, []int{0, 0}
}
func (m *Ping_Request) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Ping_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Ping_Request.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Ping_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ping_Request.Merge(m, src)
}
func (m *Ping_Request) XXX_Size() int {
	return m.Size()
}
func (m *Ping_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Ping_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Ping_Request proto.InternalMessageInfo

type Ping_Response struct {
}

func (m *Ping_Response) Reset()         { *m = Ping_Response{} }
func (m *Ping_Response) String() string { return proto.CompactTextString(m) }
func (*Ping_Response) ProtoMessage()    {}
func (*Ping_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_a62788fcb176084a, []int{0, 1}
}
func (m *Ping_Response) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Ping_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Ping_Response.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Ping_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ping_Response.Merge(m, src)
}
func (m *Ping_Response) XXX_Size() int {
	return m.Size()
}
func (m *Ping_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Ping_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Ping_Response proto.InternalMessageInfo

type DevDumpObjects struct {
}

func (m *DevDumpObjects) Reset()         { *m = DevDumpObjects{} }
func (m *DevDumpObjects) String() string { return proto.CompactTextString(m) }
func (*DevDumpObjects) ProtoMessage()    {}
func (*DevDumpObjects) Descriptor() ([]byte, []int) {
	return fileDescriptor_a62788fcb176084a, []int{1}
}
func (m *DevDumpObjects) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DevDumpObjects) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DevDumpObjects.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DevDumpObjects) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DevDumpObjects.Merge(m, src)
}
func (m *DevDumpObjects) XXX_Size() int {
	return m.Size()
}
func (m *DevDumpObjects) XXX_DiscardUnknown() {
	xxx_messageInfo_DevDumpObjects.DiscardUnknown(m)
}

var xxx_messageInfo_DevDumpObjects proto.InternalMessageInfo

type DevDumpObjects_Request struct {
	WithPreloading bool `protobuf:"varint,1,opt,name=with_preloading,json=withPreloading,proto3" json:"with_preloading,omitempty"`
}

func (m *DevDumpObjects_Request) Reset()         { *m = DevDumpObjects_Request{} }
func (m *DevDumpObjects_Request) String() string { return proto.CompactTextString(m) }
func (*DevDumpObjects_Request) ProtoMessage()    {}
func (*DevDumpObjects_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_a62788fcb176084a, []int{1, 0}
}
func (m *DevDumpObjects_Request) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DevDumpObjects_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DevDumpObjects_Request.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DevDumpObjects_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DevDumpObjects_Request.Merge(m, src)
}
func (m *DevDumpObjects_Request) XXX_Size() int {
	return m.Size()
}
func (m *DevDumpObjects_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_DevDumpObjects_Request.DiscardUnknown(m)
}

var xxx_messageInfo_DevDumpObjects_Request proto.InternalMessageInfo

func (m *DevDumpObjects_Request) GetWithPreloading() bool {
	if m != nil {
		return m.WithPreloading
	}
	return false
}

type DevDumpObjects_Response struct {
	Batch *Batch `protobuf:"bytes,1,opt,name=batch,proto3" json:"batch,omitempty"`
}

func (m *DevDumpObjects_Response) Reset()         { *m = DevDumpObjects_Response{} }
func (m *DevDumpObjects_Response) String() string { return proto.CompactTextString(m) }
func (*DevDumpObjects_Response) ProtoMessage()    {}
func (*DevDumpObjects_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_a62788fcb176084a, []int{1, 1}
}
func (m *DevDumpObjects_Response) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DevDumpObjects_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DevDumpObjects_Response.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DevDumpObjects_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DevDumpObjects_Response.Merge(m, src)
}
func (m *DevDumpObjects_Response) XXX_Size() int {
	return m.Size()
}
func (m *DevDumpObjects_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_DevDumpObjects_Response.DiscardUnknown(m)
}

var xxx_messageInfo_DevDumpObjects_Response proto.InternalMessageInfo

func (m *DevDumpObjects_Response) GetBatch() *Batch {
	if m != nil {
		return m.Batch
	}
	return nil
}

type Status struct {
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_a62788fcb176084a, []int{2}
}
func (m *Status) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Status.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(m, src)
}
func (m *Status) XXX_Size() int {
	return m.Size()
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

type Status_Request struct {
}

func (m *Status_Request) Reset()         { *m = Status_Request{} }
func (m *Status_Request) String() string { return proto.CompactTextString(m) }
func (*Status_Request) ProtoMessage()    {}
func (*Status_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_a62788fcb176084a, []int{2, 0}
}
func (m *Status_Request) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Status_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Status_Request.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Status_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status_Request.Merge(m, src)
}
func (m *Status_Request) XXX_Size() int {
	return m.Size()
}
func (m *Status_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Status_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Status_Request proto.InternalMessageInfo

type Status_Response struct {
	Uptime          int32  `protobuf:"varint,1,opt,name=uptime,proto3" json:"uptime,omitempty"`
	DbErr           string `protobuf:"bytes,2,opt,name=db_err,json=dbErr,proto3" json:"db_err,omitempty"`
	NbEntities      int32  `protobuf:"varint,10,opt,name=nb_entities,json=nbEntities,proto3" json:"nb_entities,omitempty"`
	NbProjects      int32  `protobuf:"varint,11,opt,name=nb_projects,json=nbProjects,proto3" json:"nb_projects,omitempty"`
	NbCommits       int32  `protobuf:"varint,12,opt,name=nb_commits,json=nbCommits,proto3" json:"nb_commits,omitempty"`
	NbReleases      int32  `protobuf:"varint,13,opt,name=nb_releases,json=nbReleases,proto3" json:"nb_releases,omitempty"`
	NbBuilds        int32  `protobuf:"varint,14,opt,name=nb_builds,json=nbBuilds,proto3" json:"nb_builds,omitempty"`
	NbMergeRequests int32  `protobuf:"varint,15,opt,name=nb_merge_requests,json=nbMergeRequests,proto3" json:"nb_merge_requests,omitempty"`
}

func (m *Status_Response) Reset()         { *m = Status_Response{} }
func (m *Status_Response) String() string { return proto.CompactTextString(m) }
func (*Status_Response) ProtoMessage()    {}
func (*Status_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_a62788fcb176084a, []int{2, 1}
}
func (m *Status_Response) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Status_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Status_Response.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Status_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status_Response.Merge(m, src)
}
func (m *Status_Response) XXX_Size() int {
	return m.Size()
}
func (m *Status_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Status_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Status_Response proto.InternalMessageInfo

func (m *Status_Response) GetUptime() int32 {
	if m != nil {
		return m.Uptime
	}
	return 0
}

func (m *Status_Response) GetDbErr() string {
	if m != nil {
		return m.DbErr
	}
	return ""
}

func (m *Status_Response) GetNbEntities() int32 {
	if m != nil {
		return m.NbEntities
	}
	return 0
}

func (m *Status_Response) GetNbProjects() int32 {
	if m != nil {
		return m.NbProjects
	}
	return 0
}

func (m *Status_Response) GetNbCommits() int32 {
	if m != nil {
		return m.NbCommits
	}
	return 0
}

func (m *Status_Response) GetNbReleases() int32 {
	if m != nil {
		return m.NbReleases
	}
	return 0
}

func (m *Status_Response) GetNbBuilds() int32 {
	if m != nil {
		return m.NbBuilds
	}
	return 0
}

func (m *Status_Response) GetNbMergeRequests() int32 {
	if m != nil {
		return m.NbMergeRequests
	}
	return 0
}

type BuildList struct {
}

func (m *BuildList) Reset()         { *m = BuildList{} }
func (m *BuildList) String() string { return proto.CompactTextString(m) }
func (*BuildList) ProtoMessage()    {}
func (*BuildList) Descriptor() ([]byte, []int) {
	return fileDescriptor_a62788fcb176084a, []int{3}
}
func (m *BuildList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BuildList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BuildList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BuildList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildList.Merge(m, src)
}
func (m *BuildList) XXX_Size() int {
	return m.Size()
}
func (m *BuildList) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildList.DiscardUnknown(m)
}

var xxx_messageInfo_BuildList proto.InternalMessageInfo

type BuildList_Request struct {
	// max amount of builds
	Limit int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// filter on artifact kinds
	ArtifactKinds []Artifact_Kind `protobuf:"varint,2,rep,packed,name=artifact_kinds,json=artifactKinds,proto3,enum=yolo.Artifact_Kind" json:"artifact_kinds,omitempty"`
	// filter builds without any artifacts
	WithArtifacts bool `protobuf:"varint,3,opt,name=with_artifacts,json=withArtifacts,proto3" json:"with_artifacts,omitempty"`
	// only a specific build by its ID or yolo_id
	BuildID []string `protobuf:"bytes,4,rep,name=build_id,json=buildId,proto3" json:"build_id,omitempty"`
	// builds of a specific project by its ID or yolo_id
	ProjectID []string `protobuf:"bytes,5,rep,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// filter on builds that contain at least on of these artifacts
	ArtifactID []string `protobuf:"bytes,6,rep,name=artifact_id,json=artifactId,proto3" json:"artifact_id,omitempty"`
	// filter by build driver (GitHub, CircleCI, ...)
	BuildDriver []Driver `protobuf:"varint,7,rep,packed,name=build_driver,json=buildDriver,proto3,enum=yolo.Driver" json:"build_driver,omitempty"`
	// filter by state of build (passed, running, failed, etc)
	BuildState []Build_State `protobuf:"varint,8,rep,packed,name=build_state,json=buildState,proto3,enum=yolo.Build_State" json:"build_state,omitempty"`
	// filter on builds for a specific merge request
	MergeRequestID []string `protobuf:"bytes,9,rep,name=mergerequest_id,json=mergerequestId,proto3" json:"mergerequest_id,omitempty"`
	// filter on builds linked to the merge requests opened by a specific author
	MergeRequestAuthorID []string `protobuf:"bytes,10,rep,name=mergerequest_author_id,json=mergerequestAuthorId,proto3" json:"mergerequest_author_id,omitempty"`
	// filter on builds with a linked merge request
	WithMergerequest bool `protobuf:"varint,11,opt,name=with_mergerequest,json=withMergerequest,proto3" json:"with_mergerequest,omitempty"`
	// filter on builds with a linked merge request of a specific state
	MergerequestState []MergeRequest_State `protobuf:"varint,12,rep,packed,name=mergerequest_state,json=mergerequestState,proto3,enum=yolo.MergeRequest_State" json:"mergerequest_state,omitempty"`
}

func (m *BuildList_Request) Reset()         { *m = BuildList_Request{} }
func (m *BuildList_Request) String() string { return proto.CompactTextString(m) }
func (*BuildList_Request) ProtoMessage()    {}
func (*BuildList_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_a62788fcb176084a, []int{3, 0}
}
func (m *BuildList_Request) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BuildList_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BuildList_Request.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BuildList_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildList_Request.Merge(m, src)
}
func (m *BuildList_Request) XXX_Size() int {
	return m.Size()
}
func (m *BuildList_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildList_Request.DiscardUnknown(m)
}

var xxx_messageInfo_BuildList_Request proto.InternalMessageInfo

func (m *BuildList_Request) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *BuildList_Request) GetArtifactKinds() []Artifact_Kind {
	if m != nil {
		return m.ArtifactKinds
	}
	return nil
}

func (m *BuildList_Request) GetWithArtifacts() bool {
	if m != nil {
		return m.WithArtifacts
	}
	return false
}

func (m *BuildList_Request) GetBuildID() []string {
	if m != nil {
		return m.BuildID
	}
	return nil
}

func (m *BuildList_Request) GetProjectID() []string {
	if m != nil {
		return m.ProjectID
	}
	return nil
}

func (m *BuildList_Request) GetArtifactID() []string {
	if m != nil {
		return m.ArtifactID
	}
	return nil
}

func (m *BuildList_Request) GetBuildDriver() []Driver {
	if m != nil {
		return m.BuildDriver
	}
	return nil
}

func (m *BuildList_Request) GetBuildState() []Build_State {
	if m != nil {
		return m.BuildState
	}
	return nil
}

func (m *BuildList_Request) GetMergeRequestID() []string {
	if m != nil {
		return m.MergeRequestID
	}
	return nil
}

func (m *BuildList_Request) GetMergeRequestAuthorID() []string {
	if m != nil {
		return m.MergeRequestAuthorID
	}
	return nil
}

func (m *BuildList_Request) GetWithMergerequest() bool {
	if m != nil {
		return m.WithMergerequest
	}
	return false
}

func (m *BuildList_Request) GetMergerequestState() []MergeRequest_State {
	if m != nil {
		return m.MergerequestState
	}
	return nil
}

type BuildList_Response struct {
	Builds []*Build `protobuf:"bytes,1,rep,name=builds,proto3" json:"builds,omitempty"`
}

func (m *BuildList_Response) Reset()         { *m = BuildList_Response{} }
func (m *BuildList_Response) String() string { return proto.CompactTextString(m) }
func (*BuildList_Response) ProtoMessage()    {}
func (*BuildList_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_a62788fcb176084a, []int{3, 1}
}
func (m *BuildList_Response) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BuildList_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BuildList_Response.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BuildList_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildList_Response.Merge(m, src)
}
func (m *BuildList_Response) XXX_Size() int {
	return m.Size()
}
func (m *BuildList_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildList_Response.DiscardUnknown(m)
}

var xxx_messageInfo_BuildList_Response proto.InternalMessageInfo

func (m *BuildList_Response) GetBuilds() []*Build {
	if m != nil {
		return m.Builds
	}
	return nil
}

type BuildListFilters struct {
}

func (m *BuildListFilters) Reset()         { *m = BuildListFilters{} }
func (m *BuildListFilters) String() string { return proto.CompactTextString(m) }
func (*BuildListFilters) ProtoMessage()    {}
func (*BuildListFilters) Descriptor() ([]byte, []int) {
	return fileDescriptor_a62788fcb176084a, []int{4}
}
func (m *BuildListFilters) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BuildListFilters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BuildListFilters.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BuildListFilters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildListFilters.Merge(m, src)
}
func (m *BuildListFilters) XXX_Size() int {
	return m.Size()
}
func (m *BuildListFilters) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildListFilters.DiscardUnknown(m)
}

var xxx_messageInfo_BuildListFilters proto.InternalMessageInfo

type BuildListFilters_Request struct {
}

func (m *BuildListFilters_Request) Reset()         { *m = BuildListFilters_Request{} }
func (m *BuildListFilters_Request) String() string { return proto.CompactTextString(m) }
func (*BuildListFilters_Request) ProtoMessage()    {}
func (*BuildListFilters_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_a62788fcb176084a, []int{4, 0}
}
func (m *BuildListFilters_Request) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BuildListFilters_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BuildListFilters_Request.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BuildListFilters_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildListFilters_Request.Merge(m, src)
}
func (m *BuildListFilters_Request) XXX_Size() int {
	return m.Size()
}
func (m *BuildListFilters_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildListFilters_Request.DiscardUnknown(m)
}

var xxx_messageInfo_BuildListFilters_Request proto.InternalMessageInfo

type BuildListFilters_Response struct {
	Entities []*Entity  `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"`
	Projects []*Project `protobuf:"bytes,2,rep,name=projects,proto3" json:"projects,omitempty"`
}

func (m *BuildListFilters_Response) Reset()         { *m = BuildListFilters_Response{} }
func (m *BuildListFilters_Response) String() string { return proto.CompactTextString(m) }
func (*BuildListFilters_Response) ProtoMessage()    {}
func (*BuildListFilters_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_a62788fcb176084a, []int{4, 1}
}
func (m *BuildListFilters_Response) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BuildListFilters_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BuildListFilters_Response.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BuildListFilters_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildListFilters_Response.Merge(m, src)
}
func (m *BuildListFilters_Response) XXX_Size() int {
	return m.Size()
}
func (m *BuildListFilters_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildListFilters_Response.DiscardUnknown(m)
}

var xxx_messageInfo_BuildListFilters_Response proto.InternalMessageInfo

func (m *BuildListFilters_Response) GetEntities() []*Entity {
	if m != nil {
		return m.Entities
	}
	return nil
}

func (m *BuildListFilters_Response) GetProjects() []*Project {
	if m != nil {
		return m.Projects
	}
	return nil
}

type Build struct {
	ID                string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" gorm:"primary_key"`
	YoloID            string        `protobuf:"bytes,2,opt,name=yolo_id,json=yoloId,proto3" json:"yolo_id,omitempty"`
	CreatedAt         *time.Time    `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3,stdtime" json:"created_at,omitempty"`
	UpdatedAt         *time.Time    `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3,stdtime" json:"updated_at,omitempty"`
	State             Build_State   `protobuf:"varint,5,opt,name=state,proto3,enum=yolo.Build_State" json:"state,omitempty"`
	CompletedAt       *time.Time    `protobuf:"bytes,6,opt,name=completed_at,json=completedAt,proto3,stdtime" json:"completed_at,omitempty"`
	Message           string        `protobuf:"bytes,7,opt,name=message,proto3" json:"message,omitempty"`
	StartedAt         *time.Time    `protobuf:"bytes,8,opt,name=started_at,json=startedAt,proto3,stdtime" json:"started_at,omitempty"`
	FinishedAt        *time.Time    `protobuf:"bytes,9,opt,name=finished_at,json=finishedAt,proto3,stdtime" json:"finished_at,omitempty"`
	CommitURL         string        `protobuf:"bytes,10,opt,name=commit_url,json=commitUrl,proto3" json:"commit_url,omitempty"`
	Branch            string        `protobuf:"bytes,11,opt,name=branch,proto3" json:"branch,omitempty"`
	Driver            Driver        `protobuf:"varint,12,opt,name=driver,proto3,enum=yolo.Driver" json:"driver,omitempty"`
	ShortID           string        `protobuf:"bytes,13,opt,name=short_id,json=shortId,proto3" json:"short_id,omitempty"`
	HasArtifacts      []*Artifact   `protobuf:"bytes,101,rep,name=has_artifacts,json=hasArtifacts,proto3" json:"has_artifacts,omitempty" gorm:"foreignkey:HasBuildID"`
	HasCommit         *Commit       `protobuf:"bytes,102,opt,name=has_commit,json=hasCommit,proto3" json:"has_commit,omitempty"`
	HasCommitID       string        `protobuf:"bytes,103,opt,name=has_commit_id,json=hasCommitId,proto3" json:"has_commit_id,omitempty"`
	HasProject        *Project      `protobuf:"bytes,104,opt,name=has_project,json=hasProject,proto3" json:"has_project,omitempty"`
	HasProjectID      string        `protobuf:"bytes,105,opt,name=has_project_id,json=hasProjectId,proto3" json:"has_project_id,omitempty"`
	HasMergerequest   *MergeRequest `protobuf:"bytes,106,opt,name=has_mergerequest,json=hasMergerequest,proto3" json:"has_mergerequest,omitempty"`
	HasMergerequestID string        `protobuf:"bytes,107,opt,name=has_mergerequest_id,json=hasMergerequestId,proto3" json:"has_mergerequest_id,omitempty"`
}

func (m *Build) Reset()         { *m = Build{} }
func (m *Build) String() string { return proto.CompactTextString(m) }
func (*Build) ProtoMessage()    {}
func (*Build) Descriptor() ([]byte, []int) {
	return fileDescriptor_a62788fcb176084a, []int{5}
}
func (m *Build) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Build) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Build.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Build) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Build.Merge(m, src)
}
func (m *Build) XXX_Size() int {
	return m.Size()
}
func (m *Build) XXX_DiscardUnknown() {
	xxx_messageInfo_Build.DiscardUnknown(m)
}

var xxx_messageInfo_Build proto.InternalMessageInfo

func (m *Build) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Build) GetYoloID() string {
	if m != nil {
		return m.YoloID
	}
	return ""
}

func (m *Build) GetCreatedAt() *time.Time {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Build) GetUpdatedAt() *time.Time {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Build) GetState() Build_State {
	if m != nil {
		return m.State
	}
	return Build_UnknownState
}

func (m *Build) GetCompletedAt() *time.Time {
	if m != nil {
		return m.CompletedAt
	}
	return nil
}

func (m *Build) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Build) GetStartedAt() *time.Time {
	if m != nil {
		return m.StartedAt
	}
	return nil
}

func (m *Build) GetFinishedAt() *time.Time {
	if m != nil {
		return m.FinishedAt
	}
	return nil
}

func (m *Build) GetCommitURL() string {
	if m != nil {
		return m.CommitURL
	}
	return ""
}

func (m *Build) GetBranch() string {
	if m != nil {
		return m.Branch
	}
	return ""
}

func (m *Build) GetDriver() Driver {
	if m != nil {
		return m.Driver
	}
	return Driver_UnknownDriver
}

func (m *Build) GetShortID() string {
	if m != nil {
		return m.ShortID
	}
	return ""
}

func (m *Build) GetHasArtifacts() []*Artifact {
	if m != nil {
		return m.HasArtifacts
	}
	return nil
}

func (m *Build) GetHasCommit() *Commit {
	if m != nil {
		return m.HasCommit
	}
	return nil
}

func (m *Build) GetHasCommitID() string {
	if m != nil {
		return m.HasCommitID
	}
	return ""
}

func (m *Build) GetHasProject() *Project {
	if m != nil {
		return m.HasProject
	}
	return nil
}

func (m *Build) GetHasProjectID() string {
	if m != nil {
		return m.HasProjectID
	}
	return ""
}

func (m *Build) GetHasMergerequest() *MergeRequest {
	if m != nil {
		return m.HasMergerequest
	}
	return nil
}

func (m *Build) GetHasMergerequestID() string {
	if m != nil {
		return m.HasMergerequestID
	}
	return ""
}

type Release struct {
	ID              string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" gorm:"primary_key"`
	YoloID          string        `protobuf:"bytes,2,opt,name=yolo_id,json=yoloId,proto3" json:"yolo_id,omitempty"`
	CreatedAt       *time.Time    `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3,stdtime" json:"created_at,omitempty"`
	UpdatedAt       *time.Time    `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3,stdtime" json:"updated_at,omitempty"`
	Message         string        `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	Driver          Driver        `protobuf:"varint,6,opt,name=driver,proto3,enum=yolo.Driver" json:"driver,omitempty"`
	CommitURL       string        `protobuf:"bytes,7,opt,name=commit_url,json=commitUrl,proto3" json:"commit_url,omitempty"`
	ShortID         string        `protobuf:"bytes,8,opt,name=short_id,json=shortId,proto3" json:"short_id,omitempty"`
	HasArtifacts    []*Artifact   `protobuf:"bytes,101,rep,name=has_artifacts,json=hasArtifacts,proto3" json:"has_artifacts,omitempty"`
	HasCommit       *Commit       `protobuf:"bytes,102,opt,name=has_commit,json=hasCommit,proto3" json:"has_commit,omitempty"`
	HasProject      *Project      `protobuf:"bytes,103,opt,name=has_project,json=hasProject,proto3" json:"has_project,omitempty"`
	HasMergerequest *MergeRequest `protobuf:"bytes,104,opt,name=has_mergerequest,json=hasMergerequest,proto3" json:"has_mergerequest,omitempty"`
}

func (m *Release) Reset()         { *m = Release{} }
func (m *Release) String() string { return proto.CompactTextString(m) }
func (*Release) ProtoMessage()    {}
func (*Release) Descriptor() ([]byte, []int) {
	return fileDescriptor_a62788fcb176084a, []int{6}
}
func (m *Release) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Release) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Release.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Release) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Release.Merge(m, src)
}
func (m *Release) XXX_Size() int {
	return m.Size()
}
func (m *Release) XXX_DiscardUnknown() {
	xxx_messageInfo_Release.DiscardUnknown(m)
}

var xxx_messageInfo_Release proto.InternalMessageInfo

func (m *Release) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Release) GetYoloID() string {
	if m != nil {
		return m.YoloID
	}
	return ""
}

func (m *Release) GetCreatedAt() *time.Time {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Release) GetUpdatedAt() *time.Time {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Release) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Release) GetDriver() Driver {
	if m != nil {
		return m.Driver
	}
	return Driver_UnknownDriver
}

func (m *Release) GetCommitURL() string {
	if m != nil {
		return m.CommitURL
	}
	return ""
}

func (m *Release) GetShortID() string {
	if m != nil {
		return m.ShortID
	}
	return ""
}

func (m *Release) GetHasArtifacts() []*Artifact {
	if m != nil {
		return m.HasArtifacts
	}
	return nil
}

func (m *Release) GetHasCommit() *Commit {
	if m != nil {
		return m.HasCommit
	}
	return nil
}

func (m *Release) GetHasProject() *Project {
	if m != nil {
		return m.HasProject
	}
	return nil
}

func (m *Release) GetHasMergerequest() *MergeRequest {
	if m != nil {
		return m.HasMergerequest
	}
	return nil
}

type Commit struct {
	ID              string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" gorm:"primary_key"`
	YoloID          string        `protobuf:"bytes,2,opt,name=yolo_id,json=yoloId,proto3" json:"yolo_id,omitempty"`
	CreatedAt       *time.Time    `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3,stdtime" json:"created_at,omitempty"`
	UpdatedAt       *time.Time    `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3,stdtime" json:"updated_at,omitempty"`
	Message         string        `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	Driver          Driver        `protobuf:"varint,6,opt,name=driver,proto3,enum=yolo.Driver" json:"driver,omitempty"`
	Branch          string        `protobuf:"bytes,7,opt,name=branch,proto3" json:"branch,omitempty"`
	HasReleases     []*Release    `protobuf:"bytes,101,rep,name=has_releases,json=hasReleases,proto3" json:"has_releases,omitempty"`
	HasBuilds       []*Build      `protobuf:"bytes,102,rep,name=has_builds,json=hasBuilds,proto3" json:"has_builds,omitempty"`
	HasProject      *Project      `protobuf:"bytes,103,opt,name=has_project,json=hasProject,proto3" json:"has_project,omitempty"`
	HasAuthor       *Entity       `protobuf:"bytes,104,opt,name=has_author,json=hasAuthor,proto3" json:"has_author,omitempty"`
	HasMergerequest *MergeRequest `protobuf:"bytes,105,opt,name=has_mergerequest,json=hasMergerequest,proto3" json:"has_mergerequest,omitempty"`
}

func (m *Commit) Reset()         { *m = Commit{} }
func (m *Commit) String() string { return proto.CompactTextString(m) }
func (*Commit) ProtoMessage()    {}
func (*Commit) Descriptor() ([]byte, []int) {
	return fileDescriptor_a62788fcb176084a, []int{7}
}
func (m *Commit) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Commit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Commit.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Commit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Commit.Merge(m, src)
}
func (m *Commit) XXX_Size() int {
	return m.Size()
}
func (m *Commit) XXX_DiscardUnknown() {
	xxx_messageInfo_Commit.DiscardUnknown(m)
}

var xxx_messageInfo_Commit proto.InternalMessageInfo

func (m *Commit) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Commit) GetYoloID() string {
	if m != nil {
		return m.YoloID
	}
	return ""
}

func (m *Commit) GetCreatedAt() *time.Time {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Commit) GetUpdatedAt() *time.Time {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Commit) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Commit) GetDriver() Driver {
	if m != nil {
		return m.Driver
	}
	return Driver_UnknownDriver
}

func (m *Commit) GetBranch() string {
	if m != nil {
		return m.Branch
	}
	return ""
}

func (m *Commit) GetHasReleases() []*Release {
	if m != nil {
		return m.HasReleases
	}
	return nil
}

func (m *Commit) GetHasBuilds() []*Build {
	if m != nil {
		return m.HasBuilds
	}
	return nil
}

func (m *Commit) GetHasProject() *Project {
	if m != nil {
		return m.HasProject
	}
	return nil
}

func (m *Commit) GetHasAuthor() *Entity {
	if m != nil {
		return m.HasAuthor
	}
	return nil
}

func (m *Commit) GetHasMergerequest() *MergeRequest {
	if m != nil {
		return m.HasMergerequest
	}
	return nil
}

type MergeRequest struct {
	ID           string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" gorm:"primary_key"`
	YoloID       string             `protobuf:"bytes,2,opt,name=yolo_id,json=yoloId,proto3" json:"yolo_id,omitempty"`
	CreatedAt    *time.Time         `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3,stdtime" json:"created_at,omitempty"`
	UpdatedAt    *time.Time         `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3,stdtime" json:"updated_at,omitempty"`
	Title        string             `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Message      string             `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	Driver       Driver             `protobuf:"varint,7,opt,name=driver,proto3,enum=yolo.Driver" json:"driver,omitempty"`
	Branch       string             `protobuf:"bytes,8,opt,name=branch,proto3" json:"branch,omitempty"`
	State        MergeRequest_State `protobuf:"varint,9,opt,name=state,proto3,enum=yolo.MergeRequest_State" json:"state,omitempty"`
	CommitURL    string             `protobuf:"bytes,10,opt,name=commit_url,json=commitUrl,proto3" json:"commit_url,omitempty"`
	BranchURL    string             `protobuf:"bytes,11,opt,name=branch_url,json=branchUrl,proto3" json:"branch_url,omitempty"`
	ShortID      string             `protobuf:"bytes,12,opt,name=short_id,json=shortId,proto3" json:"short_id,omitempty"`
	HasReleases  []*Release         `protobuf:"bytes,101,rep,name=has_releases,json=hasReleases,proto3" json:"has_releases,omitempty"`
	HasBuilds    []*Build           `protobuf:"bytes,102,rep,name=has_builds,json=hasBuilds,proto3" json:"has_builds,omitempty"`
	HasAssignees []*Entity          `protobuf:"bytes,103,rep,name=has_assignees,json=hasAssignees,proto3" json:"has_assignees,omitempty" gorm:"many2many:mr_assignees"`
	HasReviewers []*Entity          `protobuf:"bytes,104,rep,name=has_reviewers,json=hasReviewers,proto3" json:"has_reviewers,omitempty" gorm:"many2many:mr_reviewers"`
	HasProject   *Project           `protobuf:"bytes,105,opt,name=has_project,json=hasProject,proto3" json:"has_project,omitempty"`
	HasProjectID string             `protobuf:"bytes,106,opt,name=has_project_id,json=hasProjectId,proto3" json:"has_project_id,omitempty"`
	HasAuthor    *Entity            `protobuf:"bytes,107,opt,name=has_author,json=hasAuthor,proto3" json:"has_author,omitempty"`
	HasAuthorID  string             `protobuf:"bytes,108,opt,name=has_author_id,json=hasAuthorId,proto3" json:"has_author_id,omitempty"`
	HasCommit    *Commit            `protobuf:"bytes,109,opt,name=has_commit,json=hasCommit,proto3" json:"has_commit,omitempty"`
	HasCommitID  string             `protobuf:"bytes,110,opt,name=has_commit_id,json=hasCommitId,proto3" json:"has_commit_id,omitempty"`
}

func (m *MergeRequest) Reset()         { *m = MergeRequest{} }
func (m *MergeRequest) String() string { return proto.CompactTextString(m) }
func (*MergeRequest) ProtoMessage()    {}
func (*MergeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a62788fcb176084a, []int{8}
}
func (m *MergeRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MergeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MergeRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MergeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MergeRequest.Merge(m, src)
}
func (m *MergeRequest) XXX_Size() int {
	return m.Size()
}
func (m *MergeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MergeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MergeRequest proto.InternalMessageInfo

func (m *MergeRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *MergeRequest) GetYoloID() string {
	if m != nil {
		return m.YoloID
	}
	return ""
}

func (m *MergeRequest) GetCreatedAt() *time.Time {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *MergeRequest) GetUpdatedAt() *time.Time {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *MergeRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *MergeRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *MergeRequest) GetDriver() Driver {
	if m != nil {
		return m.Driver
	}
	return Driver_UnknownDriver
}

func (m *MergeRequest) GetBranch() string {
	if m != nil {
		return m.Branch
	}
	return ""
}

func (m *MergeRequest) GetState() MergeRequest_State {
	if m != nil {
		return m.State
	}
	return MergeRequest_UnknownState
}

func (m *MergeRequest) GetCommitURL() string {
	if m != nil {
		return m.CommitURL
	}
	return ""
}

func (m *MergeRequest) GetBranchURL() string {
	if m != nil {
		return m.BranchURL
	}
	return ""
}

func (m *MergeRequest) GetShortID() string {
	if m != nil {
		return m.ShortID
	}
	return ""
}

func (m *MergeRequest) GetHasReleases() []*Release {
	if m != nil {
		return m.HasReleases
	}
	return nil
}

func (m *MergeRequest) GetHasBuilds() []*Build {
	if m != nil {
		return m.HasBuilds
	}
	return nil
}

func (m *MergeRequest) GetHasAssignees() []*Entity {
	if m != nil {
		return m.HasAssignees
	}
	return nil
}

func (m *MergeRequest) GetHasReviewers() []*Entity {
	if m != nil {
		return m.HasReviewers
	}
	return nil
}

func (m *MergeRequest) GetHasProject() *Project {
	if m != nil {
		return m.HasProject
	}
	return nil
}

func (m *MergeRequest) GetHasProjectID() string {
	if m != nil {
		return m.HasProjectID
	}
	return ""
}

func (m *MergeRequest) GetHasAuthor() *Entity {
	if m != nil {
		return m.HasAuthor
	}
	return nil
}

func (m *MergeRequest) GetHasAuthorID() string {
	if m != nil {
		return m.HasAuthorID
	}
	return ""
}

func (m *MergeRequest) GetHasCommit() *Commit {
	if m != nil {
		return m.HasCommit
	}
	return nil
}

func (m *MergeRequest) GetHasCommitID() string {
	if m != nil {
		return m.HasCommitID
	}
	return ""
}

type Project struct {
	ID               string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" gorm:"primary_key"`
	YoloID           string          `protobuf:"bytes,2,opt,name=yolo_id,json=yoloId,proto3" json:"yolo_id,omitempty"`
	CreatedAt        *time.Time      `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3,stdtime" json:"created_at,omitempty"`
	UpdatedAt        *time.Time      `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3,stdtime" json:"updated_at,omitempty"`
	Driver           Driver          `protobuf:"varint,5,opt,name=driver,proto3,enum=yolo.Driver" json:"driver,omitempty"`
	Name             string          `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Description      string          `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	HasArtifacts     []*Artifact     `protobuf:"bytes,101,rep,name=has_artifacts,json=hasArtifacts,proto3" json:"has_artifacts,omitempty"`
	HasBuilds        []*Build        `protobuf:"bytes,102,rep,name=has_builds,json=hasBuilds,proto3" json:"has_builds,omitempty"`
	HasCommits       []*Commit       `protobuf:"bytes,103,rep,name=has_commits,json=hasCommits,proto3" json:"has_commits,omitempty"`
	HasReleases      []*Release      `protobuf:"bytes,104,rep,name=has_releases,json=hasReleases,proto3" json:"has_releases,omitempty"`
	HasMergerequests []*MergeRequest `protobuf:"bytes,105,rep,name=has_mergerequests,json=hasMergerequests,proto3" json:"has_mergerequests,omitempty"`
	HasOwner         *Entity         `protobuf:"bytes,106,opt,name=has_owner,json=hasOwner,proto3" json:"has_owner,omitempty"`
	HasOwnerID       string          `protobuf:"bytes,107,opt,name=has_owner_id,json=hasOwnerId,proto3" json:"has_owner_id,omitempty"`
}

func (m *Project) Reset()         { *m = Project{} }
func (m *Project) String() string { return proto.CompactTextString(m) }
func (*Project) ProtoMessage()    {}
func (*Project) Descriptor() ([]byte, []int) {
	return fileDescriptor_a62788fcb176084a, []int{9}
}
func (m *Project) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Project) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Project.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Project) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Project.Merge(m, src)
}
func (m *Project) XXX_Size() int {
	return m.Size()
}
func (m *Project) XXX_DiscardUnknown() {
	xxx_messageInfo_Project.DiscardUnknown(m)
}

var xxx_messageInfo_Project proto.InternalMessageInfo

func (m *Project) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Project) GetYoloID() string {
	if m != nil {
		return m.YoloID
	}
	return ""
}

func (m *Project) GetCreatedAt() *time.Time {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Project) GetUpdatedAt() *time.Time {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Project) GetDriver() Driver {
	if m != nil {
		return m.Driver
	}
	return Driver_UnknownDriver
}

func (m *Project) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Project) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Project) GetHasArtifacts() []*Artifact {
	if m != nil {
		return m.HasArtifacts
	}
	return nil
}

func (m *Project) GetHasBuilds() []*Build {
	if m != nil {
		return m.HasBuilds
	}
	return nil
}

func (m *Project) GetHasCommits() []*Commit {
	if m != nil {
		return m.HasCommits
	}
	return nil
}

func (m *Project) GetHasReleases() []*Release {
	if m != nil {
		return m.HasReleases
	}
	return nil
}

func (m *Project) GetHasMergerequests() []*MergeRequest {
	if m != nil {
		return m.HasMergerequests
	}
	return nil
}

func (m *Project) GetHasOwner() *Entity {
	if m != nil {
		return m.HasOwner
	}
	return nil
}

func (m *Project) GetHasOwnerID() string {
	if m != nil {
		return m.HasOwnerID
	}
	return ""
}

type Entity struct {
	ID               string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" gorm:"primary_key"`
	YoloID           string          `protobuf:"bytes,2,opt,name=yolo_id,json=yoloId,proto3" json:"yolo_id,omitempty"`
	CreatedAt        *time.Time      `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3,stdtime" json:"created_at,omitempty"`
	UpdatedAt        *time.Time      `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3,stdtime" json:"updated_at,omitempty"`
	Name             string          `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Driver           Driver          `protobuf:"varint,6,opt,name=driver,proto3,enum=yolo.Driver" json:"driver,omitempty"`
	AvatarURL        string          `protobuf:"bytes,7,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	Kind             Entity_Kind     `protobuf:"varint,8,opt,name=kind,proto3,enum=yolo.Entity_Kind" json:"kind,omitempty"`
	Description      string          `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
	HasProjects      []*Project      `protobuf:"bytes,101,rep,name=has_projects,json=hasProjects,proto3" json:"has_projects,omitempty"`
	HasCommits       []*Commit       `protobuf:"bytes,102,rep,name=has_commits,json=hasCommits,proto3" json:"has_commits,omitempty"`
	HasMergerequests []*MergeRequest `protobuf:"bytes,103,rep,name=has_mergerequests,json=hasMergerequests,proto3" json:"has_mergerequests,omitempty"`
}

func (m *Entity) Reset()         { *m = Entity{} }
func (m *Entity) String() string { return proto.CompactTextString(m) }
func (*Entity) ProtoMessage()    {}
func (*Entity) Descriptor() ([]byte, []int) {
	return fileDescriptor_a62788fcb176084a, []int{10}
}
func (m *Entity) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Entity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Entity.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Entity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Entity.Merge(m, src)
}
func (m *Entity) XXX_Size() int {
	return m.Size()
}
func (m *Entity) XXX_DiscardUnknown() {
	xxx_messageInfo_Entity.DiscardUnknown(m)
}

var xxx_messageInfo_Entity proto.InternalMessageInfo

func (m *Entity) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Entity) GetYoloID() string {
	if m != nil {
		return m.YoloID
	}
	return ""
}

func (m *Entity) GetCreatedAt() *time.Time {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Entity) GetUpdatedAt() *time.Time {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Entity) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Entity) GetDriver() Driver {
	if m != nil {
		return m.Driver
	}
	return Driver_UnknownDriver
}

func (m *Entity) GetAvatarURL() string {
	if m != nil {
		return m.AvatarURL
	}
	return ""
}

func (m *Entity) GetKind() Entity_Kind {
	if m != nil {
		return m.Kind
	}
	return Entity_UnknownKind
}

func (m *Entity) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Entity) GetHasProjects() []*Project {
	if m != nil {
		return m.HasProjects
	}
	return nil
}

func (m *Entity) GetHasCommits() []*Commit {
	if m != nil {
		return m.HasCommits
	}
	return nil
}

func (m *Entity) GetHasMergerequests() []*MergeRequest {
	if m != nil {
		return m.HasMergerequests
	}
	return nil
}

type Artifact struct {
	ID                  string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" gorm:"primary_key"`
	YoloID              string         `protobuf:"bytes,2,opt,name=yolo_id,json=yoloId,proto3" json:"yolo_id,omitempty"`
	CreatedAt           *time.Time     `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3,stdtime" json:"created_at,omitempty"`
	UpdatedAt           *time.Time     `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3,stdtime" json:"updated_at,omitempty"`
	FileSize            int64          `protobuf:"varint,5,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	LocalPath           string         `protobuf:"bytes,6,opt,name=local_path,json=localPath,proto3" json:"local_path,omitempty"`
	DownloadURL         string         `protobuf:"bytes,7,opt,name=download_url,json=downloadUrl,proto3" json:"download_url,omitempty"`
	MimeType            string         `protobuf:"bytes,8,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	Sha1Sum             string         `protobuf:"bytes,9,opt,name=sha1_sum,json=sha1Sum,proto3" json:"sha1_sum,omitempty"`
	Sha256Sum           string         `protobuf:"bytes,10,opt,name=sha256_sum,json=sha256Sum,proto3" json:"sha256_sum,omitempty"`
	State               Artifact_State `protobuf:"varint,11,opt,name=state,proto3,enum=yolo.Artifact_State" json:"state,omitempty"`
	Kind                Artifact_Kind  `protobuf:"varint,12,opt,name=kind,proto3,enum=yolo.Artifact_Kind" json:"kind,omitempty"`
	Driver              Driver         `protobuf:"varint,13,opt,name=driver,proto3,enum=yolo.Driver" json:"driver,omitempty"`
	HasBuild            *Build         `protobuf:"bytes,101,opt,name=has_build,json=hasBuild,proto3" json:"has_build,omitempty"`
	HasBuildID          string         `protobuf:"bytes,102,opt,name=has_build_id,json=hasBuildId,proto3" json:"has_build_id,omitempty"`
	HasRelease          *Release       `protobuf:"bytes,103,opt,name=has_release,json=hasRelease,proto3" json:"has_release,omitempty"`
	HasReleaseID        string         `protobuf:"bytes,104,opt,name=has_release_id,json=hasReleaseId,proto3" json:"has_release_id,omitempty"`
	DLArtifactSignedURL string         `protobuf:"bytes,201,opt,name=dl_artifact_signed_url,json=dlArtifactSignedUrl,proto3" json:"dl_artifact_signed_url,omitempty"`
	PListSignedURL      string         `protobuf:"bytes,202,opt,name=plist_signed_url,json=plistSignedUrl,proto3" json:"plist_signed_url,omitempty"`
}

func (m *Artifact) Reset()         { *m = Artifact{} }
func (m *Artifact) String() string { return proto.CompactTextString(m) }
func (*Artifact) ProtoMessage()    {}
func (*Artifact) Descriptor() ([]byte, []int) {
	return fileDescriptor_a62788fcb176084a, []int{11}
}
func (m *Artifact) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Artifact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Artifact.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Artifact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Artifact.Merge(m, src)
}
func (m *Artifact) XXX_Size() int {
	return m.Size()
}
func (m *Artifact) XXX_DiscardUnknown() {
	xxx_messageInfo_Artifact.DiscardUnknown(m)
}

var xxx_messageInfo_Artifact proto.InternalMessageInfo

func (m *Artifact) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Artifact) GetYoloID() string {
	if m != nil {
		return m.YoloID
	}
	return ""
}

func (m *Artifact) GetCreatedAt() *time.Time {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Artifact) GetUpdatedAt() *time.Time {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Artifact) GetFileSize() int64 {
	if m != nil {
		return m.FileSize
	}
	return 0
}

func (m *Artifact) GetLocalPath() string {
	if m != nil {
		return m.LocalPath
	}
	return ""
}

func (m *Artifact) GetDownloadURL() string {
	if m != nil {
		return m.DownloadURL
	}
	return ""
}

func (m *Artifact) GetMimeType() string {
	if m != nil {
		return m.MimeType
	}
	return ""
}

func (m *Artifact) GetSha1Sum() string {
	if m != nil {
		return m.Sha1Sum
	}
	return ""
}

func (m *Artifact) GetSha256Sum() string {
	if m != nil {
		return m.Sha256Sum
	}
	return ""
}

func (m *Artifact) GetState() Artifact_State {
	if m != nil {
		return m.State
	}
	return Artifact_UnknownState
}

func (m *Artifact) GetKind() Artifact_Kind {
	if m != nil {
		return m.Kind
	}
	return Artifact_UnknownKind
}

func (m *Artifact) GetDriver() Driver {
	if m != nil {
		return m.Driver
	}
	return Driver_UnknownDriver
}

func (m *Artifact) GetHasBuild() *Build {
	if m != nil {
		return m.HasBuild
	}
	return nil
}

func (m *Artifact) GetHasBuildID() string {
	if m != nil {
		return m.HasBuildID
	}
	return ""
}

func (m *Artifact) GetHasRelease() *Release {
	if m != nil {
		return m.HasRelease
	}
	return nil
}

func (m *Artifact) GetHasReleaseID() string {
	if m != nil {
		return m.HasReleaseID
	}
	return ""
}

func (m *Artifact) GetDLArtifactSignedURL() string {
	if m != nil {
		return m.DLArtifactSignedURL
	}
	return ""
}

func (m *Artifact) GetPListSignedURL() string {
	if m != nil {
		return m.PListSignedURL
	}
	return ""
}

type Batch struct {
	Builds        []*Build        `protobuf:"bytes,1,rep,name=builds,proto3" json:"builds,omitempty"`
	Artifacts     []*Artifact     `protobuf:"bytes,2,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
	Projects      []*Project      `protobuf:"bytes,3,rep,name=projects,proto3" json:"projects,omitempty"`
	Entities      []*Entity       `protobuf:"bytes,4,rep,name=entities,proto3" json:"entities,omitempty"`
	Releases      []*Release      `protobuf:"bytes,5,rep,name=releases,proto3" json:"releases,omitempty"`
	Commits       []*Commit       `protobuf:"bytes,6,rep,name=commits,proto3" json:"commits,omitempty"`
	MergeRequests []*MergeRequest `protobuf:"bytes,7,rep,name=merge_requests,json=mergeRequests,proto3" json:"merge_requests,omitempty"`
}

func (m *Batch) Reset()         { *m = Batch{} }
func (m *Batch) String() string { return proto.CompactTextString(m) }
func (*Batch) ProtoMessage()    {}
func (*Batch) Descriptor() ([]byte, []int) {
	return fileDescriptor_a62788fcb176084a, []int{12}
}
func (m *Batch) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Batch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Batch.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Batch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Batch.Merge(m, src)
}
func (m *Batch) XXX_Size() int {
	return m.Size()
}
func (m *Batch) XXX_DiscardUnknown() {
	xxx_messageInfo_Batch.DiscardUnknown(m)
}

var xxx_messageInfo_Batch proto.InternalMessageInfo

func (m *Batch) GetBuilds() []*Build {
	if m != nil {
		return m.Builds
	}
	return nil
}

func (m *Batch) GetArtifacts() []*Artifact {
	if m != nil {
		return m.Artifacts
	}
	return nil
}

func (m *Batch) GetProjects() []*Project {
	if m != nil {
		return m.Projects
	}
	return nil
}

func (m *Batch) GetEntities() []*Entity {
	if m != nil {
		return m.Entities
	}
	return nil
}

func (m *Batch) GetReleases() []*Release {
	if m != nil {
		return m.Releases
	}
	return nil
}

func (m *Batch) GetCommits() []*Commit {
	if m != nil {
		return m.Commits
	}
	return nil
}

func (m *Batch) GetMergeRequests() []*MergeRequest {
	if m != nil {
		return m.MergeRequests
	}
	return nil
}

func init() {
	proto.RegisterEnum("yolo.Driver", Driver_name, Driver_value)
	proto.RegisterEnum("yolo.Build_State", Build_State_name, Build_State_value)
	proto.RegisterEnum("yolo.MergeRequest_State", MergeRequest_State_name, MergeRequest_State_value)
	proto.RegisterEnum("yolo.Entity_Kind", Entity_Kind_name, Entity_Kind_value)
	proto.RegisterEnum("yolo.Artifact_State", Artifact_State_name, Artifact_State_value)
	proto.RegisterEnum("yolo.Artifact_Kind", Artifact_Kind_name, Artifact_Kind_value)
	proto.RegisterType((*Ping)(nil), "yolo.Ping")
	proto.RegisterType((*Ping_Request)(nil), "yolo.Ping.Request")
	proto.RegisterType((*Ping_Response)(nil), "yolo.Ping.Response")
	proto.RegisterType((*DevDumpObjects)(nil), "yolo.DevDumpObjects")
	proto.RegisterType((*DevDumpObjects_Request)(nil), "yolo.DevDumpObjects.Request")
	proto.RegisterType((*DevDumpObjects_Response)(nil), "yolo.DevDumpObjects.Response")
	proto.RegisterType((*Status)(nil), "yolo.Status")
	proto.RegisterType((*Status_Request)(nil), "yolo.Status.Request")
	proto.RegisterType((*Status_Response)(nil), "yolo.Status.Response")
	proto.RegisterType((*BuildList)(nil), "yolo.BuildList")
	proto.RegisterType((*BuildList_Request)(nil), "yolo.BuildList.Request")
	proto.RegisterType((*BuildList_Response)(nil), "yolo.BuildList.Response")
	proto.RegisterType((*BuildListFilters)(nil), "yolo.BuildListFilters")
	proto.RegisterType((*BuildListFilters_Request)(nil), "yolo.BuildListFilters.Request")
	proto.RegisterType((*BuildListFilters_Response)(nil), "yolo.BuildListFilters.Response")
	proto.RegisterType((*Build)(nil), "yolo.Build")
	proto.RegisterType((*Release)(nil), "yolo.Release")
	proto.RegisterType((*Commit)(nil), "yolo.Commit")
	proto.RegisterType((*MergeRequest)(nil), "yolo.MergeRequest")
	proto.RegisterType((*Project)(nil), "yolo.Project")
	proto.RegisterType((*Entity)(nil), "yolo.Entity")
	proto.RegisterType((*Artifact)(nil), "yolo.Artifact")
	proto.RegisterType((*Batch)(nil), "yolo.Batch")
}

func init() { proto.RegisterFile("yolopb.proto", fileDescriptor_a62788fcb176084a) }

var fileDescriptor_a62788fcb176084a = []byte{
	// 2515 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x59, 0xcb, 0x8f, 0xdb, 0xc6,
	0x19, 0xb7, 0xde, 0xe2, 0xa7, 0xc7, 0x72, 0x67, 0xed, 0x84, 0x59, 0xdb, 0xab, 0x8d, 0xd2, 0x24,
	0x8e, 0xe3, 0x95, 0x9a, 0x4d, 0x1b, 0xa0, 0x4e, 0x1f, 0x58, 0x59, 0xb6, 0x57, 0x88, 0x1d, 0x6f,
	0xb9, 0xf1, 0xa1, 0xbd, 0x08, 0x94, 0x38, 0x2b, 0x4d, 0x96, 0x22, 0x59, 0x0e, 0x65, 0x63, 0x73,
	0xe8, 0x21, 0xe8, 0x1f, 0x10, 0xa0, 0xb7, 0x1e, 0xfb, 0x17, 0xf4, 0xd6, 0x4b, 0x7b, 0x2d, 0xd2,
	0x02, 0x05, 0x02, 0xf4, 0xd2, 0x93, 0x5a, 0x28, 0xfd, 0x07, 0xea, 0x43, 0x80, 0xde, 0x8a, 0xf9,
	0x66, 0x48, 0x91, 0xda, 0x77, 0x8b, 0x5e, 0x8c, 0x5e, 0x04, 0xce, 0xf7, 0x9a, 0xd7, 0xef, 0xfb,
	0xcd, 0xa7, 0x19, 0xa8, 0x1e, 0x79, 0x8e, 0xe7, 0x0f, 0x5a, 0x7e, 0xe0, 0x85, 0x1e, 0xc9, 0x8b,
	0xd6, 0xfa, 0x8d, 0x91, 0xe7, 0x8d, 0x1c, 0xda, 0xb6, 0x7c, 0xd6, 0xb6, 0x5c, 0xd7, 0x0b, 0xad,
	0x90, 0x79, 0x2e, 0x97, 0x36, 0xeb, 0x5b, 0x23, 0x16, 0x8e, 0xa7, 0x83, 0xd6, 0xd0, 0x9b, 0xb4,
	0x47, 0xde, 0xc8, 0x6b, 0xa3, 0x78, 0x30, 0x3d, 0xc0, 0x16, 0x36, 0xf0, 0x4b, 0x99, 0x7f, 0x98,
	0x32, 0x77, 0x2c, 0x77, 0xb4, 0x70, 0xf0, 0xc3, 0x23, 0x9f, 0xf2, 0x76, 0xc8, 0x26, 0x94, 0x87,
	0xd6, 0xc4, 0x5f, 0x7c, 0x49, 0xe7, 0xe6, 0x4d, 0xc8, 0xef, 0x31, 0x77, 0xb4, 0xae, 0x41, 0xc9,
	0xa4, 0x3f, 0x9b, 0x52, 0x1e, 0xae, 0x03, 0x94, 0x4d, 0xca, 0x7d, 0xcf, 0xe5, 0xb4, 0xc9, 0xa1,
	0xde, 0xa5, 0xcf, 0xba, 0xd3, 0x89, 0xff, 0x64, 0xf0, 0x29, 0x1d, 0x86, 0x7c, 0x7d, 0x3b, 0x36,
	0x24, 0x6f, 0xc3, 0xca, 0x73, 0x16, 0x8e, 0xfb, 0x7e, 0x40, 0x1d, 0xcf, 0xb2, 0x99, 0x3b, 0x32,
	0x32, 0x9b, 0x99, 0x5b, 0x65, 0xb3, 0x2e, 0xc4, 0x7b, 0xb1, 0x74, 0x7d, 0x6b, 0x11, 0x91, 0xbc,
	0x0e, 0x85, 0x81, 0x15, 0x0e, 0xc7, 0x68, 0x5a, 0xd9, 0xae, 0xb4, 0xc4, 0x82, 0xb4, 0x3a, 0x42,
	0x64, 0x4a, 0x4d, 0xf3, 0x57, 0x59, 0x28, 0xee, 0x87, 0x56, 0x38, 0xe5, 0xc9, 0x61, 0xfd, 0x22,
	0x9b, 0x88, 0xf2, 0x0a, 0x14, 0xa7, 0xbe, 0x98, 0x0b, 0x86, 0x29, 0x98, 0xaa, 0x45, 0xae, 0x41,
	0xd1, 0x1e, 0xf4, 0x69, 0x10, 0x18, 0xd9, 0xcd, 0xcc, 0x2d, 0xcd, 0x2c, 0xd8, 0x83, 0xfb, 0x41,
	0x40, 0x1a, 0x50, 0x71, 0x07, 0x7d, 0xea, 0x86, 0x2c, 0x64, 0x94, 0x1b, 0x80, 0x3e, 0xe0, 0x0e,
	0xee, 0x2b, 0x89, 0x32, 0xf0, 0x03, 0x0f, 0x27, 0x69, 0x54, 0x22, 0x83, 0x3d, 0x25, 0x21, 0x37,
	0x01, 0xdc, 0x41, 0x7f, 0xe8, 0x4d, 0x26, 0x2c, 0xe4, 0x46, 0x15, 0xf5, 0x9a, 0x3b, 0xb8, 0x27,
	0x05, 0xca, 0x3f, 0xa0, 0x0e, 0xb5, 0x38, 0xe5, 0x46, 0x2d, 0xf2, 0x37, 0x95, 0x84, 0x5c, 0x07,
	0xcd, 0x1d, 0xf4, 0x07, 0x53, 0xe6, 0xd8, 0xdc, 0xa8, 0xa3, 0xba, 0xec, 0x0e, 0x3a, 0xd8, 0x26,
	0xb7, 0x61, 0xd5, 0x1d, 0xf4, 0x27, 0x34, 0x18, 0xd1, 0x7e, 0x20, 0xa7, 0xcb, 0x8d, 0x15, 0x34,
	0x5a, 0x71, 0x07, 0x8f, 0x85, 0x5c, 0xad, 0x02, 0x6f, 0xfe, 0xa6, 0x00, 0x1a, 0xba, 0x3d, 0x62,
	0x3c, 0x5c, 0xff, 0x67, 0x7e, 0xb1, 0x1d, 0x57, 0xa1, 0xe0, 0xb0, 0x09, 0x0b, 0xd5, 0x92, 0xc8,
	0x06, 0xb9, 0x0b, 0x75, 0x2b, 0x08, 0xd9, 0x81, 0x35, 0x0c, 0xfb, 0x87, 0xcc, 0xb5, 0xb9, 0x91,
	0xdd, 0xcc, 0xdd, 0xaa, 0x6f, 0xaf, 0xc9, 0x85, 0xdf, 0x51, 0xba, 0xd6, 0x47, 0xcc, 0xb5, 0xcd,
	0x5a, 0x64, 0x2a, 0x5a, 0x9c, 0xbc, 0x09, 0xb8, 0x93, 0xfd, 0x48, 0xca, 0x8d, 0x1c, 0xee, 0x6f,
	0x4d, 0x48, 0x23, 0x4f, 0x4e, 0xde, 0x82, 0x32, 0x4e, 0xac, 0xcf, 0x6c, 0x23, 0xbf, 0x99, 0xbb,
	0xa5, 0x75, 0x2a, 0xf3, 0x59, 0xa3, 0x84, 0xa3, 0xec, 0x75, 0xcd, 0x12, 0x2a, 0x7b, 0x36, 0xb9,
	0x03, 0xa0, 0x56, 0x58, 0x58, 0x16, 0xd0, 0xb2, 0x36, 0x9f, 0x35, 0x34, 0xb5, 0xca, 0xbd, 0xae,
	0xa9, 0x29, 0x83, 0x9e, 0x4d, 0xda, 0x50, 0x89, 0x07, 0xce, 0x6c, 0xa3, 0x88, 0xe6, 0xf5, 0xf9,
	0xac, 0x01, 0x51, 0xcf, 0xbd, 0xae, 0x09, 0x91, 0x09, 0x3a, 0x54, 0xe5, 0x30, 0xec, 0x80, 0x3d,
	0xa3, 0x81, 0x51, 0xc2, 0x79, 0x56, 0xe5, 0x3c, 0xbb, 0x28, 0x33, 0x2b, 0x68, 0x21, 0x1b, 0x64,
	0x1b, 0x64, 0xb3, 0xcf, 0x43, 0x2b, 0xa4, 0x46, 0x19, 0xed, 0x57, 0x15, 0x20, 0x85, 0xa2, 0x25,
	0x50, 0x48, 0x4d, 0x40, 0x2b, 0xfc, 0x26, 0x1f, 0xc2, 0x0a, 0xee, 0x93, 0xda, 0x26, 0x31, 0x32,
	0x0d, 0x47, 0x46, 0xe6, 0xb3, 0x46, 0x3d, 0xb9, 0x55, 0xbd, 0xae, 0x59, 0x4f, 0x9a, 0xf6, 0x6c,
	0xf2, 0x31, 0xbc, 0x92, 0x72, 0xb6, 0xa6, 0xe1, 0xd8, 0x0b, 0x44, 0x0c, 0xc0, 0x18, 0xc6, 0x7c,
	0xd6, 0xb8, 0x9a, 0x8c, 0xb1, 0x83, 0x06, 0xbd, 0xae, 0x79, 0x35, 0xe9, 0xa7, 0xa4, 0x36, 0x79,
	0x17, 0x56, 0x71, 0x7f, 0x92, 0x4a, 0xc4, 0x6e, 0xd9, 0xd4, 0x85, 0xe2, 0x71, 0x42, 0x4e, 0x1e,
	0x02, 0x49, 0x75, 0x2e, 0x27, 0x5d, 0xc5, 0x49, 0x1b, 0x72, 0xd2, 0xc9, 0xae, 0xd5, 0xdc, 0x57,
	0x93, 0x3e, 0x28, 0x5a, 0x6f, 0x27, 0xf2, 0xf0, 0x0d, 0x28, 0x2a, 0x4c, 0x67, 0x36, 0x73, 0x89,
	0x74, 0x16, 0x32, 0x53, 0xa9, 0x9a, 0x3f, 0x07, 0x3d, 0x46, 0xec, 0x03, 0xe6, 0x84, 0x34, 0x48,
	0x25, 0x76, 0x3f, 0x11, 0xef, 0x16, 0x94, 0xe3, 0x2c, 0x95, 0x11, 0xd5, 0xfe, 0x61, 0xa6, 0x1e,
	0x99, 0xb1, 0x96, 0xbc, 0x03, 0xe5, 0x38, 0x5d, 0xb3, 0x68, 0x59, 0x93, 0x96, 0x0a, 0x4c, 0x66,
	0xac, 0x6e, 0xfe, 0x4e, 0x83, 0x02, 0x0e, 0x80, 0xdc, 0x81, 0x2c, 0xb3, 0x31, 0x3f, 0xb4, 0xce,
	0x8d, 0xf9, 0xac, 0x91, 0xed, 0x75, 0x5f, 0xcc, 0x1a, 0x64, 0xe4, 0x05, 0x93, 0xbb, 0x4d, 0x3f,
	0x60, 0x13, 0x2b, 0x38, 0xea, 0x1f, 0xd2, 0xa3, 0xa6, 0x99, 0x65, 0x36, 0x79, 0x03, 0x4a, 0x22,
	0xa2, 0xd8, 0x1f, 0x64, 0x93, 0x0e, 0xcc, 0x67, 0x8d, 0xe2, 0x4f, 0x3c, 0xc7, 0xeb, 0x75, 0xcd,
	0xa2, 0x50, 0xf5, 0x6c, 0x72, 0x0f, 0x60, 0x18, 0x50, 0x2b, 0xa4, 0x76, 0xdf, 0x0a, 0x31, 0x3f,
	0x2a, 0xdb, 0xeb, 0x2d, 0xc9, 0xef, 0xad, 0x88, 0x87, 0x5b, 0x9f, 0x44, 0xb4, 0xdb, 0x29, 0x7f,
	0x39, 0x6b, 0x64, 0xbe, 0xf8, 0x5b, 0x23, 0x63, 0x6a, 0xca, 0x6f, 0x27, 0x14, 0x41, 0xa6, 0xbe,
	0x1d, 0x05, 0xc9, 0x5f, 0x26, 0x88, 0xf2, 0xdb, 0x11, 0x74, 0x5c, 0x90, 0x7b, 0x5a, 0xd8, 0xcc,
	0x9c, 0x0c, 0x64, 0xa9, 0x27, 0x0f, 0xa1, 0x3a, 0xf4, 0x26, 0xbe, 0x43, 0x55, 0x7f, 0xc5, 0x4b,
	0xf4, 0x57, 0x89, 0x3d, 0x77, 0x42, 0x62, 0x40, 0x69, 0x42, 0x39, 0xb7, 0x46, 0xd4, 0x28, 0x21,
	0xdd, 0x46, 0x4d, 0x31, 0x21, 0x1e, 0x5a, 0x81, 0xea, 0xa0, 0x7c, 0x99, 0x09, 0x29, 0xbf, 0x9d,
	0x90, 0xdc, 0x87, 0xca, 0x01, 0x73, 0x19, 0x1f, 0xcb, 0x28, 0xda, 0x25, 0xa2, 0x40, 0xe4, 0xb8,
	0x13, 0x0a, 0xda, 0x91, 0xbc, 0xdd, 0x9f, 0x06, 0x0e, 0x72, 0xbf, 0xa2, 0x1d, 0x49, 0xde, 0x4f,
	0xcd, 0x47, 0xa6, 0x26, 0x0d, 0x9e, 0x06, 0x8e, 0x38, 0x59, 0x06, 0x81, 0xe5, 0x0e, 0xc7, 0x98,
	0x48, 0x9a, 0xa9, 0x5a, 0xe4, 0x5b, 0x50, 0x54, 0xbc, 0x52, 0xc5, 0xe5, 0x4d, 0xf3, 0x8a, 0xd2,
	0x09, 0x2a, 0xe4, 0x63, 0x2f, 0x40, 0x5e, 0xa8, 0x61, 0x4f, 0x48, 0x85, 0xfb, 0x42, 0x26, 0xa8,
	0x10, 0x95, 0x3d, 0x9b, 0x3c, 0x85, 0xda, 0xd8, 0xe2, 0x09, 0x62, 0xa5, 0x08, 0xe1, 0x7a, 0x9a,
	0x94, 0x3b, 0x9b, 0x2f, 0x66, 0x8d, 0x1b, 0x12, 0x9d, 0x07, 0x5e, 0x40, 0xd9, 0xc8, 0x3d, 0xa4,
	0x47, 0x77, 0x77, 0x2d, 0xae, 0xb8, 0xb5, 0x69, 0x56, 0xc7, 0x16, 0x5f, 0x30, 0xf1, 0xbb, 0x00,
	0x22, 0xac, 0x9c, 0x8d, 0x71, 0x80, 0x0b, 0xa6, 0x06, 0x2a, 0x27, 0x6b, 0x6a, 0x63, 0x8b, 0xcb,
	0x4f, 0xf2, 0xbe, 0x1c, 0x83, 0x5a, 0x1b, 0x66, 0x1b, 0x23, 0x1c, 0xf0, 0xca, 0x7c, 0xd6, 0xa8,
	0xec, 0x46, 0x56, 0xbd, 0xae, 0x59, 0x89, 0x5d, 0x7a, 0x36, 0x69, 0x81, 0x68, 0x46, 0x27, 0xa5,
	0x31, 0xc6, 0x2e, 0x96, 0x32, 0x4f, 0x8c, 0x41, 0x7d, 0x93, 0x0f, 0xa0, 0x9e, 0xb0, 0x17, 0xbd,
	0x30, 0xec, 0x45, 0x9f, 0xcf, 0x1a, 0xd5, 0xdd, 0xd8, 0xae, 0xd7, 0xc5, 0x99, 0xec, 0xc5, 0xec,
	0xff, 0x03, 0xd0, 0x85, 0x5f, 0x8a, 0xd9, 0x3e, 0xc5, 0xce, 0xc8, 0x71, 0xae, 0x32, 0x57, 0xc6,
	0x16, 0x4f, 0x91, 0xdd, 0x7d, 0x58, 0x5b, 0x76, 0x17, 0x7d, 0x1f, 0x62, 0xdf, 0xd7, 0xe6, 0xb3,
	0xc6, 0xea, 0x6e, 0xda, 0xa3, 0xd7, 0x35, 0x57, 0x97, 0x82, 0xf4, 0xec, 0xe6, 0xe7, 0x19, 0x28,
	0x48, 0xde, 0xd7, 0xa1, 0xfa, 0xd4, 0x3d, 0x74, 0xbd, 0xe7, 0x2e, 0xb6, 0xf5, 0x2b, 0xa4, 0x02,
	0x25, 0x73, 0xea, 0xba, 0xcc, 0x1d, 0xe9, 0x19, 0x02, 0x50, 0x7c, 0x60, 0x31, 0x87, 0xda, 0x7a,
	0x56, 0x7c, 0xef, 0x59, 0x9c, 0x53, 0x5b, 0xcf, 0x91, 0x2a, 0x94, 0xef, 0x59, 0xee, 0x90, 0x0a,
	0x4d, 0x9e, 0xd4, 0x40, 0xdb, 0x1f, 0x8e, 0xa9, 0x3d, 0x15, 0xcd, 0x82, 0x88, 0xb0, 0x7f, 0xc8,
	0x7c, 0x9f, 0xda, 0x7a, 0x51, 0x78, 0x7d, 0xec, 0x85, 0xe6, 0xd4, 0xd5, 0x4b, 0xc2, 0x4b, 0x80,
	0xda, 0xf6, 0xa6, 0xa1, 0x5e, 0x6e, 0xfe, 0x19, 0xcf, 0x78, 0xac, 0x23, 0x5e, 0x6e, 0x02, 0x4b,
	0xd0, 0x49, 0x21, 0x4d, 0x27, 0x8b, 0xe4, 0x2b, 0x9e, 0x91, 0x7c, 0xe9, 0x44, 0x2f, 0x9d, 0x93,
	0xe8, 0xc9, 0x54, 0x2d, 0x9f, 0x91, 0xaa, 0xef, 0x5f, 0x28, 0x55, 0xff, 0x9b, 0x44, 0x5c, 0xca,
	0xa9, 0xd1, 0x79, 0x39, 0x75, 0x52, 0x6e, 0x8c, 0x2f, 0x9c, 0x1b, 0xcd, 0xdf, 0xe6, 0xa1, 0xa8,
	0x7a, 0xfe, 0x3f, 0x9c, 0xce, 0x80, 0xd3, 0xe2, 0x24, 0x28, 0xa5, 0x4e, 0x82, 0x6f, 0x83, 0xd8,
	0xeb, 0x45, 0xb1, 0x4f, 0x93, 0xd5, 0x87, 0x4a, 0x54, 0x24, 0xcd, 0xb8, 0xf8, 0xbf, 0x2d, 0xd1,
	0xa0, 0x2a, 0xa5, 0x83, 0xe3, 0x95, 0x92, 0x00, 0x83, 0xfa, 0x2f, 0x70, 0x59, 0x30, 0x28, 0xa4,
	0xc9, 0x52, 0x52, 0xc1, 0x20, 0x5d, 0x33, 0x89, 0xe0, 0xb2, 0x64, 0x3c, 0x11, 0x39, 0xec, 0xe2,
	0xc8, 0xf9, 0xa6, 0x0c, 0xd5, 0xa4, 0xc5, 0xcb, 0x8d, 0x9f, 0xab, 0x50, 0x08, 0x59, 0xe8, 0x44,
	0xe8, 0x91, 0x8d, 0x24, 0xaa, 0x8a, 0xa7, 0xa1, 0xaa, 0x74, 0x21, 0x54, 0x95, 0x53, 0xa8, 0x6a,
	0x45, 0xd5, 0x9b, 0x86, 0xce, 0xa7, 0x57, 0xe4, 0xaa, 0x88, 0xbb, 0x5c, 0x55, 0x73, 0x07, 0x40,
	0xf6, 0x83, 0xd6, 0x95, 0x85, 0x75, 0x07, 0xa5, 0x68, 0x2d, 0x0d, 0x96, 0xa9, 0xb1, 0x7a, 0x06,
	0x35, 0xfe, 0x6f, 0x33, 0xe1, 0x13, 0x45, 0xbc, 0x9c, 0xb3, 0x91, 0x4b, 0x29, 0x37, 0x46, 0xc7,
	0xff, 0x10, 0x74, 0x5e, 0x7f, 0x31, 0x6b, 0xdc, 0x94, 0x78, 0x9b, 0x58, 0xee, 0xd1, 0xb6, 0xf8,
	0xb9, 0x3b, 0x09, 0x16, 0x5e, 0xaa, 0x44, 0x8a, 0x9a, 0x51, 0xd4, 0x80, 0x3e, 0x63, 0xf4, 0x39,
	0x0d, 0xb8, 0x31, 0xbe, 0x44, 0xd4, 0xd8, 0x4b, 0x46, 0x35, 0xa3, 0xe6, 0x72, 0xd6, 0xb2, 0xcb,
	0x97, 0x45, 0x9f, 0x5e, 0xa8, 0x2c, 0x4a, 0x67, 0xfb, 0xe1, 0xd9, 0xd9, 0x1e, 0x9d, 0x5c, 0xf1,
	0xbf, 0x4c, 0x27, 0x55, 0xe0, 0xc5, 0x7f, 0x2e, 0x2b, 0xb1, 0xcb, 0xa2, 0x07, 0x75, 0x72, 0x4d,
	0x2e, 0x59, 0x42, 0xba, 0xe7, 0x97, 0x90, 0xcd, 0xf7, 0x4e, 0xaf, 0xa9, 0x00, 0x8a, 0x4f, 0x7c,
	0xea, 0x52, 0x5b, 0x96, 0x54, 0xf7, 0x1c, 0x4f, 0x94, 0x51, 0xd9, 0xe6, 0xaf, 0x0b, 0x50, 0x8a,
	0x96, 0xee, 0xa5, 0xe6, 0x9c, 0x05, 0x87, 0x14, 0xce, 0xe0, 0x10, 0x02, 0x79, 0xd7, 0x9a, 0x44,
	0x04, 0x84, 0xdf, 0x64, 0x13, 0x2a, 0x36, 0xe5, 0xc3, 0x80, 0xf9, 0x21, 0xf3, 0x5c, 0x75, 0x64,
	0x25, 0x45, 0xff, 0x59, 0x21, 0x73, 0x99, 0x84, 0xdd, 0x92, 0x49, 0x10, 0x5d, 0x92, 0xa5, 0xd2,
	0x55, 0x61, 0x07, 0x62, 0x20, 0xf0, 0x63, 0xec, 0x31, 0x3e, 0x97, 0x3d, 0x7e, 0x04, 0xab, 0xcb,
	0xc7, 0x17, 0x37, 0x18, 0xba, 0x9d, 0x74, 0x7e, 0xe9, 0x4b, 0xe7, 0x17, 0x27, 0xef, 0x80, 0x18,
	0x6e, 0xdf, 0x7b, 0xee, 0xd2, 0x40, 0xfd, 0x9d, 0x58, 0xba, 0x5f, 0x18, 0x5b, 0xfc, 0x89, 0xd0,
	0x46, 0xa3, 0x43, 0xd3, 0xc5, 0x5f, 0x07, 0xbc, 0x7f, 0xda, 0x55, 0x36, 0xbd, 0x2e, 0xce, 0x47,
	0x7e, 0xdb, 0xcd, 0x6f, 0xf2, 0x50, 0x94, 0x61, 0x5e, 0x6e, 0x8c, 0x46, 0xe8, 0x2b, 0x24, 0xd0,
	0x77, 0xe1, 0x02, 0xdd, 0x7a, 0x66, 0x85, 0x56, 0xb0, 0x5c, 0xa0, 0xef, 0xa0, 0x14, 0x4f, 0x21,
	0x69, 0x20, 0x4e, 0xa1, 0x37, 0x21, 0x7f, 0xc8, 0x5c, 0x59, 0x9c, 0xc7, 0xd7, 0x19, 0x72, 0x81,
	0xe5, 0x6d, 0x25, 0xaa, 0x97, 0x81, 0xaf, 0x1d, 0x07, 0xbe, 0xda, 0xca, 0xf8, 0xba, 0x88, 0x9e,
	0x74, 0x5d, 0x54, 0x59, 0xf0, 0xec, 0x31, 0x24, 0x1f, 0x9c, 0x83, 0xe4, 0x13, 0x71, 0x39, 0xba,
	0x38, 0x2e, 0x9b, 0xdf, 0x87, 0xbc, 0x98, 0x11, 0x59, 0x81, 0x8a, 0x62, 0x44, 0xd1, 0xd4, 0xaf,
	0x90, 0x32, 0xe4, 0x9f, 0x72, 0x1a, 0xe8, 0x19, 0x41, 0x96, 0x4f, 0x82, 0x91, 0xe5, 0xb2, 0xcf,
	0xf0, 0xad, 0x40, 0xcf, 0x92, 0x12, 0xe4, 0x3a, 0x5e, 0xa8, 0xe7, 0x9a, 0xff, 0x2a, 0x41, 0x39,
	0xca, 0xd8, 0x97, 0x1b, 0x7a, 0xd7, 0x41, 0x3b, 0x60, 0x0e, 0xed, 0x73, 0xf6, 0x99, 0xc4, 0x5f,
	0xce, 0x2c, 0x0b, 0xc1, 0x3e, 0xfb, 0x8c, 0x92, 0x9b, 0x00, 0x8e, 0x37, 0xb4, 0x9c, 0xbe, 0x6f,
	0x85, 0x63, 0xc5, 0x8d, 0x1a, 0x4a, 0xf6, 0xac, 0x70, 0x4c, 0xb6, 0xa1, 0x6a, 0x7b, 0xcf, 0x5d,
	0xc7, 0xb3, 0xec, 0x04, 0xfc, 0xf0, 0xa8, 0xea, 0x2a, 0xb9, 0x00, 0x60, 0x25, 0x32, 0x12, 0x10,
	0xbc, 0x0e, 0xda, 0x84, 0x4d, 0x68, 0x3f, 0x3c, 0xf2, 0xa9, 0xaa, 0xd7, 0xca, 0x42, 0xf0, 0xc9,
	0x91, 0x4f, 0xc9, 0x6b, 0xa2, 0x4a, 0xb2, 0xde, 0xeb, 0xf3, 0xe9, 0x44, 0xa1, 0xae, 0x24, 0xda,
	0xfb, 0xd3, 0x89, 0x18, 0x0a, 0x1f, 0x5b, 0xdb, 0xdf, 0xfd, 0x00, 0x95, 0x20, 0x87, 0x22, 0x25,
	0x42, 0x7d, 0x3b, 0xaa, 0xf5, 0x2a, 0x08, 0xed, 0xab, 0x4b, 0x57, 0xf1, 0xa9, 0x3a, 0xef, 0x6d,
	0x95, 0x05, 0xf2, 0xd6, 0xe9, 0xc4, 0x5b, 0x7b, 0x99, 0x07, 0x8b, 0x14, 0xac, 0x9d, 0x91, 0x82,
	0xb7, 0x24, 0x03, 0x22, 0x9f, 0x1b, 0x34, 0xf5, 0x04, 0x83, 0x74, 0x5e, 0x8e, 0xe8, 0x3c, 0xca,
	0x9a, 0xf8, 0x66, 0xff, 0x20, 0x45, 0x80, 0xd1, 0xe5, 0x3e, 0x44, 0xf6, 0x8b, 0xbb, 0x21, 0x45,
	0xe8, 0xe9, 0xbf, 0x2e, 0x11, 0x9f, 0xc3, 0x82, 0xcf, 0xa3, 0x22, 0x48, 0xd9, 0x8b, 0x3e, 0xc6,
	0xa9, 0x22, 0x48, 0xd9, 0xa9, 0x22, 0x28, 0x6a, 0xd9, 0xe4, 0x31, 0xbc, 0x62, 0x3b, 0xf1, 0x39,
	0xd6, 0xc7, 0xca, 0x4e, 0xee, 0xe9, 0x1f, 0x25, 0xee, 0x5f, 0x9d, 0xcf, 0x1a, 0x6b, 0xdd, 0x47,
	0xd1, 0x2a, 0xed, 0xa3, 0x81, 0xd8, 0xdc, 0x35, 0xdb, 0x59, 0x12, 0x06, 0x8e, 0xf8, 0x53, 0xe4,
	0x3b, 0x8c, 0xa7, 0x02, 0xfd, 0x49, 0x06, 0xc2, 0x4b, 0xfd, 0xbd, 0x47, 0x8c, 0x27, 0x62, 0xd4,
	0xd1, 0x38, 0x76, 0x6f, 0xee, 0x9e, 0x5e, 0xce, 0x54, 0xa1, 0xfc, 0x40, 0xdd, 0x43, 0xea, 0x19,
	0x91, 0xaf, 0x1f, 0xd3, 0xe7, 0x7a, 0x96, 0x68, 0x50, 0xb8, 0x1f, 0x04, 0x5e, 0xa0, 0xe7, 0x48,
	0x05, 0x4a, 0x5d, 0x8a, 0xd7, 0xa9, 0x7a, 0xbe, 0xb9, 0x7d, 0x1a, 0x0b, 0x94, 0x20, 0xd7, 0xdb,
	0xdb, 0x91, 0x21, 0x76, 0xf6, 0x3e, 0x92, 0xb9, 0xdf, 0x7d, 0xfc, 0x50, 0xcf, 0x35, 0x7f, 0x9f,
	0x85, 0x02, 0x3e, 0x9e, 0x5d, 0xe8, 0x2a, 0x9e, 0xdc, 0x01, 0x6d, 0x71, 0xfe, 0x67, 0x4f, 0x3c,
	0xff, 0x17, 0x06, 0xa9, 0x3b, 0xf6, 0xdc, 0x99, 0x77, 0xec, 0xa9, 0x8b, 0xfb, 0xfc, 0x79, 0x17,
	0xf7, 0xf1, 0x91, 0x5f, 0x38, 0xe9, 0xc8, 0x8f, 0xd5, 0xe4, 0x2d, 0x28, 0x45, 0x14, 0x5c, 0x3c,
	0x81, 0x82, 0x23, 0x25, 0xf9, 0x1e, 0xd4, 0x97, 0x1e, 0xcf, 0x4a, 0xa7, 0x92, 0x6f, 0x6d, 0x92,
	0x7c, 0x4e, 0xbb, 0xfd, 0x63, 0x28, 0xaa, 0xd7, 0xa0, 0x55, 0xa8, 0xa9, 0x55, 0x97, 0x02, 0xfd,
	0x0a, 0xa9, 0xa9, 0xa7, 0xb6, 0x43, 0x16, 0x52, 0x3d, 0x83, 0x97, 0x79, 0x2c, 0x18, 0x3a, 0xf4,
	0x5e, 0x4f, 0xcf, 0x8a, 0xad, 0xeb, 0x30, 0x37, 0x0c, 0xac, 0x23, 0x3d, 0x27, 0x8a, 0xd5, 0x87,
	0x2c, 0xdc, 0x9d, 0x0e, 0xf4, 0xfc, 0xf6, 0x1f, 0x72, 0x50, 0x11, 0x0c, 0xba, 0x4f, 0x83, 0x67,
	0x6c, 0x48, 0xc9, 0x0f, 0xe5, 0x13, 0x2b, 0x51, 0xa3, 0x11, 0xdf, 0xad, 0xe8, 0xed, 0x63, 0x2d,
	0x25, 0x53, 0x8f, 0xae, 0xb5, 0xcf, 0xff, 0xf2, 0x8f, 0x5f, 0x66, 0x4b, 0xa4, 0xd0, 0xf6, 0x85,
	0xdf, 0x83, 0xe8, 0x35, 0x94, 0x28, 0xa2, 0x90, 0xad, 0x38, 0xc6, 0xb5, 0x25, 0xa9, 0x8a, 0xb2,
	0x82, 0x51, 0x34, 0x52, 0x6a, 0x73, 0xe9, 0xbd, 0x9f, 0x78, 0x38, 0x24, 0xaf, 0x26, 0xd0, 0x21,
	0x04, 0x71, 0x34, 0xe3, 0xb8, 0x42, 0x05, 0x5c, 0xc3, 0x80, 0x35, 0x52, 0x69, 0x23, 0x98, 0xb6,
	0x44, 0x1a, 0x10, 0xff, 0xf8, 0xdb, 0x0e, 0xd9, 0x58, 0x0a, 0xa1, 0xe4, 0x71, 0x17, 0x8d, 0x53,
	0xf5, 0xaa, 0xa7, 0xeb, 0xd8, 0xd3, 0x35, 0xb2, 0x96, 0xe8, 0x69, 0xeb, 0x40, 0x45, 0x1f, 0x2f,
	0x3f, 0x49, 0x93, 0x1b, 0x8a, 0xe9, 0x52, 0xd2, 0xb8, 0xb7, 0x9b, 0xa7, 0x68, 0x55, 0x5f, 0xaf,
	0x61, 0x5f, 0x6b, 0x64, 0xb5, 0x6d, 0xd3, 0x67, 0x5b, 0xf6, 0x74, 0xe2, 0x6f, 0x79, 0xd2, 0xa6,
	0xf3, 0x9d, 0x2f, 0xe7, 0x1b, 0x99, 0xaf, 0xe6, 0x1b, 0x99, 0xbf, 0xcf, 0x37, 0x32, 0x5f, 0x7c,
	0xbd, 0x71, 0xe5, 0xab, 0xaf, 0x37, 0xae, 0xfc, 0xf5, 0xeb, 0x8d, 0x2b, 0x3f, 0x5d, 0x1f, 0xd0,
	0x20, 0x3c, 0x6a, 0x85, 0x74, 0x38, 0x6e, 0x8b, 0xe8, 0x6d, 0xff, 0x70, 0xd4, 0x96, 0xef, 0xfc,
	0x83, 0x22, 0x1e, 0x66, 0xef, 0xff, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x63, 0xac, 0x88, 0xb1, 0xf8,
	0x1f, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// YoloServiceClient is the client API for YoloService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type YoloServiceClient interface {
	Ping(ctx context.Context, in *Ping_Request, opts ...grpc.CallOption) (*Ping_Response, error)
	Status(ctx context.Context, in *Status_Request, opts ...grpc.CallOption) (*Status_Response, error)
	BuildList(ctx context.Context, in *BuildList_Request, opts ...grpc.CallOption) (*BuildList_Response, error)
	BuildListFilters(ctx context.Context, in *BuildListFilters_Request, opts ...grpc.CallOption) (*BuildListFilters_Response, error)
	DevDumpObjects(ctx context.Context, in *DevDumpObjects_Request, opts ...grpc.CallOption) (*DevDumpObjects_Response, error)
}

type yoloServiceClient struct {
	cc *grpc.ClientConn
}

func NewYoloServiceClient(cc *grpc.ClientConn) YoloServiceClient {
	return &yoloServiceClient{cc}
}

func (c *yoloServiceClient) Ping(ctx context.Context, in *Ping_Request, opts ...grpc.CallOption) (*Ping_Response, error) {
	out := new(Ping_Response)
	err := c.cc.Invoke(ctx, "/yolo.YoloService/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yoloServiceClient) Status(ctx context.Context, in *Status_Request, opts ...grpc.CallOption) (*Status_Response, error) {
	out := new(Status_Response)
	err := c.cc.Invoke(ctx, "/yolo.YoloService/Status", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yoloServiceClient) BuildList(ctx context.Context, in *BuildList_Request, opts ...grpc.CallOption) (*BuildList_Response, error) {
	out := new(BuildList_Response)
	err := c.cc.Invoke(ctx, "/yolo.YoloService/BuildList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yoloServiceClient) BuildListFilters(ctx context.Context, in *BuildListFilters_Request, opts ...grpc.CallOption) (*BuildListFilters_Response, error) {
	out := new(BuildListFilters_Response)
	err := c.cc.Invoke(ctx, "/yolo.YoloService/BuildListFilters", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yoloServiceClient) DevDumpObjects(ctx context.Context, in *DevDumpObjects_Request, opts ...grpc.CallOption) (*DevDumpObjects_Response, error) {
	out := new(DevDumpObjects_Response)
	err := c.cc.Invoke(ctx, "/yolo.YoloService/DevDumpObjects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// YoloServiceServer is the server API for YoloService service.
type YoloServiceServer interface {
	Ping(context.Context, *Ping_Request) (*Ping_Response, error)
	Status(context.Context, *Status_Request) (*Status_Response, error)
	BuildList(context.Context, *BuildList_Request) (*BuildList_Response, error)
	BuildListFilters(context.Context, *BuildListFilters_Request) (*BuildListFilters_Response, error)
	DevDumpObjects(context.Context, *DevDumpObjects_Request) (*DevDumpObjects_Response, error)
}

// UnimplementedYoloServiceServer can be embedded to have forward compatible implementations.
type UnimplementedYoloServiceServer struct {
}

func (*UnimplementedYoloServiceServer) Ping(ctx context.Context, req *Ping_Request) (*Ping_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedYoloServiceServer) Status(ctx context.Context, req *Status_Request) (*Status_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Status not implemented")
}
func (*UnimplementedYoloServiceServer) BuildList(ctx context.Context, req *BuildList_Request) (*BuildList_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuildList not implemented")
}
func (*UnimplementedYoloServiceServer) BuildListFilters(ctx context.Context, req *BuildListFilters_Request) (*BuildListFilters_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuildListFilters not implemented")
}
func (*UnimplementedYoloServiceServer) DevDumpObjects(ctx context.Context, req *DevDumpObjects_Request) (*DevDumpObjects_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DevDumpObjects not implemented")
}

func RegisterYoloServiceServer(s *grpc.Server, srv YoloServiceServer) {
	s.RegisterService(&_YoloService_serviceDesc, srv)
}

func _YoloService_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Ping_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YoloServiceServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yolo.YoloService/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YoloServiceServer).Ping(ctx, req.(*Ping_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _YoloService_Status_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Status_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YoloServiceServer).Status(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yolo.YoloService/Status",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YoloServiceServer).Status(ctx, req.(*Status_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _YoloService_BuildList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuildList_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YoloServiceServer).BuildList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yolo.YoloService/BuildList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YoloServiceServer).BuildList(ctx, req.(*BuildList_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _YoloService_BuildListFilters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuildListFilters_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YoloServiceServer).BuildListFilters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yolo.YoloService/BuildListFilters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YoloServiceServer).BuildListFilters(ctx, req.(*BuildListFilters_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _YoloService_DevDumpObjects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DevDumpObjects_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YoloServiceServer).DevDumpObjects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yolo.YoloService/DevDumpObjects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YoloServiceServer).DevDumpObjects(ctx, req.(*DevDumpObjects_Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _YoloService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "yolo.YoloService",
	HandlerType: (*YoloServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _YoloService_Ping_Handler,
		},
		{
			MethodName: "Status",
			Handler:    _YoloService_Status_Handler,
		},
		{
			MethodName: "BuildList",
			Handler:    _YoloService_BuildList_Handler,
		},
		{
			MethodName: "BuildListFilters",
			Handler:    _YoloService_BuildListFilters_Handler,
		},
		{
			MethodName: "DevDumpObjects",
			Handler:    _YoloService_DevDumpObjects_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "yolopb.proto",
}

func (m *Ping) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Ping) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Ping) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Ping_Request) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Ping_Request) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Ping_Request) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Ping_Response) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Ping_Response) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Ping_Response) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *DevDumpObjects) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DevDumpObjects) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DevDumpObjects) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *DevDumpObjects_Request) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DevDumpObjects_Request) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DevDumpObjects_Request) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.WithPreloading {
		i--
		if m.WithPreloading {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *DevDumpObjects_Response) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DevDumpObjects_Response) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DevDumpObjects_Response) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Batch != nil {
		{
			size, err := m.Batch.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintYolopb(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Status) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Status) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Status) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Status_Request) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Status_Request) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Status_Request) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Status_Response) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Status_Response) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Status_Response) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.NbMergeRequests != 0 {
		i = encodeVarintYolopb(dAtA, i, uint64(m.NbMergeRequests))
		i--
		dAtA[i] = 0x78
	}
	if m.NbBuilds != 0 {
		i = encodeVarintYolopb(dAtA, i, uint64(m.NbBuilds))
		i--
		dAtA[i] = 0x70
	}
	if m.NbReleases != 0 {
		i = encodeVarintYolopb(dAtA, i, uint64(m.NbReleases))
		i--
		dAtA[i] = 0x68
	}
	if m.NbCommits != 0 {
		i = encodeVarintYolopb(dAtA, i, uint64(m.NbCommits))
		i--
		dAtA[i] = 0x60
	}
	if m.NbProjects != 0 {
		i = encodeVarintYolopb(dAtA, i, uint64(m.NbProjects))
		i--
		dAtA[i] = 0x58
	}
	if m.NbEntities != 0 {
		i = encodeVarintYolopb(dAtA, i, uint64(m.NbEntities))
		i--
		dAtA[i] = 0x50
	}
	if len(m.DbErr) > 0 {
		i -= len(m.DbErr)
		copy(dAtA[i:], m.DbErr)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.DbErr)))
		i--
		dAtA[i] = 0x12
	}
	if m.Uptime != 0 {
		i = encodeVarintYolopb(dAtA, i, uint64(m.Uptime))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *BuildList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BuildList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BuildList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *BuildList_Request) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BuildList_Request) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BuildList_Request) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.MergerequestState) > 0 {
		dAtA3 := make([]byte, len(m.MergerequestState)*10)
		var j2 int
		for _, num := range m.MergerequestState {
			for num >= 1<<7 {
				dAtA3[j2] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j2++
			}
			dAtA3[j2] = uint8(num)
			j2++
		}
		i -= j2
		copy(dAtA[i:], dAtA3[:j2])
		i = encodeVarintYolopb(dAtA, i, uint64(j2))
		i--
		dAtA[i] = 0x62
	}
	if m.WithMergerequest {
		i--
		if m.WithMergerequest {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x58
	}
	if len(m.MergeRequestAuthorID) > 0 {
		for iNdEx := len(m.MergeRequestAuthorID) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.MergeRequestAuthorID[iNdEx])
			copy(dAtA[i:], m.MergeRequestAuthorID[iNdEx])
			i = encodeVarintYolopb(dAtA, i, uint64(len(m.MergeRequestAuthorID[iNdEx])))
			i--
			dAtA[i] = 0x52
		}
	}
	if len(m.MergeRequestID) > 0 {
		for iNdEx := len(m.MergeRequestID) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.MergeRequestID[iNdEx])
			copy(dAtA[i:], m.MergeRequestID[iNdEx])
			i = encodeVarintYolopb(dAtA, i, uint64(len(m.MergeRequestID[iNdEx])))
			i--
			dAtA[i] = 0x4a
		}
	}
	if len(m.BuildState) > 0 {
		dAtA5 := make([]byte, len(m.BuildState)*10)
		var j4 int
		for _, num := range m.BuildState {
			for num >= 1<<7 {
				dAtA5[j4] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j4++
			}
			dAtA5[j4] = uint8(num)
			j4++
		}
		i -= j4
		copy(dAtA[i:], dAtA5[:j4])
		i = encodeVarintYolopb(dAtA, i, uint64(j4))
		i--
		dAtA[i] = 0x42
	}
	if len(m.BuildDriver) > 0 {
		dAtA7 := make([]byte, len(m.BuildDriver)*10)
		var j6 int
		for _, num := range m.BuildDriver {
			for num >= 1<<7 {
				dAtA7[j6] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j6++
			}
			dAtA7[j6] = uint8(num)
			j6++
		}
		i -= j6
		copy(dAtA[i:], dAtA7[:j6])
		i = encodeVarintYolopb(dAtA, i, uint64(j6))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.ArtifactID) > 0 {
		for iNdEx := len(m.ArtifactID) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.ArtifactID[iNdEx])
			copy(dAtA[i:], m.ArtifactID[iNdEx])
			i = encodeVarintYolopb(dAtA, i, uint64(len(m.ArtifactID[iNdEx])))
			i--
			dAtA[i] = 0x32
		}
	}
	if len(m.ProjectID) > 0 {
		for iNdEx := len(m.ProjectID) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.ProjectID[iNdEx])
			copy(dAtA[i:], m.ProjectID[iNdEx])
			i = encodeVarintYolopb(dAtA, i, uint64(len(m.ProjectID[iNdEx])))
			i--
			dAtA[i] = 0x2a
		}
	}
	if len(m.BuildID) > 0 {
		for iNdEx := len(m.BuildID) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.BuildID[iNdEx])
			copy(dAtA[i:], m.BuildID[iNdEx])
			i = encodeVarintYolopb(dAtA, i, uint64(len(m.BuildID[iNdEx])))
			i--
			dAtA[i] = 0x22
		}
	}
	if m.WithArtifacts {
		i--
		if m.WithArtifacts {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if len(m.ArtifactKinds) > 0 {
		dAtA9 := make([]byte, len(m.ArtifactKinds)*10)
		var j8 int
		for _, num := range m.ArtifactKinds {
			for num >= 1<<7 {
				dAtA9[j8] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j8++
			}
			dAtA9[j8] = uint8(num)
			j8++
		}
		i -= j8
		copy(dAtA[i:], dAtA9[:j8])
		i = encodeVarintYolopb(dAtA, i, uint64(j8))
		i--
		dAtA[i] = 0x12
	}
	if m.Limit != 0 {
		i = encodeVarintYolopb(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *BuildList_Response) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BuildList_Response) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BuildList_Response) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Builds) > 0 {
		for iNdEx := len(m.Builds) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Builds[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintYolopb(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *BuildListFilters) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BuildListFilters) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BuildListFilters) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *BuildListFilters_Request) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BuildListFilters_Request) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BuildListFilters_Request) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *BuildListFilters_Response) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BuildListFilters_Response) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BuildListFilters_Response) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Projects) > 0 {
		for iNdEx := len(m.Projects) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Projects[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintYolopb(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Entities) > 0 {
		for iNdEx := len(m.Entities) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Entities[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintYolopb(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Build) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Build) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Build) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.HasMergerequestID) > 0 {
		i -= len(m.HasMergerequestID)
		copy(dAtA[i:], m.HasMergerequestID)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.HasMergerequestID)))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xda
	}
	if m.HasMergerequest != nil {
		{
			size, err := m.HasMergerequest.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintYolopb(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xd2
	}
	if len(m.HasProjectID) > 0 {
		i -= len(m.HasProjectID)
		copy(dAtA[i:], m.HasProjectID)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.HasProjectID)))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xca
	}
	if m.HasProject != nil {
		{
			size, err := m.HasProject.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintYolopb(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xc2
	}
	if len(m.HasCommitID) > 0 {
		i -= len(m.HasCommitID)
		copy(dAtA[i:], m.HasCommitID)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.HasCommitID)))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xba
	}
	if m.HasCommit != nil {
		{
			size, err := m.HasCommit.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintYolopb(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xb2
	}
	if len(m.HasArtifacts) > 0 {
		for iNdEx := len(m.HasArtifacts) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.HasArtifacts[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintYolopb(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x6
			i--
			dAtA[i] = 0xaa
		}
	}
	if len(m.ShortID) > 0 {
		i -= len(m.ShortID)
		copy(dAtA[i:], m.ShortID)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.ShortID)))
		i--
		dAtA[i] = 0x6a
	}
	if m.Driver != 0 {
		i = encodeVarintYolopb(dAtA, i, uint64(m.Driver))
		i--
		dAtA[i] = 0x60
	}
	if len(m.Branch) > 0 {
		i -= len(m.Branch)
		copy(dAtA[i:], m.Branch)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.Branch)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.CommitURL) > 0 {
		i -= len(m.CommitURL)
		copy(dAtA[i:], m.CommitURL)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.CommitURL)))
		i--
		dAtA[i] = 0x52
	}
	if m.FinishedAt != nil {
		n13, err13 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.FinishedAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.FinishedAt):])
		if err13 != nil {
			return 0, err13
		}
		i -= n13
		i = encodeVarintYolopb(dAtA, i, uint64(n13))
		i--
		dAtA[i] = 0x4a
	}
	if m.StartedAt != nil {
		n14, err14 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.StartedAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.StartedAt):])
		if err14 != nil {
			return 0, err14
		}
		i -= n14
		i = encodeVarintYolopb(dAtA, i, uint64(n14))
		i--
		dAtA[i] = 0x42
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x3a
	}
	if m.CompletedAt != nil {
		n15, err15 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.CompletedAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.CompletedAt):])
		if err15 != nil {
			return 0, err15
		}
		i -= n15
		i = encodeVarintYolopb(dAtA, i, uint64(n15))
		i--
		dAtA[i] = 0x32
	}
	if m.State != 0 {
		i = encodeVarintYolopb(dAtA, i, uint64(m.State))
		i--
		dAtA[i] = 0x28
	}
	if m.UpdatedAt != nil {
		n16, err16 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.UpdatedAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.UpdatedAt):])
		if err16 != nil {
			return 0, err16
		}
		i -= n16
		i = encodeVarintYolopb(dAtA, i, uint64(n16))
		i--
		dAtA[i] = 0x22
	}
	if m.CreatedAt != nil {
		n17, err17 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.CreatedAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedAt):])
		if err17 != nil {
			return 0, err17
		}
		i -= n17
		i = encodeVarintYolopb(dAtA, i, uint64(n17))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.YoloID) > 0 {
		i -= len(m.YoloID)
		copy(dAtA[i:], m.YoloID)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.YoloID)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ID) > 0 {
		i -= len(m.ID)
		copy(dAtA[i:], m.ID)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.ID)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Release) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Release) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Release) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.HasMergerequest != nil {
		{
			size, err := m.HasMergerequest.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintYolopb(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xc2
	}
	if m.HasProject != nil {
		{
			size, err := m.HasProject.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintYolopb(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xba
	}
	if m.HasCommit != nil {
		{
			size, err := m.HasCommit.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintYolopb(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xb2
	}
	if len(m.HasArtifacts) > 0 {
		for iNdEx := len(m.HasArtifacts) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.HasArtifacts[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintYolopb(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x6
			i--
			dAtA[i] = 0xaa
		}
	}
	if len(m.ShortID) > 0 {
		i -= len(m.ShortID)
		copy(dAtA[i:], m.ShortID)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.ShortID)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.CommitURL) > 0 {
		i -= len(m.CommitURL)
		copy(dAtA[i:], m.CommitURL)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.CommitURL)))
		i--
		dAtA[i] = 0x3a
	}
	if m.Driver != 0 {
		i = encodeVarintYolopb(dAtA, i, uint64(m.Driver))
		i--
		dAtA[i] = 0x30
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x2a
	}
	if m.UpdatedAt != nil {
		n21, err21 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.UpdatedAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.UpdatedAt):])
		if err21 != nil {
			return 0, err21
		}
		i -= n21
		i = encodeVarintYolopb(dAtA, i, uint64(n21))
		i--
		dAtA[i] = 0x22
	}
	if m.CreatedAt != nil {
		n22, err22 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.CreatedAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedAt):])
		if err22 != nil {
			return 0, err22
		}
		i -= n22
		i = encodeVarintYolopb(dAtA, i, uint64(n22))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.YoloID) > 0 {
		i -= len(m.YoloID)
		copy(dAtA[i:], m.YoloID)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.YoloID)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ID) > 0 {
		i -= len(m.ID)
		copy(dAtA[i:], m.ID)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.ID)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Commit) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Commit) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Commit) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.HasMergerequest != nil {
		{
			size, err := m.HasMergerequest.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintYolopb(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xca
	}
	if m.HasAuthor != nil {
		{
			size, err := m.HasAuthor.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintYolopb(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xc2
	}
	if m.HasProject != nil {
		{
			size, err := m.HasProject.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintYolopb(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xba
	}
	if len(m.HasBuilds) > 0 {
		for iNdEx := len(m.HasBuilds) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.HasBuilds[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintYolopb(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x6
			i--
			dAtA[i] = 0xb2
		}
	}
	if len(m.HasReleases) > 0 {
		for iNdEx := len(m.HasReleases) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.HasReleases[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintYolopb(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x6
			i--
			dAtA[i] = 0xaa
		}
	}
	if len(m.Branch) > 0 {
		i -= len(m.Branch)
		copy(dAtA[i:], m.Branch)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.Branch)))
		i--
		dAtA[i] = 0x3a
	}
	if m.Driver != 0 {
		i = encodeVarintYolopb(dAtA, i, uint64(m.Driver))
		i--
		dAtA[i] = 0x30
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x2a
	}
	if m.UpdatedAt != nil {
		n26, err26 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.UpdatedAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.UpdatedAt):])
		if err26 != nil {
			return 0, err26
		}
		i -= n26
		i = encodeVarintYolopb(dAtA, i, uint64(n26))
		i--
		dAtA[i] = 0x22
	}
	if m.CreatedAt != nil {
		n27, err27 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.CreatedAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedAt):])
		if err27 != nil {
			return 0, err27
		}
		i -= n27
		i = encodeVarintYolopb(dAtA, i, uint64(n27))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.YoloID) > 0 {
		i -= len(m.YoloID)
		copy(dAtA[i:], m.YoloID)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.YoloID)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ID) > 0 {
		i -= len(m.ID)
		copy(dAtA[i:], m.ID)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.ID)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MergeRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MergeRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MergeRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.HasCommitID) > 0 {
		i -= len(m.HasCommitID)
		copy(dAtA[i:], m.HasCommitID)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.HasCommitID)))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xf2
	}
	if m.HasCommit != nil {
		{
			size, err := m.HasCommit.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintYolopb(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xea
	}
	if len(m.HasAuthorID) > 0 {
		i -= len(m.HasAuthorID)
		copy(dAtA[i:], m.HasAuthorID)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.HasAuthorID)))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xe2
	}
	if m.HasAuthor != nil {
		{
			size, err := m.HasAuthor.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintYolopb(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xda
	}
	if len(m.HasProjectID) > 0 {
		i -= len(m.HasProjectID)
		copy(dAtA[i:], m.HasProjectID)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.HasProjectID)))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xd2
	}
	if m.HasProject != nil {
		{
			size, err := m.HasProject.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintYolopb(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xca
	}
	if len(m.HasReviewers) > 0 {
		for iNdEx := len(m.HasReviewers) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.HasReviewers[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintYolopb(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x6
			i--
			dAtA[i] = 0xc2
		}
	}
	if len(m.HasAssignees) > 0 {
		for iNdEx := len(m.HasAssignees) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.HasAssignees[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintYolopb(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x6
			i--
			dAtA[i] = 0xba
		}
	}
	if len(m.HasBuilds) > 0 {
		for iNdEx := len(m.HasBuilds) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.HasBuilds[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintYolopb(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x6
			i--
			dAtA[i] = 0xb2
		}
	}
	if len(m.HasReleases) > 0 {
		for iNdEx := len(m.HasReleases) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.HasReleases[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintYolopb(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x6
			i--
			dAtA[i] = 0xaa
		}
	}
	if len(m.ShortID) > 0 {
		i -= len(m.ShortID)
		copy(dAtA[i:], m.ShortID)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.ShortID)))
		i--
		dAtA[i] = 0x62
	}
	if len(m.BranchURL) > 0 {
		i -= len(m.BranchURL)
		copy(dAtA[i:], m.BranchURL)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.BranchURL)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.CommitURL) > 0 {
		i -= len(m.CommitURL)
		copy(dAtA[i:], m.CommitURL)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.CommitURL)))
		i--
		dAtA[i] = 0x52
	}
	if m.State != 0 {
		i = encodeVarintYolopb(dAtA, i, uint64(m.State))
		i--
		dAtA[i] = 0x48
	}
	if len(m.Branch) > 0 {
		i -= len(m.Branch)
		copy(dAtA[i:], m.Branch)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.Branch)))
		i--
		dAtA[i] = 0x42
	}
	if m.Driver != 0 {
		i = encodeVarintYolopb(dAtA, i, uint64(m.Driver))
		i--
		dAtA[i] = 0x38
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x2a
	}
	if m.UpdatedAt != nil {
		n31, err31 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.UpdatedAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.UpdatedAt):])
		if err31 != nil {
			return 0, err31
		}
		i -= n31
		i = encodeVarintYolopb(dAtA, i, uint64(n31))
		i--
		dAtA[i] = 0x22
	}
	if m.CreatedAt != nil {
		n32, err32 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.CreatedAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedAt):])
		if err32 != nil {
			return 0, err32
		}
		i -= n32
		i = encodeVarintYolopb(dAtA, i, uint64(n32))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.YoloID) > 0 {
		i -= len(m.YoloID)
		copy(dAtA[i:], m.YoloID)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.YoloID)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ID) > 0 {
		i -= len(m.ID)
		copy(dAtA[i:], m.ID)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.ID)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Project) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Project) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Project) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.HasOwnerID) > 0 {
		i -= len(m.HasOwnerID)
		copy(dAtA[i:], m.HasOwnerID)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.HasOwnerID)))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xda
	}
	if m.HasOwner != nil {
		{
			size, err := m.HasOwner.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintYolopb(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xd2
	}
	if len(m.HasMergerequests) > 0 {
		for iNdEx := len(m.HasMergerequests) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.HasMergerequests[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintYolopb(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x6
			i--
			dAtA[i] = 0xca
		}
	}
	if len(m.HasReleases) > 0 {
		for iNdEx := len(m.HasReleases) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.HasReleases[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintYolopb(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x6
			i--
			dAtA[i] = 0xc2
		}
	}
	if len(m.HasCommits) > 0 {
		for iNdEx := len(m.HasCommits) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.HasCommits[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintYolopb(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x6
			i--
			dAtA[i] = 0xba
		}
	}
	if len(m.HasBuilds) > 0 {
		for iNdEx := len(m.HasBuilds) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.HasBuilds[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintYolopb(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x6
			i--
			dAtA[i] = 0xb2
		}
	}
	if len(m.HasArtifacts) > 0 {
		for iNdEx := len(m.HasArtifacts) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.HasArtifacts[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintYolopb(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x6
			i--
			dAtA[i] = 0xaa
		}
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x32
	}
	if m.Driver != 0 {
		i = encodeVarintYolopb(dAtA, i, uint64(m.Driver))
		i--
		dAtA[i] = 0x28
	}
	if m.UpdatedAt != nil {
		n34, err34 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.UpdatedAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.UpdatedAt):])
		if err34 != nil {
			return 0, err34
		}
		i -= n34
		i = encodeVarintYolopb(dAtA, i, uint64(n34))
		i--
		dAtA[i] = 0x22
	}
	if m.CreatedAt != nil {
		n35, err35 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.CreatedAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedAt):])
		if err35 != nil {
			return 0, err35
		}
		i -= n35
		i = encodeVarintYolopb(dAtA, i, uint64(n35))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.YoloID) > 0 {
		i -= len(m.YoloID)
		copy(dAtA[i:], m.YoloID)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.YoloID)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ID) > 0 {
		i -= len(m.ID)
		copy(dAtA[i:], m.ID)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.ID)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Entity) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Entity) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Entity) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.HasMergerequests) > 0 {
		for iNdEx := len(m.HasMergerequests) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.HasMergerequests[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintYolopb(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x6
			i--
			dAtA[i] = 0xba
		}
	}
	if len(m.HasCommits) > 0 {
		for iNdEx := len(m.HasCommits) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.HasCommits[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintYolopb(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x6
			i--
			dAtA[i] = 0xb2
		}
	}
	if len(m.HasProjects) > 0 {
		for iNdEx := len(m.HasProjects) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.HasProjects[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintYolopb(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x6
			i--
			dAtA[i] = 0xaa
		}
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x4a
	}
	if m.Kind != 0 {
		i = encodeVarintYolopb(dAtA, i, uint64(m.Kind))
		i--
		dAtA[i] = 0x40
	}
	if len(m.AvatarURL) > 0 {
		i -= len(m.AvatarURL)
		copy(dAtA[i:], m.AvatarURL)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.AvatarURL)))
		i--
		dAtA[i] = 0x3a
	}
	if m.Driver != 0 {
		i = encodeVarintYolopb(dAtA, i, uint64(m.Driver))
		i--
		dAtA[i] = 0x30
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x2a
	}
	if m.UpdatedAt != nil {
		n36, err36 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.UpdatedAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.UpdatedAt):])
		if err36 != nil {
			return 0, err36
		}
		i -= n36
		i = encodeVarintYolopb(dAtA, i, uint64(n36))
		i--
		dAtA[i] = 0x22
	}
	if m.CreatedAt != nil {
		n37, err37 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.CreatedAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedAt):])
		if err37 != nil {
			return 0, err37
		}
		i -= n37
		i = encodeVarintYolopb(dAtA, i, uint64(n37))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.YoloID) > 0 {
		i -= len(m.YoloID)
		copy(dAtA[i:], m.YoloID)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.YoloID)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ID) > 0 {
		i -= len(m.ID)
		copy(dAtA[i:], m.ID)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.ID)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Artifact) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Artifact) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Artifact) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PListSignedURL) > 0 {
		i -= len(m.PListSignedURL)
		copy(dAtA[i:], m.PListSignedURL)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.PListSignedURL)))
		i--
		dAtA[i] = 0xc
		i--
		dAtA[i] = 0xd2
	}
	if len(m.DLArtifactSignedURL) > 0 {
		i -= len(m.DLArtifactSignedURL)
		copy(dAtA[i:], m.DLArtifactSignedURL)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.DLArtifactSignedURL)))
		i--
		dAtA[i] = 0xc
		i--
		dAtA[i] = 0xca
	}
	if len(m.HasReleaseID) > 0 {
		i -= len(m.HasReleaseID)
		copy(dAtA[i:], m.HasReleaseID)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.HasReleaseID)))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xc2
	}
	if m.HasRelease != nil {
		{
			size, err := m.HasRelease.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintYolopb(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xba
	}
	if len(m.HasBuildID) > 0 {
		i -= len(m.HasBuildID)
		copy(dAtA[i:], m.HasBuildID)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.HasBuildID)))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xb2
	}
	if m.HasBuild != nil {
		{
			size, err := m.HasBuild.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintYolopb(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xaa
	}
	if m.Driver != 0 {
		i = encodeVarintYolopb(dAtA, i, uint64(m.Driver))
		i--
		dAtA[i] = 0x68
	}
	if m.Kind != 0 {
		i = encodeVarintYolopb(dAtA, i, uint64(m.Kind))
		i--
		dAtA[i] = 0x60
	}
	if m.State != 0 {
		i = encodeVarintYolopb(dAtA, i, uint64(m.State))
		i--
		dAtA[i] = 0x58
	}
	if len(m.Sha256Sum) > 0 {
		i -= len(m.Sha256Sum)
		copy(dAtA[i:], m.Sha256Sum)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.Sha256Sum)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.Sha1Sum) > 0 {
		i -= len(m.Sha1Sum)
		copy(dAtA[i:], m.Sha1Sum)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.Sha1Sum)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.MimeType) > 0 {
		i -= len(m.MimeType)
		copy(dAtA[i:], m.MimeType)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.MimeType)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.DownloadURL) > 0 {
		i -= len(m.DownloadURL)
		copy(dAtA[i:], m.DownloadURL)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.DownloadURL)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.LocalPath) > 0 {
		i -= len(m.LocalPath)
		copy(dAtA[i:], m.LocalPath)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.LocalPath)))
		i--
		dAtA[i] = 0x32
	}
	if m.FileSize != 0 {
		i = encodeVarintYolopb(dAtA, i, uint64(m.FileSize))
		i--
		dAtA[i] = 0x28
	}
	if m.UpdatedAt != nil {
		n40, err40 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.UpdatedAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.UpdatedAt):])
		if err40 != nil {
			return 0, err40
		}
		i -= n40
		i = encodeVarintYolopb(dAtA, i, uint64(n40))
		i--
		dAtA[i] = 0x22
	}
	if m.CreatedAt != nil {
		n41, err41 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.CreatedAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedAt):])
		if err41 != nil {
			return 0, err41
		}
		i -= n41
		i = encodeVarintYolopb(dAtA, i, uint64(n41))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.YoloID) > 0 {
		i -= len(m.YoloID)
		copy(dAtA[i:], m.YoloID)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.YoloID)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ID) > 0 {
		i -= len(m.ID)
		copy(dAtA[i:], m.ID)
		i = encodeVarintYolopb(dAtA, i, uint64(len(m.ID)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Batch) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Batch) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Batch) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.MergeRequests) > 0 {
		for iNdEx := len(m.MergeRequests) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.MergeRequests[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintYolopb(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x3a
		}
	}
	if len(m.Commits) > 0 {
		for iNdEx := len(m.Commits) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Commits[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintYolopb(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x32
		}
	}
	if len(m.Releases) > 0 {
		for iNdEx := len(m.Releases) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Releases[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintYolopb(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if len(m.Entities) > 0 {
		for iNdEx := len(m.Entities) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Entities[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintYolopb(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.Projects) > 0 {
		for iNdEx := len(m.Projects) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Projects[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintYolopb(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Artifacts) > 0 {
		for iNdEx := len(m.Artifacts) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Artifacts[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintYolopb(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Builds) > 0 {
		for iNdEx := len(m.Builds) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Builds[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintYolopb(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintYolopb(dAtA []byte, offset int, v uint64) int {
	offset -= sovYolopb(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Ping) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Ping_Request) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Ping_Response) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *DevDumpObjects) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *DevDumpObjects_Request) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.WithPreloading {
		n += 2
	}
	return n
}

func (m *DevDumpObjects_Response) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Batch != nil {
		l = m.Batch.Size()
		n += 1 + l + sovYolopb(uint64(l))
	}
	return n
}

func (m *Status) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Status_Request) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Status_Response) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Uptime != 0 {
		n += 1 + sovYolopb(uint64(m.Uptime))
	}
	l = len(m.DbErr)
	if l > 0 {
		n += 1 + l + sovYolopb(uint64(l))
	}
	if m.NbEntities != 0 {
		n += 1 + sovYolopb(uint64(m.NbEntities))
	}
	if m.NbProjects != 0 {
		n += 1 + sovYolopb(uint64(m.NbProjects))
	}
	if m.NbCommits != 0 {
		n += 1 + sovYolopb(uint64(m.NbCommits))
	}
	if m.NbReleases != 0 {
		n += 1 + sovYolopb(uint64(m.NbReleases))
	}
	if m.NbBuilds != 0 {
		n += 1 + sovYolopb(uint64(m.NbBuilds))
	}
	if m.NbMergeRequests != 0 {
		n += 1 + sovYolopb(uint64(m.NbMergeRequests))
	}
	return n
}

func (m *BuildList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *BuildList_Request) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Limit != 0 {
		n += 1 + sovYolopb(uint64(m.Limit))
	}
	if len(m.ArtifactKinds) > 0 {
		l = 0
		for _, e := range m.ArtifactKinds {
			l += sovYolopb(uint64(e))
		}
		n += 1 + sovYolopb(uint64(l)) + l
	}
	if m.WithArtifacts {
		n += 2
	}
	if len(m.BuildID) > 0 {
		for _, s := range m.BuildID {
			l = len(s)
			n += 1 + l + sovYolopb(uint64(l))
		}
	}
	if len(m.ProjectID) > 0 {
		for _, s := range m.ProjectID {
			l = len(s)
			n += 1 + l + sovYolopb(uint64(l))
		}
	}
	if len(m.ArtifactID) > 0 {
		for _, s := range m.ArtifactID {
			l = len(s)
			n += 1 + l + sovYolopb(uint64(l))
		}
	}
	if len(m.BuildDriver) > 0 {
		l = 0
		for _, e := range m.BuildDriver {
			l += sovYolopb(uint64(e))
		}
		n += 1 + sovYolopb(uint64(l)) + l
	}
	if len(m.BuildState) > 0 {
		l = 0
		for _, e := range m.BuildState {
			l += sovYolopb(uint64(e))
		}
		n += 1 + sovYolopb(uint64(l)) + l
	}
	if len(m.MergeRequestID) > 0 {
		for _, s := range m.MergeRequestID {
			l = len(s)
			n += 1 + l + sovYolopb(uint64(l))
		}
	}
	if len(m.MergeRequestAuthorID) > 0 {
		for _, s := range m.MergeRequestAuthorID {
			l = len(s)
			n += 1 + l + sovYolopb(uint64(l))
		}
	}
	if m.WithMergerequest {
		n += 2
	}
	if len(m.MergerequestState) > 0 {
		l = 0
		for _, e := range m.MergerequestState {
			l += sovYolopb(uint64(e))
		}
		n += 1 + sovYolopb(uint64(l)) + l
	}
	return n
}

func (m *BuildList_Response) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Builds) > 0 {
		for _, e := range m.Builds {
			l = e.Size()
			n += 1 + l + sovYolopb(uint64(l))
		}
	}
	return n
}

func (m *BuildListFilters) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *BuildListFilters_Request) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *BuildListFilters_Response) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Entities) > 0 {
		for _, e := range m.Entities {
			l = e.Size()
			n += 1 + l + sovYolopb(uint64(l))
		}
	}
	if len(m.Projects) > 0 {
		for _, e := range m.Projects {
			l = e.Size()
			n += 1 + l + sovYolopb(uint64(l))
		}
	}
	return n
}

func (m *Build) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ID)
	if l > 0 {
		n += 1 + l + sovYolopb(uint64(l))
	}
	l = len(m.YoloID)
	if l > 0 {
		n += 1 + l + sovYolopb(uint64(l))
	}
	if m.CreatedAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedAt)
		n += 1 + l + sovYolopb(uint64(l))
	}
	if m.UpdatedAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.UpdatedAt)
		n += 1 + l + sovYolopb(uint64(l))
	}
	if m.State != 0 {
		n += 1 + sovYolopb(uint64(m.State))
	}
	if m.CompletedAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.CompletedAt)
		n += 1 + l + sovYolopb(uint64(l))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovYolopb(uint64(l))
	}
	if m.StartedAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.StartedAt)
		n += 1 + l + sovYolopb(uint64(l))
	}
	if m.FinishedAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.FinishedAt)
		n += 1 + l + sovYolopb(uint64(l))
	}
	l = len(m.CommitURL)
	if l > 0 {
		n += 1 + l + sovYolopb(uint64(l))
	}
	l = len(m.Branch)
	if l > 0 {
		n += 1 + l + sovYolopb(uint64(l))
	}
	if m.Driver != 0 {
		n += 1 + sovYolopb(uint64(m.Driver))
	}
	l = len(m.ShortID)
	if l > 0 {
		n += 1 + l + sovYolopb(uint64(l))
	}
	if len(m.HasArtifacts) > 0 {
		for _, e := range m.HasArtifacts {
			l = e.Size()
			n += 2 + l + sovYolopb(uint64(l))
		}
	}
	if m.HasCommit != nil {
		l = m.HasCommit.Size()
		n += 2 + l + sovYolopb(uint64(l))
	}
	l = len(m.HasCommitID)
	if l > 0 {
		n += 2 + l + sovYolopb(uint64(l))
	}
	if m.HasProject != nil {
		l = m.HasProject.Size()
		n += 2 + l + sovYolopb(uint64(l))
	}
	l = len(m.HasProjectID)
	if l > 0 {
		n += 2 + l + sovYolopb(uint64(l))
	}
	if m.HasMergerequest != nil {
		l = m.HasMergerequest.Size()
		n += 2 + l + sovYolopb(uint64(l))
	}
	l = len(m.HasMergerequestID)
	if l > 0 {
		n += 2 + l + sovYolopb(uint64(l))
	}
	return n
}

func (m *Release) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ID)
	if l > 0 {
		n += 1 + l + sovYolopb(uint64(l))
	}
	l = len(m.YoloID)
	if l > 0 {
		n += 1 + l + sovYolopb(uint64(l))
	}
	if m.CreatedAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedAt)
		n += 1 + l + sovYolopb(uint64(l))
	}
	if m.UpdatedAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.UpdatedAt)
		n += 1 + l + sovYolopb(uint64(l))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovYolopb(uint64(l))
	}
	if m.Driver != 0 {
		n += 1 + sovYolopb(uint64(m.Driver))
	}
	l = len(m.CommitURL)
	if l > 0 {
		n += 1 + l + sovYolopb(uint64(l))
	}
	l = len(m.ShortID)
	if l > 0 {
		n += 1 + l + sovYolopb(uint64(l))
	}
	if len(m.HasArtifacts) > 0 {
		for _, e := range m.HasArtifacts {
			l = e.Size()
			n += 2 + l + sovYolopb(uint64(l))
		}
	}
	if m.HasCommit != nil {
		l = m.HasCommit.Size()
		n += 2 + l + sovYolopb(uint64(l))
	}
	if m.HasProject != nil {
		l = m.HasProject.Size()
		n += 2 + l + sovYolopb(uint64(l))
	}
	if m.HasMergerequest != nil {
		l = m.HasMergerequest.Size()
		n += 2 + l + sovYolopb(uint64(l))
	}
	return n
}

func (m *Commit) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ID)
	if l > 0 {
		n += 1 + l + sovYolopb(uint64(l))
	}
	l = len(m.YoloID)
	if l > 0 {
		n += 1 + l + sovYolopb(uint64(l))
	}
	if m.CreatedAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedAt)
		n += 1 + l + sovYolopb(uint64(l))
	}
	if m.UpdatedAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.UpdatedAt)
		n += 1 + l + sovYolopb(uint64(l))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovYolopb(uint64(l))
	}
	if m.Driver != 0 {
		n += 1 + sovYolopb(uint64(m.Driver))
	}
	l = len(m.Branch)
	if l > 0 {
		n += 1 + l + sovYolopb(uint64(l))
	}
	if len(m.HasReleases) > 0 {
		for _, e := range m.HasReleases {
			l = e.Size()
			n += 2 + l + sovYolopb(uint64(l))
		}
	}
	if len(m.HasBuilds) > 0 {
		for _, e := range m.HasBuilds {
			l = e.Size()
			n += 2 + l + sovYolopb(uint64(l))
		}
	}
	if m.HasProject != nil {
		l = m.HasProject.Size()
		n += 2 + l + sovYolopb(uint64(l))
	}
	if m.HasAuthor != nil {
		l = m.HasAuthor.Size()
		n += 2 + l + sovYolopb(uint64(l))
	}
	if m.HasMergerequest != nil {
		l = m.HasMergerequest.Size()
		n += 2 + l + sovYolopb(uint64(l))
	}
	return n
}

func (m *MergeRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ID)
	if l > 0 {
		n += 1 + l + sovYolopb(uint64(l))
	}
	l = len(m.YoloID)
	if l > 0 {
		n += 1 + l + sovYolopb(uint64(l))
	}
	if m.CreatedAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedAt)
		n += 1 + l + sovYolopb(uint64(l))
	}
	if m.UpdatedAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.UpdatedAt)
		n += 1 + l + sovYolopb(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovYolopb(uint64(l))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovYolopb(uint64(l))
	}
	if m.Driver != 0 {
		n += 1 + sovYolopb(uint64(m.Driver))
	}
	l = len(m.Branch)
	if l > 0 {
		n += 1 + l + sovYolopb(uint64(l))
	}
	if m.State != 0 {
		n += 1 + sovYolopb(uint64(m.State))
	}
	l = len(m.CommitURL)
	if l > 0 {
		n += 1 + l + sovYolopb(uint64(l))
	}
	l = len(m.BranchURL)
	if l > 0 {
		n += 1 + l + sovYolopb(uint64(l))
	}
	l = len(m.ShortID)
	if l > 0 {
		n += 1 + l + sovYolopb(uint64(l))
	}
	if len(m.HasReleases) > 0 {
		for _, e := range m.HasReleases {
			l = e.Size()
			n += 2 + l + sovYolopb(uint64(l))
		}
	}
	if len(m.HasBuilds) > 0 {
		for _, e := range m.HasBuilds {
			l = e.Size()
			n += 2 + l + sovYolopb(uint64(l))
		}
	}
	if len(m.HasAssignees) > 0 {
		for _, e := range m.HasAssignees {
			l = e.Size()
			n += 2 + l + sovYolopb(uint64(l))
		}
	}
	if len(m.HasReviewers) > 0 {
		for _, e := range m.HasReviewers {
			l = e.Size()
			n += 2 + l + sovYolopb(uint64(l))
		}
	}
	if m.HasProject != nil {
		l = m.HasProject.Size()
		n += 2 + l + sovYolopb(uint64(l))
	}
	l = len(m.HasProjectID)
	if l > 0 {
		n += 2 + l + sovYolopb(uint64(l))
	}
	if m.HasAuthor != nil {
		l = m.HasAuthor.Size()
		n += 2 + l + sovYolopb(uint64(l))
	}
	l = len(m.HasAuthorID)
	if l > 0 {
		n += 2 + l + sovYolopb(uint64(l))
	}
	if m.HasCommit != nil {
		l = m.HasCommit.Size()
		n += 2 + l + sovYolopb(uint64(l))
	}
	l = len(m.HasCommitID)
	if l > 0 {
		n += 2 + l + sovYolopb(uint64(l))
	}
	return n
}

func (m *Project) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ID)
	if l > 0 {
		n += 1 + l + sovYolopb(uint64(l))
	}
	l = len(m.YoloID)
	if l > 0 {
		n += 1 + l + sovYolopb(uint64(l))
	}
	if m.CreatedAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedAt)
		n += 1 + l + sovYolopb(uint64(l))
	}
	if m.UpdatedAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.UpdatedAt)
		n += 1 + l + sovYolopb(uint64(l))
	}
	if m.Driver != 0 {
		n += 1 + sovYolopb(uint64(m.Driver))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovYolopb(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovYolopb(uint64(l))
	}
	if len(m.HasArtifacts) > 0 {
		for _, e := range m.HasArtifacts {
			l = e.Size()
			n += 2 + l + sovYolopb(uint64(l))
		}
	}
	if len(m.HasBuilds) > 0 {
		for _, e := range m.HasBuilds {
			l = e.Size()
			n += 2 + l + sovYolopb(uint64(l))
		}
	}
	if len(m.HasCommits) > 0 {
		for _, e := range m.HasCommits {
			l = e.Size()
			n += 2 + l + sovYolopb(uint64(l))
		}
	}
	if len(m.HasReleases) > 0 {
		for _, e := range m.HasReleases {
			l = e.Size()
			n += 2 + l + sovYolopb(uint64(l))
		}
	}
	if len(m.HasMergerequests) > 0 {
		for _, e := range m.HasMergerequests {
			l = e.Size()
			n += 2 + l + sovYolopb(uint64(l))
		}
	}
	if m.HasOwner != nil {
		l = m.HasOwner.Size()
		n += 2 + l + sovYolopb(uint64(l))
	}
	l = len(m.HasOwnerID)
	if l > 0 {
		n += 2 + l + sovYolopb(uint64(l))
	}
	return n
}

func (m *Entity) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ID)
	if l > 0 {
		n += 1 + l + sovYolopb(uint64(l))
	}
	l = len(m.YoloID)
	if l > 0 {
		n += 1 + l + sovYolopb(uint64(l))
	}
	if m.CreatedAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedAt)
		n += 1 + l + sovYolopb(uint64(l))
	}
	if m.UpdatedAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.UpdatedAt)
		n += 1 + l + sovYolopb(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovYolopb(uint64(l))
	}
	if m.Driver != 0 {
		n += 1 + sovYolopb(uint64(m.Driver))
	}
	l = len(m.AvatarURL)
	if l > 0 {
		n += 1 + l + sovYolopb(uint64(l))
	}
	if m.Kind != 0 {
		n += 1 + sovYolopb(uint64(m.Kind))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovYolopb(uint64(l))
	}
	if len(m.HasProjects) > 0 {
		for _, e := range m.HasProjects {
			l = e.Size()
			n += 2 + l + sovYolopb(uint64(l))
		}
	}
	if len(m.HasCommits) > 0 {
		for _, e := range m.HasCommits {
			l = e.Size()
			n += 2 + l + sovYolopb(uint64(l))
		}
	}
	if len(m.HasMergerequests) > 0 {
		for _, e := range m.HasMergerequests {
			l = e.Size()
			n += 2 + l + sovYolopb(uint64(l))
		}
	}
	return n
}

func (m *Artifact) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ID)
	if l > 0 {
		n += 1 + l + sovYolopb(uint64(l))
	}
	l = len(m.YoloID)
	if l > 0 {
		n += 1 + l + sovYolopb(uint64(l))
	}
	if m.CreatedAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedAt)
		n += 1 + l + sovYolopb(uint64(l))
	}
	if m.UpdatedAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.UpdatedAt)
		n += 1 + l + sovYolopb(uint64(l))
	}
	if m.FileSize != 0 {
		n += 1 + sovYolopb(uint64(m.FileSize))
	}
	l = len(m.LocalPath)
	if l > 0 {
		n += 1 + l + sovYolopb(uint64(l))
	}
	l = len(m.DownloadURL)
	if l > 0 {
		n += 1 + l + sovYolopb(uint64(l))
	}
	l = len(m.MimeType)
	if l > 0 {
		n += 1 + l + sovYolopb(uint64(l))
	}
	l = len(m.Sha1Sum)
	if l > 0 {
		n += 1 + l + sovYolopb(uint64(l))
	}
	l = len(m.Sha256Sum)
	if l > 0 {
		n += 1 + l + sovYolopb(uint64(l))
	}
	if m.State != 0 {
		n += 1 + sovYolopb(uint64(m.State))
	}
	if m.Kind != 0 {
		n += 1 + sovYolopb(uint64(m.Kind))
	}
	if m.Driver != 0 {
		n += 1 + sovYolopb(uint64(m.Driver))
	}
	if m.HasBuild != nil {
		l = m.HasBuild.Size()
		n += 2 + l + sovYolopb(uint64(l))
	}
	l = len(m.HasBuildID)
	if l > 0 {
		n += 2 + l + sovYolopb(uint64(l))
	}
	if m.HasRelease != nil {
		l = m.HasRelease.Size()
		n += 2 + l + sovYolopb(uint64(l))
	}
	l = len(m.HasReleaseID)
	if l > 0 {
		n += 2 + l + sovYolopb(uint64(l))
	}
	l = len(m.DLArtifactSignedURL)
	if l > 0 {
		n += 2 + l + sovYolopb(uint64(l))
	}
	l = len(m.PListSignedURL)
	if l > 0 {
		n += 2 + l + sovYolopb(uint64(l))
	}
	return n
}

func (m *Batch) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Builds) > 0 {
		for _, e := range m.Builds {
			l = e.Size()
			n += 1 + l + sovYolopb(uint64(l))
		}
	}
	if len(m.Artifacts) > 0 {
		for _, e := range m.Artifacts {
			l = e.Size()
			n += 1 + l + sovYolopb(uint64(l))
		}
	}
	if len(m.Projects) > 0 {
		for _, e := range m.Projects {
			l = e.Size()
			n += 1 + l + sovYolopb(uint64(l))
		}
	}
	if len(m.Entities) > 0 {
		for _, e := range m.Entities {
			l = e.Size()
			n += 1 + l + sovYolopb(uint64(l))
		}
	}
	if len(m.Releases) > 0 {
		for _, e := range m.Releases {
			l = e.Size()
			n += 1 + l + sovYolopb(uint64(l))
		}
	}
	if len(m.Commits) > 0 {
		for _, e := range m.Commits {
			l = e.Size()
			n += 1 + l + sovYolopb(uint64(l))
		}
	}
	if len(m.MergeRequests) > 0 {
		for _, e := range m.MergeRequests {
			l = e.Size()
			n += 1 + l + sovYolopb(uint64(l))
		}
	}
	return n
}

func sovYolopb(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozYolopb(x uint64) (n int) {
	return sovYolopb(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Ping) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYolopb
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Ping: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Ping: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipYolopb(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Ping_Request) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYolopb
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Request: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Request: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipYolopb(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Ping_Response) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYolopb
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Response: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Response: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipYolopb(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DevDumpObjects) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYolopb
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DevDumpObjects: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DevDumpObjects: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipYolopb(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DevDumpObjects_Request) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYolopb
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Request: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Request: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WithPreloading", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.WithPreloading = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipYolopb(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DevDumpObjects_Response) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYolopb
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Response: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Response: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Batch", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Batch == nil {
				m.Batch = &Batch{}
			}
			if err := m.Batch.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYolopb(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Status) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYolopb
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Status: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Status: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipYolopb(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Status_Request) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYolopb
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Request: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Request: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipYolopb(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Status_Response) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYolopb
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Response: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Response: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uptime", wireType)
			}
			m.Uptime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Uptime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DbErr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DbErr = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NbEntities", wireType)
			}
			m.NbEntities = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NbEntities |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NbProjects", wireType)
			}
			m.NbProjects = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NbProjects |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NbCommits", wireType)
			}
			m.NbCommits = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NbCommits |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NbReleases", wireType)
			}
			m.NbReleases = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NbReleases |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NbBuilds", wireType)
			}
			m.NbBuilds = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NbBuilds |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NbMergeRequests", wireType)
			}
			m.NbMergeRequests = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NbMergeRequests |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipYolopb(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BuildList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYolopb
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BuildList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BuildList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipYolopb(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BuildList_Request) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYolopb
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Request: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Request: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType == 0 {
				var v Artifact_Kind
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowYolopb
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= Artifact_Kind(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.ArtifactKinds = append(m.ArtifactKinds, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowYolopb
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthYolopb
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthYolopb
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				if elementCount != 0 && len(m.ArtifactKinds) == 0 {
					m.ArtifactKinds = make([]Artifact_Kind, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v Artifact_Kind
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowYolopb
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= Artifact_Kind(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.ArtifactKinds = append(m.ArtifactKinds, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ArtifactKinds", wireType)
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WithArtifacts", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.WithArtifacts = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuildID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BuildID = append(m.BuildID, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProjectID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProjectID = append(m.ProjectID, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ArtifactID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ArtifactID = append(m.ArtifactID, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 7:
			if wireType == 0 {
				var v Driver
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowYolopb
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= Driver(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.BuildDriver = append(m.BuildDriver, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowYolopb
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthYolopb
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthYolopb
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				if elementCount != 0 && len(m.BuildDriver) == 0 {
					m.BuildDriver = make([]Driver, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v Driver
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowYolopb
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= Driver(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.BuildDriver = append(m.BuildDriver, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field BuildDriver", wireType)
			}
		case 8:
			if wireType == 0 {
				var v Build_State
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowYolopb
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= Build_State(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.BuildState = append(m.BuildState, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowYolopb
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthYolopb
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthYolopb
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				if elementCount != 0 && len(m.BuildState) == 0 {
					m.BuildState = make([]Build_State, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v Build_State
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowYolopb
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= Build_State(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.BuildState = append(m.BuildState, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field BuildState", wireType)
			}
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MergeRequestID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MergeRequestID = append(m.MergeRequestID, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MergeRequestAuthorID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MergeRequestAuthorID = append(m.MergeRequestAuthorID, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WithMergerequest", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.WithMergerequest = bool(v != 0)
		case 12:
			if wireType == 0 {
				var v MergeRequest_State
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowYolopb
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= MergeRequest_State(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.MergerequestState = append(m.MergerequestState, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowYolopb
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthYolopb
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthYolopb
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				if elementCount != 0 && len(m.MergerequestState) == 0 {
					m.MergerequestState = make([]MergeRequest_State, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v MergeRequest_State
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowYolopb
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= MergeRequest_State(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.MergerequestState = append(m.MergerequestState, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field MergerequestState", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipYolopb(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BuildList_Response) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYolopb
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Response: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Response: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Builds", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Builds = append(m.Builds, &Build{})
			if err := m.Builds[len(m.Builds)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYolopb(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BuildListFilters) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYolopb
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BuildListFilters: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BuildListFilters: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipYolopb(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BuildListFilters_Request) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYolopb
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Request: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Request: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipYolopb(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BuildListFilters_Response) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYolopb
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Response: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Response: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Entities", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Entities = append(m.Entities, &Entity{})
			if err := m.Entities[len(m.Entities)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Projects", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Projects = append(m.Projects, &Project{})
			if err := m.Projects[len(m.Projects)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYolopb(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Build) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYolopb
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Build: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Build: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field YoloID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.YoloID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreatedAt == nil {
				m.CreatedAt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.CreatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UpdatedAt == nil {
				m.UpdatedAt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.UpdatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			m.State = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.State |= Build_State(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CompletedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CompletedAt == nil {
				m.CompletedAt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.CompletedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.StartedAt == nil {
				m.StartedAt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.StartedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FinishedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FinishedAt == nil {
				m.FinishedAt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.FinishedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommitURL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CommitURL = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Branch", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Branch = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Driver", wireType)
			}
			m.Driver = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Driver |= Driver(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShortID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShortID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 101:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasArtifacts", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HasArtifacts = append(m.HasArtifacts, &Artifact{})
			if err := m.HasArtifacts[len(m.HasArtifacts)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 102:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasCommit", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.HasCommit == nil {
				m.HasCommit = &Commit{}
			}
			if err := m.HasCommit.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 103:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasCommitID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HasCommitID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 104:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasProject", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.HasProject == nil {
				m.HasProject = &Project{}
			}
			if err := m.HasProject.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 105:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasProjectID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HasProjectID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 106:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasMergerequest", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.HasMergerequest == nil {
				m.HasMergerequest = &MergeRequest{}
			}
			if err := m.HasMergerequest.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 107:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasMergerequestID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HasMergerequestID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYolopb(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Release) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYolopb
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Release: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Release: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field YoloID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.YoloID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreatedAt == nil {
				m.CreatedAt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.CreatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UpdatedAt == nil {
				m.UpdatedAt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.UpdatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Driver", wireType)
			}
			m.Driver = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Driver |= Driver(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommitURL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CommitURL = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShortID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShortID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 101:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasArtifacts", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HasArtifacts = append(m.HasArtifacts, &Artifact{})
			if err := m.HasArtifacts[len(m.HasArtifacts)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 102:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasCommit", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.HasCommit == nil {
				m.HasCommit = &Commit{}
			}
			if err := m.HasCommit.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 103:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasProject", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.HasProject == nil {
				m.HasProject = &Project{}
			}
			if err := m.HasProject.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 104:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasMergerequest", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.HasMergerequest == nil {
				m.HasMergerequest = &MergeRequest{}
			}
			if err := m.HasMergerequest.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYolopb(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Commit) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYolopb
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Commit: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Commit: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field YoloID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.YoloID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreatedAt == nil {
				m.CreatedAt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.CreatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UpdatedAt == nil {
				m.UpdatedAt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.UpdatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Driver", wireType)
			}
			m.Driver = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Driver |= Driver(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Branch", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Branch = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 101:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasReleases", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HasReleases = append(m.HasReleases, &Release{})
			if err := m.HasReleases[len(m.HasReleases)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 102:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasBuilds", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HasBuilds = append(m.HasBuilds, &Build{})
			if err := m.HasBuilds[len(m.HasBuilds)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 103:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasProject", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.HasProject == nil {
				m.HasProject = &Project{}
			}
			if err := m.HasProject.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 104:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasAuthor", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.HasAuthor == nil {
				m.HasAuthor = &Entity{}
			}
			if err := m.HasAuthor.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 105:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasMergerequest", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.HasMergerequest == nil {
				m.HasMergerequest = &MergeRequest{}
			}
			if err := m.HasMergerequest.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYolopb(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MergeRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYolopb
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MergeRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MergeRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field YoloID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.YoloID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreatedAt == nil {
				m.CreatedAt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.CreatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UpdatedAt == nil {
				m.UpdatedAt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.UpdatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Driver", wireType)
			}
			m.Driver = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Driver |= Driver(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Branch", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Branch = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			m.State = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.State |= MergeRequest_State(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommitURL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CommitURL = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BranchURL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BranchURL = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShortID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShortID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 101:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasReleases", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HasReleases = append(m.HasReleases, &Release{})
			if err := m.HasReleases[len(m.HasReleases)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 102:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasBuilds", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HasBuilds = append(m.HasBuilds, &Build{})
			if err := m.HasBuilds[len(m.HasBuilds)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 103:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasAssignees", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HasAssignees = append(m.HasAssignees, &Entity{})
			if err := m.HasAssignees[len(m.HasAssignees)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 104:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasReviewers", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HasReviewers = append(m.HasReviewers, &Entity{})
			if err := m.HasReviewers[len(m.HasReviewers)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 105:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasProject", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.HasProject == nil {
				m.HasProject = &Project{}
			}
			if err := m.HasProject.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 106:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasProjectID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HasProjectID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 107:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasAuthor", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.HasAuthor == nil {
				m.HasAuthor = &Entity{}
			}
			if err := m.HasAuthor.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 108:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasAuthorID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HasAuthorID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 109:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasCommit", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.HasCommit == nil {
				m.HasCommit = &Commit{}
			}
			if err := m.HasCommit.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 110:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasCommitID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HasCommitID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYolopb(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Project) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYolopb
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Project: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Project: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field YoloID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.YoloID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreatedAt == nil {
				m.CreatedAt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.CreatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UpdatedAt == nil {
				m.UpdatedAt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.UpdatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Driver", wireType)
			}
			m.Driver = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Driver |= Driver(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 101:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasArtifacts", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HasArtifacts = append(m.HasArtifacts, &Artifact{})
			if err := m.HasArtifacts[len(m.HasArtifacts)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 102:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasBuilds", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HasBuilds = append(m.HasBuilds, &Build{})
			if err := m.HasBuilds[len(m.HasBuilds)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 103:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasCommits", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HasCommits = append(m.HasCommits, &Commit{})
			if err := m.HasCommits[len(m.HasCommits)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 104:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasReleases", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HasReleases = append(m.HasReleases, &Release{})
			if err := m.HasReleases[len(m.HasReleases)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 105:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasMergerequests", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HasMergerequests = append(m.HasMergerequests, &MergeRequest{})
			if err := m.HasMergerequests[len(m.HasMergerequests)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 106:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasOwner", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.HasOwner == nil {
				m.HasOwner = &Entity{}
			}
			if err := m.HasOwner.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 107:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasOwnerID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HasOwnerID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYolopb(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Entity) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYolopb
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Entity: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Entity: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field YoloID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.YoloID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreatedAt == nil {
				m.CreatedAt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.CreatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UpdatedAt == nil {
				m.UpdatedAt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.UpdatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Driver", wireType)
			}
			m.Driver = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Driver |= Driver(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AvatarURL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AvatarURL = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Kind", wireType)
			}
			m.Kind = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Kind |= Entity_Kind(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 101:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasProjects", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HasProjects = append(m.HasProjects, &Project{})
			if err := m.HasProjects[len(m.HasProjects)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 102:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasCommits", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HasCommits = append(m.HasCommits, &Commit{})
			if err := m.HasCommits[len(m.HasCommits)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 103:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasMergerequests", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HasMergerequests = append(m.HasMergerequests, &MergeRequest{})
			if err := m.HasMergerequests[len(m.HasMergerequests)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYolopb(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Artifact) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYolopb
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Artifact: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Artifact: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field YoloID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.YoloID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreatedAt == nil {
				m.CreatedAt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.CreatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UpdatedAt == nil {
				m.UpdatedAt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.UpdatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileSize", wireType)
			}
			m.FileSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FileSize |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalPath", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LocalPath = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DownloadURL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DownloadURL = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MimeType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MimeType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sha1Sum", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sha1Sum = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sha256Sum", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sha256Sum = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			m.State = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.State |= Artifact_State(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Kind", wireType)
			}
			m.Kind = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Kind |= Artifact_Kind(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Driver", wireType)
			}
			m.Driver = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Driver |= Driver(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 101:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasBuild", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.HasBuild == nil {
				m.HasBuild = &Build{}
			}
			if err := m.HasBuild.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 102:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasBuildID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HasBuildID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 103:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasRelease", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.HasRelease == nil {
				m.HasRelease = &Release{}
			}
			if err := m.HasRelease.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 104:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasReleaseID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HasReleaseID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 201:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DLArtifactSignedURL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DLArtifactSignedURL = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 202:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PListSignedURL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PListSignedURL = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYolopb(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Batch) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYolopb
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Batch: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Batch: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Builds", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Builds = append(m.Builds, &Build{})
			if err := m.Builds[len(m.Builds)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Artifacts", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Artifacts = append(m.Artifacts, &Artifact{})
			if err := m.Artifacts[len(m.Artifacts)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Projects", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Projects = append(m.Projects, &Project{})
			if err := m.Projects[len(m.Projects)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Entities", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Entities = append(m.Entities, &Entity{})
			if err := m.Entities[len(m.Entities)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Releases", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Releases = append(m.Releases, &Release{})
			if err := m.Releases[len(m.Releases)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Commits", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Commits = append(m.Commits, &Commit{})
			if err := m.Commits[len(m.Commits)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MergeRequests", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolopb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolopb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MergeRequests = append(m.MergeRequests, &MergeRequest{})
			if err := m.MergeRequests[len(m.MergeRequests)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYolopb(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthYolopb
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipYolopb(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowYolopb
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowYolopb
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthYolopb
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupYolopb
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthYolopb
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthYolopb        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowYolopb          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupYolopb = fmt.Errorf("proto: unexpected end of group")
)
