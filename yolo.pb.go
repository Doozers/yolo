// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: yolo.proto

package yolo

import (
	context "context"
	fmt "fmt"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"

	github_com_cayleygraph_quad "github.com/cayleygraph/quad"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Driver int32

const (
	Driver_UnknownDriver Driver = 0
	Driver_GitHub        Driver = 1
	Driver_Buildkite     Driver = 2
)

var Driver_name = map[int32]string{
	0: "UnknownDriver",
	1: "GitHub",
	2: "Buildkite",
}

var Driver_value = map[string]int32{
	"UnknownDriver": 0,
	"GitHub":        1,
	"Buildkite":     2,
}

func (x Driver) String() string {
	return proto.EnumName(Driver_name, int32(x))
}

func (Driver) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f9de2600fe543cd4, []int{0}
}

type Build_State int32

const (
	Build_UnknownState Build_State = 0
	Build_Running      Build_State = 1
	Build_Failed       Build_State = 2
	Build_Passed       Build_State = 3
	Build_Canceled     Build_State = 4
	Build_Scheduled    Build_State = 5
	Build_Skipped      Build_State = 6
	Build_NotRun       Build_State = 7
)

var Build_State_name = map[int32]string{
	0: "UnknownState",
	1: "Running",
	2: "Failed",
	3: "Passed",
	4: "Canceled",
	5: "Scheduled",
	6: "Skipped",
	7: "NotRun",
}

var Build_State_value = map[string]int32{
	"UnknownState": 0,
	"Running":      1,
	"Failed":       2,
	"Passed":       3,
	"Canceled":     4,
	"Scheduled":    5,
	"Skipped":      6,
	"NotRun":       7,
}

func (x Build_State) String() string {
	return proto.EnumName(Build_State_name, int32(x))
}

func (Build_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f9de2600fe543cd4, []int{4, 0}
}

type Artifact_State int32

const (
	Artifact_UnknownState Artifact_State = 0
	Artifact_Finished     Artifact_State = 1
	Artifact_New          Artifact_State = 2
	Artifact_Error        Artifact_State = 3
	Artifact_Deleted      Artifact_State = 4
)

var Artifact_State_name = map[int32]string{
	0: "UnknownState",
	1: "Finished",
	2: "New",
	3: "Error",
	4: "Deleted",
}

var Artifact_State_value = map[string]int32{
	"UnknownState": 0,
	"Finished":     1,
	"New":          2,
	"Error":        3,
	"Deleted":      4,
}

func (x Artifact_State) String() string {
	return proto.EnumName(Artifact_State_name, int32(x))
}

func (Artifact_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f9de2600fe543cd4, []int{5, 0}
}

type Artifact_Kind int32

const (
	Artifact_UnknownKind Artifact_Kind = 0
	Artifact_IPA         Artifact_Kind = 1
	Artifact_APK         Artifact_Kind = 2
)

var Artifact_Kind_name = map[int32]string{
	0: "UnknownKind",
	1: "IPA",
	2: "APK",
}

var Artifact_Kind_value = map[string]int32{
	"UnknownKind": 0,
	"IPA":         1,
	"APK":         2,
}

func (x Artifact_Kind) String() string {
	return proto.EnumName(Artifact_Kind_name, int32(x))
}

func (Artifact_Kind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f9de2600fe543cd4, []int{5, 1}
}

type Ping struct {
}

func (m *Ping) Reset()         { *m = Ping{} }
func (m *Ping) String() string { return proto.CompactTextString(m) }
func (*Ping) ProtoMessage()    {}
func (*Ping) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9de2600fe543cd4, []int{0}
}
func (m *Ping) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Ping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Ping.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Ping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ping.Merge(m, src)
}
func (m *Ping) XXX_Size() int {
	return m.Size()
}
func (m *Ping) XXX_DiscardUnknown() {
	xxx_messageInfo_Ping.DiscardUnknown(m)
}

var xxx_messageInfo_Ping proto.InternalMessageInfo

type Ping_Request struct {
}

func (m *Ping_Request) Reset()         { *m = Ping_Request{} }
func (m *Ping_Request) String() string { return proto.CompactTextString(m) }
func (*Ping_Request) ProtoMessage()    {}
func (*Ping_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9de2600fe543cd4, []int{0, 0}
}
func (m *Ping_Request) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Ping_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Ping_Request.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Ping_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ping_Request.Merge(m, src)
}
func (m *Ping_Request) XXX_Size() int {
	return m.Size()
}
func (m *Ping_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Ping_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Ping_Request proto.InternalMessageInfo

type Ping_Response struct {
}

func (m *Ping_Response) Reset()         { *m = Ping_Response{} }
func (m *Ping_Response) String() string { return proto.CompactTextString(m) }
func (*Ping_Response) ProtoMessage()    {}
func (*Ping_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9de2600fe543cd4, []int{0, 1}
}
func (m *Ping_Response) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Ping_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Ping_Response.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Ping_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ping_Response.Merge(m, src)
}
func (m *Ping_Response) XXX_Size() int {
	return m.Size()
}
func (m *Ping_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Ping_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Ping_Response proto.InternalMessageInfo

type Status struct {
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9de2600fe543cd4, []int{1}
}
func (m *Status) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Status.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(m, src)
}
func (m *Status) XXX_Size() int {
	return m.Size()
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

type Status_Request struct {
}

func (m *Status_Request) Reset()         { *m = Status_Request{} }
func (m *Status_Request) String() string { return proto.CompactTextString(m) }
func (*Status_Request) ProtoMessage()    {}
func (*Status_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9de2600fe543cd4, []int{1, 0}
}
func (m *Status_Request) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Status_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Status_Request.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Status_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status_Request.Merge(m, src)
}
func (m *Status_Request) XXX_Size() int {
	return m.Size()
}
func (m *Status_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Status_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Status_Request proto.InternalMessageInfo

type Status_Response struct {
	Uptime  int32  `protobuf:"varint,1,opt,name=uptime,proto3" json:"uptime,omitempty"`
	DbErr   string `protobuf:"bytes,2,opt,name=db_err,json=dbErr,proto3" json:"db_err,omitempty"`
	DbNodes int64  `protobuf:"varint,3,opt,name=db_nodes,json=dbNodes,proto3" json:"db_nodes,omitempty"`
	DbQuads int64  `protobuf:"varint,4,opt,name=db_quads,json=dbQuads,proto3" json:"db_quads,omitempty"`
}

func (m *Status_Response) Reset()         { *m = Status_Response{} }
func (m *Status_Response) String() string { return proto.CompactTextString(m) }
func (*Status_Response) ProtoMessage()    {}
func (*Status_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9de2600fe543cd4, []int{1, 1}
}
func (m *Status_Response) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Status_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Status_Response.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Status_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status_Response.Merge(m, src)
}
func (m *Status_Response) XXX_Size() int {
	return m.Size()
}
func (m *Status_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Status_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Status_Response proto.InternalMessageInfo

func (m *Status_Response) GetUptime() int32 {
	if m != nil {
		return m.Uptime
	}
	return 0
}

func (m *Status_Response) GetDbErr() string {
	if m != nil {
		return m.DbErr
	}
	return ""
}

func (m *Status_Response) GetDbNodes() int64 {
	if m != nil {
		return m.DbNodes
	}
	return 0
}

func (m *Status_Response) GetDbQuads() int64 {
	if m != nil {
		return m.DbQuads
	}
	return 0
}

type BuildList struct {
}

func (m *BuildList) Reset()         { *m = BuildList{} }
func (m *BuildList) String() string { return proto.CompactTextString(m) }
func (*BuildList) ProtoMessage()    {}
func (*BuildList) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9de2600fe543cd4, []int{2}
}
func (m *BuildList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BuildList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BuildList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BuildList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildList.Merge(m, src)
}
func (m *BuildList) XXX_Size() int {
	return m.Size()
}
func (m *BuildList) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildList.DiscardUnknown(m)
}

var xxx_messageInfo_BuildList proto.InternalMessageInfo

type BuildList_Request struct {
}

func (m *BuildList_Request) Reset()         { *m = BuildList_Request{} }
func (m *BuildList_Request) String() string { return proto.CompactTextString(m) }
func (*BuildList_Request) ProtoMessage()    {}
func (*BuildList_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9de2600fe543cd4, []int{2, 0}
}
func (m *BuildList_Request) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BuildList_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BuildList_Request.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BuildList_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildList_Request.Merge(m, src)
}
func (m *BuildList_Request) XXX_Size() int {
	return m.Size()
}
func (m *BuildList_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildList_Request.DiscardUnknown(m)
}

var xxx_messageInfo_BuildList_Request proto.InternalMessageInfo

type BuildList_Response struct {
	Builds []*Build `protobuf:"bytes,1,rep,name=builds,proto3" json:"builds,omitempty"`
}

func (m *BuildList_Response) Reset()         { *m = BuildList_Response{} }
func (m *BuildList_Response) String() string { return proto.CompactTextString(m) }
func (*BuildList_Response) ProtoMessage()    {}
func (*BuildList_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9de2600fe543cd4, []int{2, 1}
}
func (m *BuildList_Response) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BuildList_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BuildList_Response.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BuildList_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildList_Response.Merge(m, src)
}
func (m *BuildList_Response) XXX_Size() int {
	return m.Size()
}
func (m *BuildList_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildList_Response.DiscardUnknown(m)
}

var xxx_messageInfo_BuildList_Response proto.InternalMessageInfo

func (m *BuildList_Response) GetBuilds() []*Build {
	if m != nil {
		return m.Builds
	}
	return nil
}

type ArtifactList struct {
}

func (m *ArtifactList) Reset()         { *m = ArtifactList{} }
func (m *ArtifactList) String() string { return proto.CompactTextString(m) }
func (*ArtifactList) ProtoMessage()    {}
func (*ArtifactList) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9de2600fe543cd4, []int{3}
}
func (m *ArtifactList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ArtifactList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ArtifactList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ArtifactList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArtifactList.Merge(m, src)
}
func (m *ArtifactList) XXX_Size() int {
	return m.Size()
}
func (m *ArtifactList) XXX_DiscardUnknown() {
	xxx_messageInfo_ArtifactList.DiscardUnknown(m)
}

var xxx_messageInfo_ArtifactList proto.InternalMessageInfo

type ArtifactList_Request struct {
	Kind Artifact_Kind `protobuf:"varint,1,opt,name=kind,proto3,enum=yolo.Artifact_Kind" json:"kind,omitempty"`
}

func (m *ArtifactList_Request) Reset()         { *m = ArtifactList_Request{} }
func (m *ArtifactList_Request) String() string { return proto.CompactTextString(m) }
func (*ArtifactList_Request) ProtoMessage()    {}
func (*ArtifactList_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9de2600fe543cd4, []int{3, 0}
}
func (m *ArtifactList_Request) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ArtifactList_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ArtifactList_Request.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ArtifactList_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArtifactList_Request.Merge(m, src)
}
func (m *ArtifactList_Request) XXX_Size() int {
	return m.Size()
}
func (m *ArtifactList_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_ArtifactList_Request.DiscardUnknown(m)
}

var xxx_messageInfo_ArtifactList_Request proto.InternalMessageInfo

func (m *ArtifactList_Request) GetKind() Artifact_Kind {
	if m != nil {
		return m.Kind
	}
	return Artifact_UnknownKind
}

type ArtifactList_Response struct {
	Artifacts []*Artifact `protobuf:"bytes,1,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
}

func (m *ArtifactList_Response) Reset()         { *m = ArtifactList_Response{} }
func (m *ArtifactList_Response) String() string { return proto.CompactTextString(m) }
func (*ArtifactList_Response) ProtoMessage()    {}
func (*ArtifactList_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9de2600fe543cd4, []int{3, 1}
}
func (m *ArtifactList_Response) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ArtifactList_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ArtifactList_Response.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ArtifactList_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArtifactList_Response.Merge(m, src)
}
func (m *ArtifactList_Response) XXX_Size() int {
	return m.Size()
}
func (m *ArtifactList_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_ArtifactList_Response.DiscardUnknown(m)
}

var xxx_messageInfo_ArtifactList_Response proto.InternalMessageInfo

func (m *ArtifactList_Response) GetArtifacts() []*Artifact {
	if m != nil {
		return m.Artifacts
	}
	return nil
}

type Build struct {
	ID          github_com_cayleygraph_quad.IRI `protobuf:"bytes,1,opt,name=id,proto3,casttype=github.com/cayleygraph/quad.IRI" json:"id,omitempty" quad:"@id"`
	CreatedAt   *time.Time                      `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3,stdtime" json:"created_at,omitempty" quad:"schema:createdAt,optional"`
	UpdatedAt   *time.Time                      `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3,stdtime" json:"updated_at,omitempty" quad:"schema:updatedAt,optional"`
	State       Build_State                     `protobuf:"varint,4,opt,name=state,proto3,enum=yolo.Build_State" json:"state,omitempty" quad:"schema:state,optional"`
	CompletedAt *time.Time                      `protobuf:"bytes,5,opt,name=completed_at,json=completedAt,proto3,stdtime" json:"completed_at,omitempty" quad:"schema:completedAt,optional"`
	Message     string                          `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty" quad:"schema:message,optional"`
	StartedAt   *time.Time                      `protobuf:"bytes,7,opt,name=started_at,json=startedAt,proto3,stdtime" json:"started_at,omitempty" quad:"schema:startedAt,optional"`
	FinishedAt  *time.Time                      `protobuf:"bytes,8,opt,name=finished_at,json=finishedAt,proto3,stdtime" json:"finished_at,omitempty" quad:"schema:finishedAt,optional"`
	Commit      string                          `protobuf:"bytes,9,opt,name=commit,proto3" json:"commit,omitempty" quad:"schema:commit,optional"`
	Branch      string                          `protobuf:"bytes,10,opt,name=branch,proto3" json:"branch,omitempty" quad:"schema:branch,optional"`
}

func (m *Build) Reset()         { *m = Build{} }
func (m *Build) String() string { return proto.CompactTextString(m) }
func (*Build) ProtoMessage()    {}
func (*Build) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9de2600fe543cd4, []int{4}
}
func (m *Build) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Build) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Build.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Build) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Build.Merge(m, src)
}
func (m *Build) XXX_Size() int {
	return m.Size()
}
func (m *Build) XXX_DiscardUnknown() {
	xxx_messageInfo_Build.DiscardUnknown(m)
}

var xxx_messageInfo_Build proto.InternalMessageInfo

func (m *Build) GetID() github_com_cayleygraph_quad.IRI {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Build) GetCreatedAt() *time.Time {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Build) GetUpdatedAt() *time.Time {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Build) GetState() Build_State {
	if m != nil {
		return m.State
	}
	return Build_UnknownState
}

func (m *Build) GetCompletedAt() *time.Time {
	if m != nil {
		return m.CompletedAt
	}
	return nil
}

func (m *Build) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Build) GetStartedAt() *time.Time {
	if m != nil {
		return m.StartedAt
	}
	return nil
}

func (m *Build) GetFinishedAt() *time.Time {
	if m != nil {
		return m.FinishedAt
	}
	return nil
}

func (m *Build) GetCommit() string {
	if m != nil {
		return m.Commit
	}
	return ""
}

func (m *Build) GetBranch() string {
	if m != nil {
		return m.Branch
	}
	return ""
}

type Artifact struct {
	ID          github_com_cayleygraph_quad.IRI `protobuf:"bytes,1,opt,name=id,proto3,casttype=github.com/cayleygraph/quad.IRI" json:"id,omitempty" quad:"@id"`
	CreatedAt   *time.Time                      `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3,stdtime" json:"created_at,omitempty" quad:"schema:createdAt,optional"`
	FileSize    int64                           `protobuf:"varint,3,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty" quad:"schema:file_size,optional"`
	LocalPath   string                          `protobuf:"bytes,4,opt,name=local_path,json=localPath,proto3" json:"local_path,omitempty" quad:"schema:local_path,optional"`
	DownloadUrl string                          `protobuf:"bytes,5,opt,name=download_url,json=downloadUrl,proto3" json:"download_url,omitempty" quad:"schema:download_url,optional"`
	MimeType    string                          `protobuf:"bytes,6,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty" quad:"schema:mime_type,optional"`
	Sha1Sum     string                          `protobuf:"bytes,7,opt,name=sha1_sum,json=sha1Sum,proto3" json:"sha1_sum,omitempty" quad:"schema:sha1_sum,optional"`
	State       Artifact_State                  `protobuf:"varint,8,opt,name=state,proto3,enum=yolo.Artifact_State" json:"state,omitempty" quad:"schema:state,optional"`
	Kind        Artifact_Kind                   `protobuf:"varint,9,opt,name=kind,proto3,enum=yolo.Artifact_Kind" json:"kind,omitempty" quad:"schema:kind,optional"`
	HasBuild    *Build                          `protobuf:"bytes,101,opt,name=has_build,json=hasBuild,proto3" json:"has_build,omitempty" quad:"hasBuild,optional"`
}

func (m *Artifact) Reset()         { *m = Artifact{} }
func (m *Artifact) String() string { return proto.CompactTextString(m) }
func (*Artifact) ProtoMessage()    {}
func (*Artifact) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9de2600fe543cd4, []int{5}
}
func (m *Artifact) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Artifact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Artifact.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Artifact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Artifact.Merge(m, src)
}
func (m *Artifact) XXX_Size() int {
	return m.Size()
}
func (m *Artifact) XXX_DiscardUnknown() {
	xxx_messageInfo_Artifact.DiscardUnknown(m)
}

var xxx_messageInfo_Artifact proto.InternalMessageInfo

func (m *Artifact) GetID() github_com_cayleygraph_quad.IRI {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Artifact) GetCreatedAt() *time.Time {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Artifact) GetFileSize() int64 {
	if m != nil {
		return m.FileSize
	}
	return 0
}

func (m *Artifact) GetLocalPath() string {
	if m != nil {
		return m.LocalPath
	}
	return ""
}

func (m *Artifact) GetDownloadUrl() string {
	if m != nil {
		return m.DownloadUrl
	}
	return ""
}

func (m *Artifact) GetMimeType() string {
	if m != nil {
		return m.MimeType
	}
	return ""
}

func (m *Artifact) GetSha1Sum() string {
	if m != nil {
		return m.Sha1Sum
	}
	return ""
}

func (m *Artifact) GetState() Artifact_State {
	if m != nil {
		return m.State
	}
	return Artifact_UnknownState
}

func (m *Artifact) GetKind() Artifact_Kind {
	if m != nil {
		return m.Kind
	}
	return Artifact_UnknownKind
}

func (m *Artifact) GetHasBuild() *Build {
	if m != nil {
		return m.HasBuild
	}
	return nil
}

type Batch struct {
	Builds    []*Build    `protobuf:"bytes,1,rep,name=builds,proto3" json:"builds,omitempty"`
	Artifacts []*Artifact `protobuf:"bytes,2,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
}

func (m *Batch) Reset()         { *m = Batch{} }
func (m *Batch) String() string { return proto.CompactTextString(m) }
func (*Batch) ProtoMessage()    {}
func (*Batch) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9de2600fe543cd4, []int{6}
}
func (m *Batch) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Batch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Batch.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Batch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Batch.Merge(m, src)
}
func (m *Batch) XXX_Size() int {
	return m.Size()
}
func (m *Batch) XXX_DiscardUnknown() {
	xxx_messageInfo_Batch.DiscardUnknown(m)
}

var xxx_messageInfo_Batch proto.InternalMessageInfo

func (m *Batch) GetBuilds() []*Build {
	if m != nil {
		return m.Builds
	}
	return nil
}

func (m *Batch) GetArtifacts() []*Artifact {
	if m != nil {
		return m.Artifacts
	}
	return nil
}

func init() {
	proto.RegisterEnum("yolo.Driver", Driver_name, Driver_value)
	proto.RegisterEnum("yolo.Build_State", Build_State_name, Build_State_value)
	proto.RegisterEnum("yolo.Artifact_State", Artifact_State_name, Artifact_State_value)
	proto.RegisterEnum("yolo.Artifact_Kind", Artifact_Kind_name, Artifact_Kind_value)
	proto.RegisterType((*Ping)(nil), "yolo.Ping")
	proto.RegisterType((*Ping_Request)(nil), "yolo.Ping.Request")
	proto.RegisterType((*Ping_Response)(nil), "yolo.Ping.Response")
	proto.RegisterType((*Status)(nil), "yolo.Status")
	proto.RegisterType((*Status_Request)(nil), "yolo.Status.Request")
	proto.RegisterType((*Status_Response)(nil), "yolo.Status.Response")
	proto.RegisterType((*BuildList)(nil), "yolo.BuildList")
	proto.RegisterType((*BuildList_Request)(nil), "yolo.BuildList.Request")
	proto.RegisterType((*BuildList_Response)(nil), "yolo.BuildList.Response")
	proto.RegisterType((*ArtifactList)(nil), "yolo.ArtifactList")
	proto.RegisterType((*ArtifactList_Request)(nil), "yolo.ArtifactList.Request")
	proto.RegisterType((*ArtifactList_Response)(nil), "yolo.ArtifactList.Response")
	proto.RegisterType((*Build)(nil), "yolo.Build")
	proto.RegisterType((*Artifact)(nil), "yolo.Artifact")
	proto.RegisterType((*Batch)(nil), "yolo.Batch")
}

func init() { proto.RegisterFile("yolo.proto", fileDescriptor_f9de2600fe543cd4) }

var fileDescriptor_f9de2600fe543cd4 = []byte{
	// 1225 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x56, 0xcb, 0x6f, 0xdc, 0x44,
	0x18, 0x8f, 0xf7, 0xed, 0x6f, 0x93, 0xd4, 0x9d, 0x3e, 0x58, 0xb6, 0xed, 0x3a, 0x75, 0x41, 0x0d,
	0xa8, 0xf5, 0x8a, 0x20, 0xf1, 0x68, 0x11, 0x22, 0x4b, 0x9a, 0x36, 0xb4, 0xaa, 0x82, 0xb7, 0x3d,
	0xd0, 0xcb, 0x6a, 0xd6, 0x9e, 0xac, 0x87, 0xf8, 0x55, 0x7b, 0xdc, 0x2a, 0x15, 0x27, 0xc4, 0x1f,
	0x50, 0x89, 0x7f, 0xaa, 0x12, 0x97, 0x4a, 0x5c, 0x90, 0x90, 0x16, 0x94, 0x72, 0xe1, 0xba, 0x47,
	0x4e, 0x68, 0xc6, 0xe3, 0x5d, 0xbb, 0x4b, 0x55, 0xe8, 0x8d, 0x8b, 0xe5, 0xef, 0xf5, 0xfb, 0xbe,
	0xf9, 0xe6, 0x7b, 0x0c, 0xc0, 0x51, 0xe8, 0x85, 0x66, 0x14, 0x87, 0x2c, 0x44, 0x35, 0xfe, 0xdf,
	0x3d, 0x3f, 0x09, 0xc3, 0x89, 0x47, 0xfa, 0x38, 0xa2, 0x7d, 0x1c, 0x04, 0x21, 0xc3, 0x8c, 0x86,
	0x41, 0x92, 0xe9, 0x74, 0xaf, 0x4e, 0x28, 0x73, 0xd3, 0xb1, 0x69, 0x87, 0x7e, 0x7f, 0x12, 0x4e,
	0xc2, 0xbe, 0x60, 0x8f, 0xd3, 0x03, 0x41, 0x09, 0x42, 0xfc, 0x49, 0xf5, 0xeb, 0x25, 0x75, 0x0f,
	0x07, 0x93, 0x85, 0x41, 0xc4, 0x8e, 0x22, 0x92, 0xf4, 0x19, 0xf5, 0x49, 0xc2, 0xb0, 0x1f, 0x2d,
	0xfe, 0x32, 0x63, 0xe3, 0x02, 0xd4, 0xf6, 0x69, 0x30, 0xe9, 0xaa, 0xd0, 0xb4, 0xc8, 0xc3, 0x94,
	0x24, 0xac, 0x0b, 0xd0, 0xb2, 0x48, 0x12, 0x85, 0x41, 0x42, 0x8c, 0x1f, 0x14, 0x68, 0x0c, 0x19,
	0x66, 0x69, 0x52, 0xd4, 0x08, 0x17, 0x1a, 0xe8, 0x2c, 0x34, 0xd2, 0x88, 0xa3, 0x76, 0x94, 0x0d,
	0x65, 0xb3, 0x6e, 0x49, 0x0a, 0x9d, 0x81, 0x86, 0x33, 0x1e, 0x91, 0x38, 0xee, 0x54, 0x36, 0x94,
	0x4d, 0xd5, 0xaa, 0x3b, 0xe3, 0x1b, 0x71, 0x8c, 0xde, 0x86, 0x96, 0x33, 0x1e, 0x05, 0xa1, 0x43,
	0x92, 0x4e, 0x75, 0x43, 0xd9, 0xac, 0x5a, 0x4d, 0x67, 0x7c, 0x97, 0x93, 0x52, 0xf4, 0x30, 0xc5,
	0x4e, 0xd2, 0xa9, 0xe5, 0xa2, 0xaf, 0x39, 0x69, 0xdc, 0x04, 0x75, 0x90, 0x52, 0xcf, 0xb9, 0x43,
	0x13, 0x56, 0x0c, 0xa4, 0x5f, 0x08, 0xe4, 0x12, 0x34, 0xc6, 0x5c, 0x27, 0xe9, 0x28, 0x1b, 0xd5,
	0xcd, 0xf6, 0x56, 0xdb, 0x14, 0x69, 0x17, 0x76, 0x96, 0x14, 0x19, 0xdf, 0xc1, 0xea, 0x76, 0xcc,
	0xe8, 0x01, 0xb6, 0x99, 0xc0, 0xda, 0x9a, 0x63, 0xa1, 0xcb, 0x50, 0x3b, 0xa4, 0x81, 0x23, 0x8e,
	0xb1, 0xbe, 0x75, 0x2a, 0xb3, 0xce, 0x95, 0xcd, 0xdb, 0x34, 0x70, 0x2c, 0xa1, 0xd0, 0xfd, 0xa4,
	0xe0, 0xf4, 0x0a, 0xa8, 0x58, 0xaa, 0xe4, 0x7e, 0xd7, 0xcb, 0x96, 0xd6, 0x42, 0xc1, 0xf8, 0xb5,
	0x09, 0x75, 0x11, 0x0f, 0xba, 0x09, 0x15, 0x9a, 0xb9, 0x52, 0x07, 0x1f, 0x1f, 0x4f, 0xf5, 0xca,
	0xde, 0xce, 0x6c, 0xaa, 0x03, 0x3f, 0xfc, 0x35, 0xe3, 0x0b, 0xea, 0x18, 0x7f, 0x4d, 0x75, 0xbd,
	0x70, 0xaf, 0x36, 0x3e, 0xf2, 0xc8, 0xd1, 0x24, 0xc6, 0x91, 0xdb, 0xe7, 0x4a, 0xe6, 0x9e, 0xb5,
	0x67, 0x55, 0xa8, 0x83, 0x26, 0x00, 0x76, 0x4c, 0x30, 0x23, 0xce, 0x08, 0x33, 0x91, 0xea, 0xf6,
	0x56, 0xd7, 0xcc, 0xca, 0xcb, 0xcc, 0xcb, 0xc0, 0xbc, 0x97, 0xdf, 0xfa, 0xe0, 0xca, 0xb3, 0xa9,
	0xae, 0xcc, 0xa6, 0xfa, 0x46, 0xe6, 0x2a, 0xb1, 0x5d, 0xe2, 0xe3, 0x6b, 0x12, 0x62, 0x9b, 0x5d,
	0x09, 0x23, 0x5e, 0x89, 0xd8, 0x33, 0x9e, 0xfe, 0xa6, 0x2b, 0x96, 0x3a, 0x17, 0x70, 0x47, 0x69,
	0xe4, 0xe4, 0x8e, 0xaa, 0x6f, 0xe8, 0x48, 0x42, 0x2c, 0x3b, 0x9a, 0x0b, 0xd0, 0x1e, 0xd4, 0x13,
	0x86, 0x19, 0x11, 0x35, 0xb0, 0xbe, 0x75, 0xb2, 0x70, 0x8d, 0x26, 0x2f, 0x45, 0x32, 0xd8, 0x98,
	0x4d, 0xf5, 0xf3, 0x25, 0x58, 0x61, 0xb0, 0x80, 0xb4, 0x32, 0x04, 0xe4, 0xc3, 0xaa, 0x1d, 0xfa,
	0x91, 0x47, 0x64, 0xd4, 0xf5, 0xd7, 0x46, 0x6d, 0xca, 0xa8, 0x8d, 0x72, 0x7a, 0x72, 0x90, 0xa5,
	0xb8, 0xdb, 0x05, 0x11, 0xfa, 0x0c, 0x9a, 0x3e, 0x49, 0x12, 0x3c, 0x21, 0x9d, 0x86, 0xb8, 0x59,
	0x63, 0x36, 0xd5, 0x7b, 0x25, 0x24, 0x29, 0x2f, 0x84, 0x9a, 0x9b, 0xf0, 0x04, 0x27, 0x0c, 0xc7,
	0x32, 0xd4, 0xe6, 0x1b, 0x26, 0x58, 0x42, 0x2c, 0x27, 0x78, 0x2e, 0x40, 0xdf, 0x42, 0xfb, 0x80,
	0x06, 0x34, 0x71, 0x33, 0x4f, 0xad, 0xd7, 0x7a, 0xba, 0x2a, 0x3d, 0x5d, 0x2c, 0x79, 0xca, 0x31,
	0x96, 0x5c, 0xc1, 0x42, 0x82, 0x3e, 0x85, 0x86, 0x1d, 0xfa, 0x3e, 0x65, 0x1d, 0x55, 0x64, 0xe4,
	0xe2, 0x6c, 0xaa, 0x5f, 0x78, 0x39, 0xb7, 0x3e, 0x2d, 0x40, 0x58, 0xd2, 0x80, 0x9b, 0x8e, 0x63,
	0x1c, 0xd8, 0x6e, 0x07, 0x5e, 0x61, 0x9a, 0x89, 0x8b, 0xa6, 0x19, 0xc7, 0x60, 0x50, 0x17, 0x95,
	0x82, 0x34, 0x58, 0xbd, 0x1f, 0x1c, 0x06, 0xe1, 0xe3, 0x40, 0xd0, 0xda, 0x0a, 0x6a, 0x43, 0xd3,
	0x4a, 0x83, 0x80, 0x06, 0x13, 0x4d, 0x41, 0x00, 0x8d, 0x5d, 0x4c, 0x3d, 0xe2, 0x68, 0x15, 0xfe,
	0xbf, 0x8f, 0x93, 0x84, 0x38, 0x5a, 0x15, 0xad, 0x42, 0xeb, 0x4b, 0x1c, 0xd8, 0x84, 0x4b, 0x6a,
	0x68, 0x0d, 0xd4, 0xa1, 0xed, 0x12, 0x27, 0xe5, 0x64, 0x9d, 0x23, 0x0c, 0x0f, 0x69, 0x14, 0x11,
	0x47, 0x6b, 0x70, 0xab, 0xbb, 0x21, 0xb3, 0xd2, 0x40, 0x6b, 0x1a, 0x7f, 0x36, 0xa0, 0x95, 0x77,
	0xfd, 0xff, 0xb0, 0xc1, 0xb7, 0x41, 0x3d, 0xa0, 0x1e, 0x19, 0x25, 0xf4, 0x09, 0xc9, 0x46, 0xf3,
	0xe0, 0x9d, 0x25, 0x9c, 0xb9, 0x46, 0x21, 0xeb, 0x2d, 0xce, 0x1c, 0xd2, 0x27, 0x04, 0xed, 0x00,
	0x78, 0xa1, 0x8d, 0xbd, 0x51, 0x84, 0x99, 0x2b, 0xfa, 0x57, 0x1d, 0xbc, 0xbb, 0x54, 0x38, 0x0b,
	0x95, 0x02, 0x88, 0x2a, 0xb8, 0xfb, 0x98, 0xb9, 0xe8, 0x2b, 0x58, 0x75, 0xc2, 0xc7, 0x81, 0x17,
	0x62, 0x67, 0x94, 0xc6, 0x9e, 0xe8, 0x5a, 0x75, 0x70, 0x79, 0x36, 0xd5, 0x2f, 0x95, 0x70, 0x8a,
	0x4a, 0x05, 0xa4, 0x76, 0xce, 0xbf, 0x1f, 0x7b, 0xfc, 0x50, 0x3e, 0xf5, 0xc9, 0x88, 0xaf, 0x41,
	0xd9, 0x94, 0xcb, 0x87, 0x9a, 0x6b, 0x14, 0x0f, 0xc5, 0x99, 0xf7, 0x8e, 0x22, 0x82, 0x3e, 0x87,
	0x56, 0xe2, 0xe2, 0x0f, 0x46, 0x49, 0xea, 0x8b, 0xae, 0x54, 0x07, 0x97, 0x66, 0x53, 0x5d, 0x2f,
	0x77, 0x9d, 0x54, 0x28, 0xf6, 0x35, 0xe7, 0x0d, 0x53, 0x1f, 0xdd, 0xc9, 0xe7, 0x59, 0x4b, 0xcc,
	0xb3, 0xd3, 0x2f, 0x2d, 0x96, 0xff, 0x38, 0xd2, 0x6e, 0xc9, 0x2d, 0xa5, 0xbe, 0x72, 0x4b, 0x0d,
	0xf4, 0xd9, 0x54, 0x3f, 0x57, 0xc2, 0xe2, 0x16, 0x05, 0x28, 0x81, 0x80, 0x76, 0x41, 0x75, 0x71,
	0x32, 0x12, 0x8b, 0xb1, 0x43, 0x44, 0x5d, 0x15, 0x57, 0xe6, 0xe0, 0xfc, 0x6c, 0xaa, 0x77, 0x32,
	0x18, 0x17, 0x27, 0x82, 0x57, 0xcc, 0x4f, 0xce, 0x33, 0x6e, 0xbd, 0xba, 0xd9, 0x56, 0xa1, 0xb5,
	0x2b, 0x67, 0x81, 0xa6, 0xa0, 0x26, 0x54, 0xef, 0x92, 0xc7, 0x5a, 0x05, 0xa9, 0x50, 0xbf, 0x11,
	0xc7, 0x61, 0xac, 0x55, 0x79, 0x33, 0xed, 0x10, 0x31, 0x3f, 0xb5, 0x9a, 0xf1, 0x1e, 0xd4, 0xf8,
	0x01, 0xd0, 0x09, 0x68, 0x4b, 0x20, 0x4e, 0x6a, 0x2b, 0xdc, 0x72, 0x6f, 0x7f, 0x3b, 0x83, 0xd8,
	0xde, 0xbf, 0xad, 0x55, 0x8c, 0x07, 0x50, 0x1f, 0x60, 0x66, 0xbb, 0xff, 0x6a, 0xeb, 0x97, 0xb7,
	0x74, 0xe5, 0x35, 0x5b, 0xfa, 0xfd, 0x8f, 0xa0, 0xb1, 0x13, 0xd3, 0x47, 0x24, 0x46, 0x27, 0x61,
	0x4d, 0x06, 0x92, 0x31, 0xb4, 0x15, 0xde, 0xf0, 0x37, 0x29, 0xbb, 0x95, 0x8e, 0x35, 0x85, 0x0f,
	0x06, 0xe1, 0xe7, 0x90, 0x32, 0xa2, 0x55, 0xb6, 0x7e, 0xaa, 0x40, 0xfb, 0x9b, 0xd0, 0x0b, 0x87,
	0x24, 0x7e, 0x44, 0x6d, 0x5e, 0x38, 0xe2, 0x69, 0x85, 0x50, 0xe6, 0x8a, 0xff, 0x9b, 0xf9, 0xc3,
	0xe5, 0x54, 0x89, 0x27, 0x1f, 0x5b, 0x6b, 0xdf, 0xff, 0xfc, 0xc7, 0x8f, 0x95, 0x26, 0xaa, 0xf7,
	0x23, 0x6e, 0xb7, 0x9b, 0x3f, 0xbd, 0x90, 0xac, 0x99, 0x8c, 0x9a, 0x63, 0x9c, 0x79, 0x89, 0x2b,
	0x51, 0x4e, 0x08, 0x14, 0x15, 0x35, 0xfb, 0x49, 0x66, 0x3d, 0x2c, 0x3c, 0x9e, 0xd0, 0x5b, 0x85,
	0xfc, 0x70, 0xc6, 0x1c, 0xad, 0xb3, 0x2c, 0x90, 0x80, 0xa7, 0x04, 0xe0, 0x1a, 0x6a, 0xf7, 0x45,
	0x3a, 0xaf, 0x7a, 0x1c, 0x67, 0x54, 0x7e, 0x48, 0xa1, 0x6e, 0x39, 0x9f, 0x25, 0xe8, 0x73, 0xff,
	0x28, 0x93, 0xe8, 0x67, 0x05, 0xba, 0x86, 0xd6, 0xfb, 0xf9, 0x0d, 0x08, 0x07, 0x03, 0xf3, 0xd9,
	0x71, 0x4f, 0x79, 0x7e, 0xdc, 0x53, 0x7e, 0x3f, 0xee, 0x29, 0x4f, 0x5f, 0xf4, 0x56, 0x9e, 0xbf,
	0xe8, 0xad, 0xfc, 0xf2, 0xa2, 0xb7, 0xf2, 0xe0, 0xf4, 0x98, 0xc4, 0xec, 0xc8, 0x64, 0xc4, 0x76,
	0xfb, 0x1c, 0xf8, 0x3a, 0xff, 0x8c, 0x1b, 0x62, 0x16, 0x7e, 0xf8, 0x77, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xc3, 0xcf, 0x9b, 0xfd, 0x6d, 0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// YoloServiceClient is the client API for YoloService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type YoloServiceClient interface {
	Ping(ctx context.Context, in *Ping_Request, opts ...grpc.CallOption) (*Ping_Response, error)
	Status(ctx context.Context, in *Status_Request, opts ...grpc.CallOption) (*Status_Response, error)
	BuildList(ctx context.Context, in *BuildList_Request, opts ...grpc.CallOption) (*BuildList_Response, error)
	ArtifactList(ctx context.Context, in *ArtifactList_Request, opts ...grpc.CallOption) (*ArtifactList_Response, error)
}

type yoloServiceClient struct {
	cc *grpc.ClientConn
}

func NewYoloServiceClient(cc *grpc.ClientConn) YoloServiceClient {
	return &yoloServiceClient{cc}
}

func (c *yoloServiceClient) Ping(ctx context.Context, in *Ping_Request, opts ...grpc.CallOption) (*Ping_Response, error) {
	out := new(Ping_Response)
	err := c.cc.Invoke(ctx, "/yolo.YoloService/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yoloServiceClient) Status(ctx context.Context, in *Status_Request, opts ...grpc.CallOption) (*Status_Response, error) {
	out := new(Status_Response)
	err := c.cc.Invoke(ctx, "/yolo.YoloService/Status", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yoloServiceClient) BuildList(ctx context.Context, in *BuildList_Request, opts ...grpc.CallOption) (*BuildList_Response, error) {
	out := new(BuildList_Response)
	err := c.cc.Invoke(ctx, "/yolo.YoloService/BuildList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yoloServiceClient) ArtifactList(ctx context.Context, in *ArtifactList_Request, opts ...grpc.CallOption) (*ArtifactList_Response, error) {
	out := new(ArtifactList_Response)
	err := c.cc.Invoke(ctx, "/yolo.YoloService/ArtifactList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// YoloServiceServer is the server API for YoloService service.
type YoloServiceServer interface {
	Ping(context.Context, *Ping_Request) (*Ping_Response, error)
	Status(context.Context, *Status_Request) (*Status_Response, error)
	BuildList(context.Context, *BuildList_Request) (*BuildList_Response, error)
	ArtifactList(context.Context, *ArtifactList_Request) (*ArtifactList_Response, error)
}

// UnimplementedYoloServiceServer can be embedded to have forward compatible implementations.
type UnimplementedYoloServiceServer struct {
}

func (*UnimplementedYoloServiceServer) Ping(ctx context.Context, req *Ping_Request) (*Ping_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedYoloServiceServer) Status(ctx context.Context, req *Status_Request) (*Status_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Status not implemented")
}
func (*UnimplementedYoloServiceServer) BuildList(ctx context.Context, req *BuildList_Request) (*BuildList_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuildList not implemented")
}
func (*UnimplementedYoloServiceServer) ArtifactList(ctx context.Context, req *ArtifactList_Request) (*ArtifactList_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArtifactList not implemented")
}

func RegisterYoloServiceServer(s *grpc.Server, srv YoloServiceServer) {
	s.RegisterService(&_YoloService_serviceDesc, srv)
}

func _YoloService_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Ping_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YoloServiceServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yolo.YoloService/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YoloServiceServer).Ping(ctx, req.(*Ping_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _YoloService_Status_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Status_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YoloServiceServer).Status(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yolo.YoloService/Status",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YoloServiceServer).Status(ctx, req.(*Status_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _YoloService_BuildList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuildList_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YoloServiceServer).BuildList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yolo.YoloService/BuildList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YoloServiceServer).BuildList(ctx, req.(*BuildList_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _YoloService_ArtifactList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArtifactList_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YoloServiceServer).ArtifactList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yolo.YoloService/ArtifactList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YoloServiceServer).ArtifactList(ctx, req.(*ArtifactList_Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _YoloService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "yolo.YoloService",
	HandlerType: (*YoloServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _YoloService_Ping_Handler,
		},
		{
			MethodName: "Status",
			Handler:    _YoloService_Status_Handler,
		},
		{
			MethodName: "BuildList",
			Handler:    _YoloService_BuildList_Handler,
		},
		{
			MethodName: "ArtifactList",
			Handler:    _YoloService_ArtifactList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "yolo.proto",
}

func (m *Ping) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Ping) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Ping) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Ping_Request) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Ping_Request) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Ping_Request) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Ping_Response) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Ping_Response) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Ping_Response) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Status) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Status) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Status) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Status_Request) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Status_Request) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Status_Request) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *Status_Response) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Status_Response) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Status_Response) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.DbQuads != 0 {
		i = encodeVarintYolo(dAtA, i, uint64(m.DbQuads))
		i--
		dAtA[i] = 0x20
	}
	if m.DbNodes != 0 {
		i = encodeVarintYolo(dAtA, i, uint64(m.DbNodes))
		i--
		dAtA[i] = 0x18
	}
	if len(m.DbErr) > 0 {
		i -= len(m.DbErr)
		copy(dAtA[i:], m.DbErr)
		i = encodeVarintYolo(dAtA, i, uint64(len(m.DbErr)))
		i--
		dAtA[i] = 0x12
	}
	if m.Uptime != 0 {
		i = encodeVarintYolo(dAtA, i, uint64(m.Uptime))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *BuildList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BuildList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BuildList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *BuildList_Request) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BuildList_Request) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BuildList_Request) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *BuildList_Response) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BuildList_Response) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BuildList_Response) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Builds) > 0 {
		for iNdEx := len(m.Builds) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Builds[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintYolo(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ArtifactList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ArtifactList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ArtifactList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *ArtifactList_Request) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ArtifactList_Request) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ArtifactList_Request) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Kind != 0 {
		i = encodeVarintYolo(dAtA, i, uint64(m.Kind))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ArtifactList_Response) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ArtifactList_Response) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ArtifactList_Response) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Artifacts) > 0 {
		for iNdEx := len(m.Artifacts) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Artifacts[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintYolo(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Build) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Build) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Build) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Branch) > 0 {
		i -= len(m.Branch)
		copy(dAtA[i:], m.Branch)
		i = encodeVarintYolo(dAtA, i, uint64(len(m.Branch)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.Commit) > 0 {
		i -= len(m.Commit)
		copy(dAtA[i:], m.Commit)
		i = encodeVarintYolo(dAtA, i, uint64(len(m.Commit)))
		i--
		dAtA[i] = 0x4a
	}
	if m.FinishedAt != nil {
		n1, err1 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.FinishedAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.FinishedAt):])
		if err1 != nil {
			return 0, err1
		}
		i -= n1
		i = encodeVarintYolo(dAtA, i, uint64(n1))
		i--
		dAtA[i] = 0x42
	}
	if m.StartedAt != nil {
		n2, err2 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.StartedAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.StartedAt):])
		if err2 != nil {
			return 0, err2
		}
		i -= n2
		i = encodeVarintYolo(dAtA, i, uint64(n2))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintYolo(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x32
	}
	if m.CompletedAt != nil {
		n3, err3 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.CompletedAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.CompletedAt):])
		if err3 != nil {
			return 0, err3
		}
		i -= n3
		i = encodeVarintYolo(dAtA, i, uint64(n3))
		i--
		dAtA[i] = 0x2a
	}
	if m.State != 0 {
		i = encodeVarintYolo(dAtA, i, uint64(m.State))
		i--
		dAtA[i] = 0x20
	}
	if m.UpdatedAt != nil {
		n4, err4 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.UpdatedAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.UpdatedAt):])
		if err4 != nil {
			return 0, err4
		}
		i -= n4
		i = encodeVarintYolo(dAtA, i, uint64(n4))
		i--
		dAtA[i] = 0x1a
	}
	if m.CreatedAt != nil {
		n5, err5 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.CreatedAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedAt):])
		if err5 != nil {
			return 0, err5
		}
		i -= n5
		i = encodeVarintYolo(dAtA, i, uint64(n5))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ID) > 0 {
		i -= len(m.ID)
		copy(dAtA[i:], m.ID)
		i = encodeVarintYolo(dAtA, i, uint64(len(m.ID)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Artifact) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Artifact) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Artifact) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.HasBuild != nil {
		{
			size, err := m.HasBuild.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintYolo(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xaa
	}
	if m.Kind != 0 {
		i = encodeVarintYolo(dAtA, i, uint64(m.Kind))
		i--
		dAtA[i] = 0x48
	}
	if m.State != 0 {
		i = encodeVarintYolo(dAtA, i, uint64(m.State))
		i--
		dAtA[i] = 0x40
	}
	if len(m.Sha1Sum) > 0 {
		i -= len(m.Sha1Sum)
		copy(dAtA[i:], m.Sha1Sum)
		i = encodeVarintYolo(dAtA, i, uint64(len(m.Sha1Sum)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.MimeType) > 0 {
		i -= len(m.MimeType)
		copy(dAtA[i:], m.MimeType)
		i = encodeVarintYolo(dAtA, i, uint64(len(m.MimeType)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.DownloadUrl) > 0 {
		i -= len(m.DownloadUrl)
		copy(dAtA[i:], m.DownloadUrl)
		i = encodeVarintYolo(dAtA, i, uint64(len(m.DownloadUrl)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.LocalPath) > 0 {
		i -= len(m.LocalPath)
		copy(dAtA[i:], m.LocalPath)
		i = encodeVarintYolo(dAtA, i, uint64(len(m.LocalPath)))
		i--
		dAtA[i] = 0x22
	}
	if m.FileSize != 0 {
		i = encodeVarintYolo(dAtA, i, uint64(m.FileSize))
		i--
		dAtA[i] = 0x18
	}
	if m.CreatedAt != nil {
		n7, err7 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.CreatedAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedAt):])
		if err7 != nil {
			return 0, err7
		}
		i -= n7
		i = encodeVarintYolo(dAtA, i, uint64(n7))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ID) > 0 {
		i -= len(m.ID)
		copy(dAtA[i:], m.ID)
		i = encodeVarintYolo(dAtA, i, uint64(len(m.ID)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Batch) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Batch) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Batch) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Artifacts) > 0 {
		for iNdEx := len(m.Artifacts) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Artifacts[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintYolo(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Builds) > 0 {
		for iNdEx := len(m.Builds) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Builds[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintYolo(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintYolo(dAtA []byte, offset int, v uint64) int {
	offset -= sovYolo(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Ping) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Ping_Request) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Ping_Response) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Status) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Status_Request) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *Status_Response) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Uptime != 0 {
		n += 1 + sovYolo(uint64(m.Uptime))
	}
	l = len(m.DbErr)
	if l > 0 {
		n += 1 + l + sovYolo(uint64(l))
	}
	if m.DbNodes != 0 {
		n += 1 + sovYolo(uint64(m.DbNodes))
	}
	if m.DbQuads != 0 {
		n += 1 + sovYolo(uint64(m.DbQuads))
	}
	return n
}

func (m *BuildList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *BuildList_Request) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *BuildList_Response) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Builds) > 0 {
		for _, e := range m.Builds {
			l = e.Size()
			n += 1 + l + sovYolo(uint64(l))
		}
	}
	return n
}

func (m *ArtifactList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *ArtifactList_Request) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Kind != 0 {
		n += 1 + sovYolo(uint64(m.Kind))
	}
	return n
}

func (m *ArtifactList_Response) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Artifacts) > 0 {
		for _, e := range m.Artifacts {
			l = e.Size()
			n += 1 + l + sovYolo(uint64(l))
		}
	}
	return n
}

func (m *Build) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ID)
	if l > 0 {
		n += 1 + l + sovYolo(uint64(l))
	}
	if m.CreatedAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedAt)
		n += 1 + l + sovYolo(uint64(l))
	}
	if m.UpdatedAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.UpdatedAt)
		n += 1 + l + sovYolo(uint64(l))
	}
	if m.State != 0 {
		n += 1 + sovYolo(uint64(m.State))
	}
	if m.CompletedAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.CompletedAt)
		n += 1 + l + sovYolo(uint64(l))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovYolo(uint64(l))
	}
	if m.StartedAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.StartedAt)
		n += 1 + l + sovYolo(uint64(l))
	}
	if m.FinishedAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.FinishedAt)
		n += 1 + l + sovYolo(uint64(l))
	}
	l = len(m.Commit)
	if l > 0 {
		n += 1 + l + sovYolo(uint64(l))
	}
	l = len(m.Branch)
	if l > 0 {
		n += 1 + l + sovYolo(uint64(l))
	}
	return n
}

func (m *Artifact) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ID)
	if l > 0 {
		n += 1 + l + sovYolo(uint64(l))
	}
	if m.CreatedAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedAt)
		n += 1 + l + sovYolo(uint64(l))
	}
	if m.FileSize != 0 {
		n += 1 + sovYolo(uint64(m.FileSize))
	}
	l = len(m.LocalPath)
	if l > 0 {
		n += 1 + l + sovYolo(uint64(l))
	}
	l = len(m.DownloadUrl)
	if l > 0 {
		n += 1 + l + sovYolo(uint64(l))
	}
	l = len(m.MimeType)
	if l > 0 {
		n += 1 + l + sovYolo(uint64(l))
	}
	l = len(m.Sha1Sum)
	if l > 0 {
		n += 1 + l + sovYolo(uint64(l))
	}
	if m.State != 0 {
		n += 1 + sovYolo(uint64(m.State))
	}
	if m.Kind != 0 {
		n += 1 + sovYolo(uint64(m.Kind))
	}
	if m.HasBuild != nil {
		l = m.HasBuild.Size()
		n += 2 + l + sovYolo(uint64(l))
	}
	return n
}

func (m *Batch) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Builds) > 0 {
		for _, e := range m.Builds {
			l = e.Size()
			n += 1 + l + sovYolo(uint64(l))
		}
	}
	if len(m.Artifacts) > 0 {
		for _, e := range m.Artifacts {
			l = e.Size()
			n += 1 + l + sovYolo(uint64(l))
		}
	}
	return n
}

func sovYolo(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozYolo(x uint64) (n int) {
	return sovYolo(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Ping) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYolo
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Ping: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Ping: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipYolo(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthYolo
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthYolo
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Ping_Request) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYolo
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Request: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Request: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipYolo(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthYolo
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthYolo
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Ping_Response) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYolo
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Response: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Response: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipYolo(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthYolo
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthYolo
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Status) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYolo
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Status: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Status: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipYolo(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthYolo
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthYolo
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Status_Request) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYolo
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Request: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Request: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipYolo(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthYolo
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthYolo
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Status_Response) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYolo
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Response: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Response: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uptime", wireType)
			}
			m.Uptime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Uptime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DbErr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolo
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolo
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DbErr = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DbNodes", wireType)
			}
			m.DbNodes = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DbNodes |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DbQuads", wireType)
			}
			m.DbQuads = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DbQuads |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipYolo(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthYolo
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthYolo
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BuildList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYolo
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BuildList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BuildList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipYolo(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthYolo
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthYolo
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BuildList_Request) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYolo
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Request: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Request: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipYolo(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthYolo
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthYolo
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BuildList_Response) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYolo
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Response: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Response: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Builds", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolo
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolo
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Builds = append(m.Builds, &Build{})
			if err := m.Builds[len(m.Builds)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYolo(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthYolo
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthYolo
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ArtifactList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYolo
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ArtifactList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ArtifactList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipYolo(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthYolo
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthYolo
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ArtifactList_Request) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYolo
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Request: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Request: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Kind", wireType)
			}
			m.Kind = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Kind |= Artifact_Kind(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipYolo(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthYolo
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthYolo
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ArtifactList_Response) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYolo
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Response: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Response: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Artifacts", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolo
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolo
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Artifacts = append(m.Artifacts, &Artifact{})
			if err := m.Artifacts[len(m.Artifacts)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYolo(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthYolo
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthYolo
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Build) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYolo
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Build: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Build: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolo
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolo
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ID = github_com_cayleygraph_quad.IRI(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolo
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolo
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreatedAt == nil {
				m.CreatedAt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.CreatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolo
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolo
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UpdatedAt == nil {
				m.UpdatedAt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.UpdatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			m.State = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.State |= Build_State(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CompletedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolo
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolo
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CompletedAt == nil {
				m.CompletedAt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.CompletedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolo
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolo
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolo
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolo
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.StartedAt == nil {
				m.StartedAt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.StartedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FinishedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolo
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolo
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FinishedAt == nil {
				m.FinishedAt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.FinishedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Commit", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolo
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolo
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Commit = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Branch", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolo
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolo
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Branch = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYolo(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthYolo
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthYolo
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Artifact) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYolo
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Artifact: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Artifact: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolo
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolo
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ID = github_com_cayleygraph_quad.IRI(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolo
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolo
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreatedAt == nil {
				m.CreatedAt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.CreatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileSize", wireType)
			}
			m.FileSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FileSize |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalPath", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolo
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolo
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LocalPath = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DownloadUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolo
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolo
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DownloadUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MimeType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolo
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolo
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MimeType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sha1Sum", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthYolo
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthYolo
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sha1Sum = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			m.State = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.State |= Artifact_State(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Kind", wireType)
			}
			m.Kind = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Kind |= Artifact_Kind(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 101:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasBuild", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolo
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolo
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.HasBuild == nil {
				m.HasBuild = &Build{}
			}
			if err := m.HasBuild.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYolo(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthYolo
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthYolo
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Batch) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowYolo
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Batch: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Batch: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Builds", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolo
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolo
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Builds = append(m.Builds, &Build{})
			if err := m.Builds[len(m.Builds)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Artifacts", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowYolo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthYolo
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthYolo
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Artifacts = append(m.Artifacts, &Artifact{})
			if err := m.Artifacts[len(m.Artifacts)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipYolo(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthYolo
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthYolo
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipYolo(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowYolo
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowYolo
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowYolo
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthYolo
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupYolo
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthYolo
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthYolo        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowYolo          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupYolo = fmt.Errorf("proto: unexpected end of group")
)
